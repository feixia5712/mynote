{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2(\u542b\u652f\u6301\u7684markdown\u8bed\u6cd5) \u672c\u6587\u4e3b\u9898 mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548cmkdocs-material\u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5 mkdocs-material\u662f\u4ec0\u4e48 \u7b26\u5408google material ui\u89c4\u8303\u7684\u9759\u6001\u6587\u6863\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4f7f\u7528markdown\u8fdb\u884c\u6587\u6863\u4e66\u5199 mkdocs python\u7f16\u5199\u7684markdown\u89e3\u91ca\u5668\u3001\u7f16\u8bd1\u5668\uff0c\u5e26\u6709\u672c\u5730cli\u5de5\u5177 \u81ea\u5e26\u57fa\u4e8eTornado\u7684\u5c0f\u578bhttp\u670d\u52a1\uff0c\u7528\u4e8e\u672c\u5730\u8c03\u8bd5 \u5185\u7f6e\u4e00\u952e\u5f0f\u53d1\u5e03\u81f3GitHub Pages \u5185\u7f6emkdocs\u98ce\u683c\u3001readthedocs\u98ce\u683c\u7684\u4e3b\u9898\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u8c03\u7528python\u6a21\u5757\u5b9e\u73b0\u8bed\u6cd5\u53ca\u6e32\u67d3\u7684\u6269\u5c55 mkdocs-material python\u6a21\u5757\uff0c\u7b26\u5408google material ui\u89c4\u8303\u7684mkdocs\u81ea\u5b9a\u4e49\u4e3b\u9898 \u9488\u5bf9\u7279\u5b9a\u8bed\u6cd5\u3001\u529f\u80fd\u505a\u4e86\u6e32\u67d3\u4f18\u5316 \u6839\u636e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u9875\u9762\u5c3a\u5bf8\u81ea\u52a8\u7f29\u653e\uff0c\u5bf9PC\u3001\u79fb\u52a8\u8bbe\u5907\u90fd\u53cb\u597d \u4e30\u5bcc\u7684\u9875\u9762\u914d\u8272\uff0c\u591a\u8fbe19\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u60ac\u505c\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u6700\u4f73\u5b9e\u8df5: \u5efa\u8bae\u4ec5\u4f7f\u7528 mkdocs-material \u5b98\u7f51\u652f\u6301\u7684\u8bed\u6cd5\u3001\u529f\u80fd\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6709\u6e32\u67d3\u65b9\u9762\u7684\u5f02\u5e38\uff0c\u9664\u975e\u81ea\u5df1\u5bf9mkdocs\u3001mkdocs-material\u3001html\u3001js\u3001css\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u672c\u6587\u6240\u6709\u9610\u8ff0\u7684\u8bed\u6cd5\u5747\u662fmkdocs-material\u5b98\u7f51\u63a8\u8350\u7684\u3002 \u5199\u5728\u524d\u9762 \u672c\u6587\u5927\u90e8\u5206\u5185\u5bb9\u5747\u662f\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027\u3002 \u672c\u6587\u4e3b\u8981\u662f\u9610\u8ff0markdown\u8bed\u6cd5\uff0c\u56e0\u6b64\u5173\u4e8emkdocs-material\u7684\u9ad8\u7ea7\u914d\u7f6e\u3001python markdown\u548cpymdowx\u6a21\u5757\u6240\u652f\u6301\u7684markdown\u8bed\u6cd5\u4e0d\u5728\u672c\u6587\u9610\u8ff0\u8303\u56f4\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u5230\u76f8\u5e94\u5b98\u7f51\u4e86\u89e3\uff0c\u5177\u4f53\u5982\u4e0b: mkdocs mkdocs-material python markdown pymdownx","title":"\u4e00. \u4ecb\u7ecd"},{"location":"#mkdocs-materialmarkdown","text":"","title":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2(\u542b\u652f\u6301\u7684markdown\u8bed\u6cd5)"},{"location":"#_1","text":"mkdocs-material\u5165\u95e8\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u8fd0\u884c\u3001\u53d1\u5e03\u81f3github-pages\u53ca\u4e2a\u4eba\u7ad9\u70b9 markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548cmkdocs-material\u652f\u6301\u7684\u6269\u5c55\u8bed\u6cd5","title":"\u672c\u6587\u4e3b\u9898"},{"location":"#mkdocs-material","text":"\u7b26\u5408google material ui\u89c4\u8303\u7684\u9759\u6001\u6587\u6863\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u4f7f\u7528markdown\u8fdb\u884c\u6587\u6863\u4e66\u5199 mkdocs python\u7f16\u5199\u7684markdown\u89e3\u91ca\u5668\u3001\u7f16\u8bd1\u5668\uff0c\u5e26\u6709\u672c\u5730cli\u5de5\u5177 \u81ea\u5e26\u57fa\u4e8eTornado\u7684\u5c0f\u578bhttp\u670d\u52a1\uff0c\u7528\u4e8e\u672c\u5730\u8c03\u8bd5 \u5185\u7f6e\u4e00\u952e\u5f0f\u53d1\u5e03\u81f3GitHub Pages \u5185\u7f6emkdocs\u98ce\u683c\u3001readthedocs\u98ce\u683c\u7684\u4e3b\u9898\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u8c03\u7528python\u6a21\u5757\u5b9e\u73b0\u8bed\u6cd5\u53ca\u6e32\u67d3\u7684\u6269\u5c55 mkdocs-material python\u6a21\u5757\uff0c\u7b26\u5408google material ui\u89c4\u8303\u7684mkdocs\u81ea\u5b9a\u4e49\u4e3b\u9898 \u9488\u5bf9\u7279\u5b9a\u8bed\u6cd5\u3001\u529f\u80fd\u505a\u4e86\u6e32\u67d3\u4f18\u5316 \u6839\u636e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u9875\u9762\u5c3a\u5bf8\u81ea\u52a8\u7f29\u653e\uff0c\u5bf9PC\u3001\u79fb\u52a8\u8bbe\u5907\u90fd\u53cb\u597d \u4e30\u5bcc\u7684\u9875\u9762\u914d\u8272\uff0c\u591a\u8fbe19\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u60ac\u505c\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u6700\u4f73\u5b9e\u8df5: \u5efa\u8bae\u4ec5\u4f7f\u7528 mkdocs-material \u5b98\u7f51\u652f\u6301\u7684\u8bed\u6cd5\u3001\u529f\u80fd\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6709\u6e32\u67d3\u65b9\u9762\u7684\u5f02\u5e38\uff0c\u9664\u975e\u81ea\u5df1\u5bf9mkdocs\u3001mkdocs-material\u3001html\u3001js\u3001css\u6709\u4e00\u5b9a\u7684\u4e86\u89e3\u3002 \u672c\u6587\u6240\u6709\u9610\u8ff0\u7684\u8bed\u6cd5\u5747\u662fmkdocs-material\u5b98\u7f51\u63a8\u8350\u7684\u3002","title":"mkdocs-material\u662f\u4ec0\u4e48"},{"location":"#_2","text":"\u672c\u6587\u5927\u90e8\u5206\u5185\u5bb9\u5747\u662f\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027\u3002 \u672c\u6587\u4e3b\u8981\u662f\u9610\u8ff0markdown\u8bed\u6cd5\uff0c\u56e0\u6b64\u5173\u4e8emkdocs-material\u7684\u9ad8\u7ea7\u914d\u7f6e\u3001python markdown\u548cpymdowx\u6a21\u5757\u6240\u652f\u6301\u7684markdown\u8bed\u6cd5\u4e0d\u5728\u672c\u6587\u9610\u8ff0\u8303\u56f4\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u5230\u76f8\u5e94\u5b98\u7f51\u4e86\u89e3\uff0c\u5177\u4f53\u5982\u4e0b: mkdocs mkdocs-material python markdown pymdownx","title":"\u5199\u5728\u524d\u9762"},{"location":"about/","text":"Collectum dum palmis si hominum colla Ausonia undique agros sequitur premunt meque sensus Lorem markdownum sorores; patruelis cutem. Non et parenti, Liber illum : das principium forma adnuerat celant delabitur; nec in sed pars dixit. Pectore rutilis diurnis talia vulnera, an trunco tenebris vestigia quem et sensus; signa quis. Voces irasci, sensit erat veni veste , quam partes linguisque, florentemque numina postera. Super aetas terramque cornibus aliudque nodus ulla sic scitatur, sine artisque nomine passa meliora reppulit. Adloquitur situs inmittitur victi virginea insilit ferarum vixque induitur generique ebur: fata. Nam solutis carmine . In multa rorantia efflant Epidauria pater illas baculo capitisque numina, mihi di pueri removere audaci gratissima saevo Styga respicit. Postquam oriuntur Crimen tua illam discedit infelix austroque turis intremuere levibus caelo haec? Mutet est socios Achilles ille, quarum tot utque, ingrederis fuerit . Ubi grandine, arma bona , Hymetti non prima. Patre arduus temeraria te tradat calores in senior giganteis tigris Priamus. Supplex ore timeas conclamat coniuge petenda spretae Vulnere efficiet lymphamque amore dederat lassa Apollinei committi Bacchum Omnia festinat postes permittat de caput terra Muros et persequar pondus cogente At requirit Vocatum meritumque plena Autumni conexis iuvenes Iunonis fontem, quem cum ambustique ut suum vindicat, quod. Mitia pariter Marathon; et hinc de umidus. Suum facesque, frigora et habetur longa fluminaque terra et odium iubet indoluit, non videre, se? Natus profanus flectitur manuque formae Arcade . Tot morte , sed partem dubie! Vires gravi intra auditos forte nam , rubor est, ipso . Summis aequor! Erat hinc virgo contortam pater cadentum evertere aliquas, viri Issen venter, venisse dum gloria est agitur sed. Solet petit vadit palmite, semihomines natarum robora; fit sic exhortor . Digna senecta acumine rotatis Achivos sed.","title":"Collectum dum palmis si hominum colla"},{"location":"about/#collectum-dum-palmis-si-hominum-colla","text":"","title":"Collectum dum palmis si hominum colla"},{"location":"about/#ausonia-undique-agros-sequitur-premunt-meque-sensus","text":"Lorem markdownum sorores; patruelis cutem. Non et parenti, Liber illum : das principium forma adnuerat celant delabitur; nec in sed pars dixit. Pectore rutilis diurnis talia vulnera, an trunco tenebris vestigia quem et sensus; signa quis. Voces irasci, sensit erat veni veste , quam partes linguisque, florentemque numina postera. Super aetas terramque cornibus aliudque nodus ulla sic scitatur, sine artisque nomine passa meliora reppulit. Adloquitur situs inmittitur victi virginea insilit ferarum vixque induitur generique ebur: fata. Nam solutis carmine . In multa rorantia efflant Epidauria pater illas baculo capitisque numina, mihi di pueri removere audaci gratissima saevo Styga respicit.","title":"Ausonia undique agros sequitur premunt meque sensus"},{"location":"about/#postquam-oriuntur","text":"Crimen tua illam discedit infelix austroque turis intremuere levibus caelo haec? Mutet est socios Achilles ille, quarum tot utque, ingrederis fuerit . Ubi grandine, arma bona , Hymetti non prima. Patre arduus temeraria te tradat calores in senior giganteis tigris Priamus. Supplex ore timeas conclamat coniuge petenda spretae Vulnere efficiet lymphamque amore dederat lassa Apollinei committi Bacchum Omnia festinat postes permittat de caput terra Muros et persequar pondus cogente At requirit","title":"Postquam oriuntur"},{"location":"about/#vocatum-meritumque-plena","text":"Autumni conexis iuvenes Iunonis fontem, quem cum ambustique ut suum vindicat, quod. Mitia pariter Marathon; et hinc de umidus. Suum facesque, frigora et habetur longa fluminaque terra et odium iubet indoluit, non videre, se? Natus profanus flectitur manuque formae Arcade . Tot morte , sed partem dubie! Vires gravi intra auditos forte nam , rubor est, ipso . Summis aequor! Erat hinc virgo contortam pater cadentum evertere aliquas, viri Issen venter, venisse dum gloria est agitur sed. Solet petit vadit palmite, semihomines natarum robora; fit sic exhortor . Digna senecta acumine rotatis Achivos sed.","title":"Vocatum meritumque plena"},{"location":"contact/","text":"E-mail\u5730\u5740:","title":"\u516d. \u8054\u7cfb\u65b9\u5f0f"},{"location":"recommend/","text":"\u5982\u679c\u5e0c\u671b\u81ea\u5df1\u6240\u5199\u7684markdown\u53ef\u4ee5\u517c\u5bb9\u5404\u4e2amarkdown\u7f16\u8f91\u5668\uff0c\u90a3\u4e48\u53ea\u9700\u4e86\u89e3markdown\u7684\u4f20\u7edf\u8bed\u6cd5\u5373\u53ef\uff0c\u8fd9\u91cc\u63a8\u8350\u4e00\u7bc7\u6587\u7ae0 Markdown\u57fa\u672c\u8bed\u6cd5 \u3002 \u5982\u679c\u60f3\u8ba9\u81ea\u5df1\u6240\u5199\u7684markdown\u53d1\u5e03\u5230web\u670d\u52a1\u5668\uff0c\u4f8b\u5982GitHub Pages\u3001\u81ea\u5df1\u642d\u5efa\u7684HTTP Server\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u8bed\u6cd5\uff0c\u4ee5\u5b9e\u73b0\u4e30\u5bcc\u591a\u6837\u7684\u6e32\u67d3\u6548\u679c\u3002 \u7b14\u8005\u5efa\u8bae\uff1a\u5c3d\u91cf\u4f7f\u7528\u4f20\u7edf\u8bed\u6cd5\uff0c\u53ea\u5728\u5fc5\u8981\u65f6\u5019\u624d\u4f7f\u7528\u672c\u6587\u4ecb\u7ecd\u7684\u8bed\u6cd5\u3002\u56e0\u4e3a\u6392\u7248\u7b80\u6d01\u3001\u6761\u7406\u6e05\u6670\u624d\u80fd\u5e26\u6765\u6700\u8212\u670d\u7684\u9605\u8bfb\u611f\u53d7\u3002","title":"\u4e94. \u4f7f\u7528\u5efa\u8bae"},{"location":"appendix/baidu_tongji/","text":"\u5148\u5728\u767e\u5ea6\u7edf\u8ba1\u91cc\u521b\u5efa\u6dfb\u52a0\u7ad9\u70b9\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: \u786e\u5b9a\u540e\u4f1a\u770b\u5230javascript\u4ee3\u7801\uff0c\u590d\u5236\u4ee3\u7801 \u5728docs\u76ee\u5f55\u4e0b\u65b0\u5efajs\u76ee\u5f55\uff0c\u5e76\u5728docs/js\u76ee\u5f55\u91cc\u653e\u7f6ebaidu-tongji.js\uff0c\u5c06\u590d\u5236\u7684\u4ee3\u7801\u7c98\u8d34\u8fdb\u6765\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: var _hmt = _hmt || []; ( function () { var hm = document . createElement ( script ); hm . src = https://hm.baidu.com/hm.js?51fafb2ac8f80ecf43b05bb4cc281020 ; var s = document . getElementsByTagName ( script )[ 0 ]; s . parentNode . insertBefore ( hm , s ); })(); \u6700\u540e\u5728mkdocs.yml\u91cc\u65b0\u589e\u5982\u4e0b\u914d\u7f6e: extra_javascript : - js/baidu-tongji.js \u6548\u679c: js\u4f1a\u81ea\u52a8\u52a0\u5728 \u524d\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b:","title":"3. \u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1"},{"location":"appendix/color/","text":"\u4ecb\u7ecd mkdocs-material\u652f\u6301google material ui\u89c4\u8303\u5b9a\u4e49\u768419\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u4f7f\u7528 \u5728mkdocs.yml\u91cc\u6dfb\u52a0\u914d\u7f6e\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: extra : palette : primary : Blue Grey accent : Pink primary\u548caccent\u7684\u9ed8\u8ba4\u503c\u5747\u662f\"Indigo\" 19\u79cd\u4e3b\u4f53\u914d\u8272 \u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u4e3b\u4f53\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) }) 16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272 \u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"4. \u914d\u8272"},{"location":"appendix/color/#_1","text":"mkdocs-material\u652f\u6301google material ui\u89c4\u8303\u5b9a\u4e49\u768419\u79cd\u4e3b\u4f53\u914d\u8272\u548c16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272","title":"\u4ecb\u7ecd"},{"location":"appendix/color/#_2","text":"\u5728mkdocs.yml\u91cc\u6dfb\u52a0\u914d\u7f6e\uff0c\u4ee5\u672c\u7ad9\u4e3a\u4f8b: extra : palette : primary : Blue Grey accent : Pink primary\u548caccent\u7684\u9ed8\u8ba4\u503c\u5747\u662f\"Indigo\"","title":"\u4f7f\u7528"},{"location":"appendix/color/#19","text":"\u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u4e3b\u4f53\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) })","title":"19\u79cd\u4e3b\u4f53\u914d\u8272"},{"location":"appendix/color/#16","text":"\u9f20\u6807\u70b9\u51fb\u5373\u53ef\u4e34\u65f6\u6539\u53d8\u5f53\u524d\u9875\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u989c\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"16\u79cd\u9f20\u6807\u60ac\u505c\u8d85\u94fe\u63a5\u6587\u5b57\u914d\u8272"},{"location":"appendix/emoji_shortname/","text":"\u8be5\u8868\u683c\u4e3aemojione-3.1.2(pymdownx-4.0\u96c6\u6210)\u7684\u5168\u540d\u548c\u77ed\u540d\u6620\u5c04\u8868\uff0c\u51712666\u4e2a \u5168\u540d \u77ed\u540d hundred points :100: input numbers :1234: pool 8 ball :8ball: A button (blood type) :a: AB button (blood type) :ab: input latin letters :abc: input latin lowercase :abcd: Japanese \\u201cacceptable\\u201d button :accept: adult :adult: adult: light skin tone :adult_tone1: adult: medium-light skin tone :adult_tone2: adult: medium skin tone :adult_tone3: adult: medium-dark skin tone :adult_tone4: adult: dark skin tone :adult_tone5: aerial tramway :aerial_tramway: airplane :airplane: airplane arrival :airplane_arriving: airplane departure :airplane_departure: small airplane :airplane_small: alarm clock :alarm_clock: alembic :alembic: alien :alien: ambulance :ambulance: amphora :amphora: anchor :anchor: baby angel :angel: baby angel: light skin tone :angel_tone1: baby angel: medium-light skin tone :angel_tone2: baby angel: medium skin tone :angel_tone3: baby angel: medium-dark skin tone :angel_tone4: baby angel: dark skin tone :angel_tone5: anger symbol :anger: right anger bubble :anger_right: angry face :angry: anguished face :anguished: ant :ant: red apple :apple: Aquarius :aquarius: Aries :aries: reverse button :arrow_backward: fast down button :arrow_double_down: fast up button :arrow_double_up: down arrow :arrow_down: down button :arrow_down_small: play button :arrow_forward: right arrow curving down :arrow_heading_down: right arrow curving up :arrow_heading_up: left arrow :arrow_left: down-left arrow :arrow_lower_left: down-right arrow :arrow_lower_right: right arrow :arrow_right: left arrow curving right :arrow_right_hook: up arrow :arrow_up: up-down arrow :arrow_up_down: up button :arrow_up_small: up-left arrow :arrow_upper_left: up-right arrow :arrow_upper_right: clockwise vertical arrows :arrows_clockwise: anticlockwise arrows button :arrows_counterclockwise: artist palette :art: articulated lorry :articulated_lorry: keycap: * :asterisk: asterisk :asterisk_symbol: astonished face :astonished: running shoe :athletic_shoe: ATM sign :atm: atom symbol :atom: avocado :avocado: B button (blood type) :b: baby :baby: baby bottle :baby_bottle: baby chick :baby_chick: baby symbol :baby_symbol: baby: light skin tone :baby_tone1: baby: medium-light skin tone :baby_tone2: baby: medium skin tone :baby_tone3: baby: medium-dark skin tone :baby_tone4: baby: dark skin tone :baby_tone5: BACK arrow :back: bacon :bacon: badminton :badminton: baggage claim :baggage_claim: balloon :balloon: ballot box with ballot :ballot_box: ballot box with check :ballot_box_with_check: pine decoration :bamboo: banana :banana: double exclamation mark :bangbang: bank :bank: bar chart :bar_chart: barber pole :barber: baseball :baseball: basketball :basketball: bat :bat: person taking bath :bath: person taking bath: light skin tone :bath_tone1: person taking bath: medium-light skin tone :bath_tone2: person taking bath: medium skin tone :bath_tone3: person taking bath: medium-dark skin tone :bath_tone4: person taking bath: dark skin tone :bath_tone5: bathtub :bathtub: battery :battery: beach with umbrella :beach: umbrella on ground :beach_umbrella: bear face :bear: bearded person :bearded_person: bearded person: light skin tone :bearded_person_tone1: bearded person: medium-light skin tone :bearded_person_tone2: bearded person: medium skin tone :bearded_person_tone3: bearded person: medium-dark skin tone :bearded_person_tone4: bearded person: dark skin tone :bearded_person_tone5: bed :bed: honeybee :bee: beer mug :beer: clinking beer mugs :beers: lady beetle :beetle: Japanese symbol for beginner :beginner: bell :bell: bellhop bell :bellhop: bento box :bento: bicycle :bike: bikini :bikini: billed cap :billed_cap: biohazard :biohazard: bird :bird: birthday cake :birthday: black circle :black_circle: black heart :black_heart: joker :black_joker: black large square :black_large_square: black medium-small square :black_medium_small_square: black medium square :black_medium_square: black nib :black_nib: black small square :black_small_square: black square button :black_square_button: blond-haired man :blond-haired_man: blond-haired man: light skin tone :blond-haired_man_tone1: blond-haired man: medium-light skin tone :blond-haired_man_tone2: blond-haired man: medium skin tone :blond-haired_man_tone3: blond-haired man: medium-dark skin tone :blond-haired_man_tone4: blond-haired man: dark skin tone :blond-haired_man_tone5: blond-haired woman :blond-haired_woman: blond-haired woman: light skin tone :blond-haired_woman_tone1: blond-haired woman: medium-light skin tone :blond-haired_woman_tone2: blond-haired woman: medium skin tone :blond-haired_woman_tone3: blond-haired woman: medium-dark skin tone :blond-haired_woman_tone4: blond-haired woman: dark skin tone :blond-haired_woman_tone5: blond-haired person :blond_haired_person: blond-haired person: light skin tone :blond_haired_person_tone1: blond-haired person: medium-light skin tone :blond_haired_person_tone2: blond-haired person: medium skin tone :blond_haired_person_tone3: blond-haired person: medium-dark skin tone :blond_haired_person_tone4: blond-haired person: dark skin tone :blond_haired_person_tone5: blossom :blossom: blowfish :blowfish: blue book :blue_book: sport utility vehicle :blue_car: blue circle :blue_circle: blue heart :blue_heart: smiling face with smiling eyes :blush: boar :boar: bomb :bomb: open book :book: bookmark :bookmark: bookmark tabs :bookmark_tabs: books :books: collision :boom: woman\\u2019s boot :boot: bouquet :bouquet: bow and arrow :bow_and_arrow: bowl with spoon :bowl_with_spoon: bowling :bowling: boxing glove :boxing_glove: boy :boy: boy: light skin tone :boy_tone1: boy: medium-light skin tone :boy_tone2: boy: medium skin tone :boy_tone3: boy: medium-dark skin tone :boy_tone4: boy: dark skin tone :boy_tone5: brain :brain: bread :bread: breast-feeding :breast_feeding: breast-feeding: light skin tone :breast_feeding_tone1: breast-feeding: medium-light skin tone :breast_feeding_tone2: breast-feeding: medium skin tone :breast_feeding_tone3: breast-feeding: medium-dark skin tone :breast_feeding_tone4: breast-feeding: dark skin tone :breast_feeding_tone5: bride with veil :bride_with_veil: bride with veil: light skin tone :bride_with_veil_tone1: bride with veil: medium-light skin tone :bride_with_veil_tone2: bride with veil: medium skin tone :bride_with_veil_tone3: bride with veil: medium-dark skin tone :bride_with_veil_tone4: bride with veil: dark skin tone :bride_with_veil_tone5: bridge at night :bridge_at_night: briefcase :briefcase: broccoli :broccoli: broken heart :broken_heart: bug :bug: light bulb :bulb: high-speed train with bullet nose :bullettrain_front: high-speed train :bullettrain_side: burrito :burrito: bus :bus: bus stop :busstop: bust in silhouette :bust_in_silhouette: busts in silhouette :busts_in_silhouette: butterfly :butterfly: cactus :cactus: shortcake :cake: tear-off calendar :calendar: spiral calendar :calendar_spiral: call me hand :call_me: call me hand: light skin tone :call_me_tone1: call me hand: medium-light skin tone :call_me_tone2: call me hand: medium skin tone :call_me_tone3: call me hand: medium-dark skin tone :call_me_tone4: call me hand: dark skin tone :call_me_tone5: mobile phone with arrow :calling: two-hump camel :camel: camera :camera: camera with flash :camera_with_flash: camping :camping: Cancer :cancer: candle :candle: candy :candy: canned food :canned_food: canoe :canoe: input latin uppercase :capital_abcd: Capricorn :capricorn: card file box :card_box: card index :card_index: carousel horse :carousel_horse: carrot :carrot: cat :cat2: cat face :cat: optical disk :cd: chains :chains: bottle with popping cork :champagne: clinking glasses :champagne_glass: chart increasing with yen :chart: chart decreasing :chart_with_downwards_trend: chart increasing :chart_with_upwards_trend: chequered flag :checkered_flag: cheese wedge :cheese: cherries :cherries: cherry blossom :cherry_blossom: chestnut :chestnut: chicken :chicken: child :child: child: light skin tone :child_tone1: child: medium-light skin tone :child_tone2: child: medium skin tone :child_tone3: child: medium-dark skin tone :child_tone4: child: dark skin tone :child_tone5: children crossing :children_crossing: chipmunk :chipmunk: chocolate bar :chocolate_bar: chopsticks :chopsticks: Christmas tree :christmas_tree: church :church: cinema :cinema: circus tent :circus_tent: cityscape at dusk :city_dusk: sunset :city_sunset: cityscape :cityscape: CL button :cl: clapping hands :clap: clapping hands: light skin tone :clap_tone1: clapping hands: medium-light skin tone :clap_tone2: clapping hands: medium skin tone :clap_tone3: clapping hands: medium-dark skin tone :clap_tone4: clapping hands: dark skin tone :clap_tone5: clapper board :clapper: classical building :classical_building: clipboard :clipboard: ten-thirty :clock1030: ten o\\u2019clock :clock10: eleven-thirty :clock1130: eleven o\\u2019clock :clock11: twelve-thirty :clock1230: twelve o\\u2019clock :clock12: one-thirty :clock130: one o\\u2019clock :clock1: two-thirty :clock230: two o\\u2019clock :clock2: three-thirty :clock330: three o\\u2019clock :clock3: four-thirty :clock430: four o\\u2019clock :clock4: five-thirty :clock530: five o\\u2019clock :clock5: six-thirty :clock630: six o\\u2019clock :clock6: seven-thirty :clock730: seven o\\u2019clock :clock7: eight-thirty :clock830: eight o\\u2019clock :clock8: nine-thirty :clock930: nine o\\u2019clock :clock9: mantelpiece clock :clock: closed book :closed_book: locked with key :closed_lock_with_key: closed umbrella :closed_umbrella: cloud :cloud: cloud with lightning :cloud_lightning: cloud with rain :cloud_rain: cloud with snow :cloud_snow: tornado :cloud_tornado: clown face :clown: club suit :clubs: coat :coat: cocktail glass :cocktail: coconut :coconut: hot beverage :coffee: coffin :coffin: face with open mouth cold sweat :cold_sweat: comet :comet: clamp :compression: laptop computer :computer: confetti ball :confetti_ball: confounded face :confounded: confused face :confused: Japanese \\u201ccongratulations\\u201d button :congratulations: construction :construction: building construction :construction_site: construction worker :construction_worker: construction worker: light skin tone :construction_worker_tone1: construction worker: medium-light skin tone :construction_worker_tone2: construction worker: medium skin tone :construction_worker_tone3: construction worker: medium-dark skin tone :construction_worker_tone4: construction worker: dark skin tone :construction_worker_tone5: control knobs :control_knobs: convenience store :convenience_store: cookie :cookie: cooking :cooking: COOL button :cool: copyright :copyright: ear of corn :corn: couch and lamp :couch: man and woman holding hands :couple: couple with heart: man, man :couple_mm: couple with heart :couple_with_heart: couple with heart: woman, man :couple_with_heart_woman_man: couple with heart: woman, woman :couple_ww: kiss :couplekiss: cow :cow2: cow face :cow: cowboy hat face :cowboy: crab :crab: crayon :crayon: crazy face :crazy_face: credit card :credit_card: crescent moon :crescent_moon: cricket :cricket: cricket game :cricket_game: crocodile :crocodile: croissant :croissant: latin cross :cross: crossed flags :crossed_flags: crossed swords :crossed_swords: crown :crown: passenger ship :cruise_ship: crying face :cry: crying cat face :crying_cat_face: crystal ball :crystal_ball: cucumber :cucumber: cup with straw :cup_with_straw: heart with arrow :cupid: curling stone :curling_stone: curly loop :curly_loop: currency exchange :currency_exchange: curry rice :curry: custard :custard: customs :customs: cut of meat :cut_of_meat: cyclone :cyclone: dagger :dagger: woman dancing :dancer: woman dancing: light skin tone :dancer_tone1: woman dancing: medium-light skin tone :dancer_tone2: woman dancing: medium skin tone :dancer_tone3: woman dancing: medium-dark skin tone :dancer_tone4: woman dancing: dark skin tone :dancer_tone5: dango :dango: sunglasses :dark_sunglasses: direct hit :dart: dashing away :dash: calendar :date: deciduous tree :deciduous_tree: deer :deer: department store :department_store: desert :desert: desktop computer :desktop: detective :detective: detective: light skin tone :detective_tone1: detective: medium-light skin tone :detective_tone2: detective: medium skin tone :detective_tone3: detective: medium-dark skin tone :detective_tone4: detective: dark skin tone :detective_tone5: diamond with a dot :diamond_shape_with_a_dot_inside: diamond suit :diamonds: digit eight :digit_eight: digit five :digit_five: digit four :digit_four: digit nine :digit_nine: digit one :digit_one: digit seven :digit_seven: digit six :digit_six: digit three :digit_three: digit two :digit_two: digit zero :digit_zero: disappointed face :disappointed: disappointed but relieved face :disappointed_relieved: card index dividers :dividers: dizzy :dizzy: dizzy face :dizzy_face: no littering :do_not_litter: dog :dog2: dog face :dog: dollar banknote :dollar: Japanese dolls :dolls: dolphin :dolphin: door :door: doughnut :doughnut: dove :dove: dragon :dragon: dragon face :dragon_face: dress :dress: camel :dromedary_camel: drooling face :drooling_face: droplet :droplet: drum :drum: duck :duck: dumpling :dumpling: dvd :dvd: e-mail :e-mail: eagle :eagle: ear :ear: sheaf of rice :ear_of_rice: ear: light skin tone :ear_tone1: ear: medium-light skin tone :ear_tone2: ear: medium skin tone :ear_tone3: ear: medium-dark skin tone :ear_tone4: ear: dark skin tone :ear_tone5: globe showing Europe-Africa :earth_africa: globe showing Americas :earth_americas: globe showing Asia-Australia :earth_asia: egg :egg: eggplant :eggplant: keycap: 8 :eight: eight-pointed star :eight_pointed_black_star: eight-spoked asterisk :eight_spoked_asterisk: eject button :eject: electric plug :electric_plug: elephant :elephant: elf :elf: elf: light skin tone :elf_tone1: elf: medium-light skin tone :elf_tone2: elf: medium skin tone :elf_tone3: elf: medium-dark skin tone :elf_tone4: elf: dark skin tone :elf_tone5: END arrow :end: England :england: envelope :envelope: envelope with arrow :envelope_with_arrow: euro banknote :euro: castle :european_castle: post office :european_post_office: evergreen tree :evergreen_tree: exclamation mark :exclamation: exploding head :exploding_head: expressionless face :expressionless: eye :eye: eye in speech bubble :eye_in_speech_bubble: glasses :eyeglasses: eyes :eyes: face vomiting :face_vomiting: face with hand over mouth :face_with_hand_over_mouth: face with monocle :face_with_monocle: face with raised eyebrow :face_with_raised_eyebrow: face with symbols over mouth :face_with_symbols_over_mouth: factory :factory: fairy :fairy: fairy: light skin tone :fairy_tone1: fairy: medium-light skin tone :fairy_tone2: fairy: medium skin tone :fairy_tone3: fairy: medium-dark skin tone :fairy_tone4: fairy: dark skin tone :fairy_tone5: fallen leaf :fallen_leaf: family :family: family: man, boy :family_man_boy: family: man, boy, boy :family_man_boy_boy: family: man, girl :family_man_girl: family: man, girl, boy :family_man_girl_boy: family: man, girl, girl :family_man_girl_girl: family: man, woman, boy :family_man_woman_boy: family: man, man, boy :family_mmb: family: man, man, boy, boy :family_mmbb: family: man, man, girl :family_mmg: family: man, man, girl, boy :family_mmgb: family: man, man, girl, girl :family_mmgg: family: man, woman, boy, boy :family_mwbb: family: man, woman, girl :family_mwg: family: man, woman, girl, boy :family_mwgb: family: man, woman, girl, girl :family_mwgg: family: woman, boy :family_woman_boy: family: woman, boy, boy :family_woman_boy_boy: family: woman, girl :family_woman_girl: family: woman, girl, boy :family_woman_girl_boy: family: woman, girl, girl :family_woman_girl_girl: family: woman, woman, boy :family_wwb: family: woman, woman, boy, boy :family_wwbb: family: woman, woman, girl :family_wwg: family: woman, woman, girl, boy :family_wwgb: family: woman, woman, girl, girl :family_wwgg: fast-forward button :fast_forward: fax machine :fax: fearful face :fearful: paw prints :feet: female sign :female_sign: ferris wheel :ferris_wheel: ferry :ferry: field hockey :field_hockey: file cabinet :file_cabinet: file folder :file_folder: film frames :film_frames: crossed fingers :fingers_crossed: crossed fingers: light skin tone :fingers_crossed_tone1: crossed fingers: medium-light skin tone :fingers_crossed_tone2: crossed fingers: medium skin tone :fingers_crossed_tone3: crossed fingers: medium-dark skin tone :fingers_crossed_tone4: crossed fingers: dark skin tone :fingers_crossed_tone5: fire :fire: fire engine :fire_engine: fireworks :fireworks: 1 st place medal :first_place: first quarter moon :first_quarter_moon: first quarter moon with face :first_quarter_moon_with_face: fish :fish: fish cake with swirl :fish_cake: fishing pole :fishing_pole_and_fish: raised fist :fist: raised fist: light skin tone :fist_tone1: raised fist: medium-light skin tone :fist_tone2: raised fist: medium skin tone :fist_tone3: raised fist: medium-dark skin tone :fist_tone4: raised fist: dark skin tone :fist_tone5: keycap: 5 :five: Ascension Island :flag_ac: Andorra :flag_ad: United Arab Emirates :flag_ae: Afghanistan :flag_af: Antigua Barbuda :flag_ag: Anguilla :flag_ai: Albania :flag_al: Armenia :flag_am: Angola :flag_ao: Antarctica :flag_aq: Argentina :flag_ar: American Samoa :flag_as: Austria :flag_at: Australia :flag_au: Aruba :flag_aw: \\u00c5land Islands :flag_ax: Azerbaijan :flag_az: Bosnia Herzegovina :flag_ba: Barbados :flag_bb: Bangladesh :flag_bd: Belgium :flag_be: Burkina Faso :flag_bf: Bulgaria :flag_bg: Bahrain :flag_bh: Burundi :flag_bi: Benin :flag_bj: St. Barth\\u00e9lemy :flag_bl: black flag :flag_black: Bermuda :flag_bm: Brunei :flag_bn: Bolivia :flag_bo: Caribbean Netherlands :flag_bq: Brazil :flag_br: Bahamas :flag_bs: Bhutan :flag_bt: Bouvet Island :flag_bv: Botswana :flag_bw: Belarus :flag_by: Belize :flag_bz: Canada :flag_ca: Cocos (Keeling) Islands :flag_cc: Congo - Kinshasa :flag_cd: Central African Republic :flag_cf: Congo - Brazzaville :flag_cg: Switzerland :flag_ch: C\\u00f4te d\\u2019Ivoire :flag_ci: Cook Islands :flag_ck: Chile :flag_cl: Cameroon :flag_cm: China :flag_cn: Colombia :flag_co: Clipperton Island :flag_cp: Costa Rica :flag_cr: Cuba :flag_cu: Cape Verde :flag_cv: Cura\\u00e7ao :flag_cw: Christmas Island :flag_cx: Cyprus :flag_cy: Czechia :flag_cz: Germany :flag_de: Diego Garcia :flag_dg: Djibouti :flag_dj: Denmark :flag_dk: Dominica :flag_dm: Dominican Republic :flag_do: Algeria :flag_dz: Ceuta Melilla :flag_ea: Ecuador :flag_ec: Estonia :flag_ee: Egypt :flag_eg: Western Sahara :flag_eh: Eritrea :flag_er: Spain :flag_es: Ethiopia :flag_et: European Union :flag_eu: Finland :flag_fi: Fiji :flag_fj: Falkland Islands :flag_fk: Micronesia :flag_fm: Faroe Islands :flag_fo: France :flag_fr: Gabon :flag_ga: United Kingdom :flag_gb: Grenada :flag_gd: Georgia :flag_ge: French Guiana :flag_gf: Guernsey :flag_gg: Ghana :flag_gh: Gibraltar :flag_gi: Greenland :flag_gl: Gambia :flag_gm: Guinea :flag_gn: Guadeloupe :flag_gp: Equatorial Guinea :flag_gq: Greece :flag_gr: South Georgia South Sandwich Islands :flag_gs: Guatemala :flag_gt: Guam :flag_gu: Guinea-Bissau :flag_gw: Guyana :flag_gy: Hong Kong SAR China :flag_hk: Heard McDonald Islands :flag_hm: Honduras :flag_hn: Croatia :flag_hr: Haiti :flag_ht: Hungary :flag_hu: Canary Islands :flag_ic: Indonesia :flag_id: Ireland :flag_ie: Israel :flag_il: Isle of Man :flag_im: India :flag_in: British Indian Ocean Territory :flag_io: Iraq :flag_iq: Iran :flag_ir: Iceland :flag_is: Italy :flag_it: Jersey :flag_je: Jamaica :flag_jm: Jordan :flag_jo: Japan :flag_jp: Kenya :flag_ke: Kyrgyzstan :flag_kg: Cambodia :flag_kh: Kiribati :flag_ki: Comoros :flag_km: St. Kitts Nevis :flag_kn: North Korea :flag_kp: South Korea :flag_kr: Kuwait :flag_kw: Cayman Islands :flag_ky: Kazakhstan :flag_kz: Laos :flag_la: Lebanon :flag_lb: St. Lucia :flag_lc: Liechtenstein :flag_li: Sri Lanka :flag_lk: Liberia :flag_lr: Lesotho :flag_ls: Lithuania :flag_lt: Luxembourg :flag_lu: Latvia :flag_lv: Libya :flag_ly: Morocco :flag_ma: Monaco :flag_mc: Moldova :flag_md: Montenegro :flag_me: St. Martin :flag_mf: Madagascar :flag_mg: Marshall Islands :flag_mh: Macedonia :flag_mk: Mali :flag_ml: Myanmar (Burma) :flag_mm: Mongolia :flag_mn: Macau SAR China :flag_mo: Northern Mariana Islands :flag_mp: Martinique :flag_mq: Mauritania :flag_mr: Montserrat :flag_ms: Malta :flag_mt: Mauritius :flag_mu: Maldives :flag_mv: Malawi :flag_mw: Mexico :flag_mx: Malaysia :flag_my: Mozambique :flag_mz: Namibia :flag_na: New Caledonia :flag_nc: Niger :flag_ne: Norfolk Island :flag_nf: Nigeria :flag_ng: Nicaragua :flag_ni: Netherlands :flag_nl: Norway :flag_no: Nepal :flag_np: Nauru :flag_nr: Niue :flag_nu: New Zealand :flag_nz: Oman :flag_om: Panama :flag_pa: Peru :flag_pe: French Polynesia :flag_pf: Papua New Guinea :flag_pg: Philippines :flag_ph: Pakistan :flag_pk: Poland :flag_pl: St. Pierre Miquelon :flag_pm: Pitcairn Islands :flag_pn: Puerto Rico :flag_pr: Palestinian Territories :flag_ps: Portugal :flag_pt: Palau :flag_pw: Paraguay :flag_py: Qatar :flag_qa: R\\u00e9union :flag_re: Romania :flag_ro: Serbia :flag_rs: Russia :flag_ru: Rwanda :flag_rw: Saudi Arabia :flag_sa: Solomon Islands :flag_sb: Seychelles :flag_sc: Sudan :flag_sd: Sweden :flag_se: Singapore :flag_sg: St. Helena :flag_sh: Slovenia :flag_si: Svalbard Jan Mayen :flag_sj: Slovakia :flag_sk: Sierra Leone :flag_sl: San Marino :flag_sm: Senegal :flag_sn: Somalia :flag_so: Suriname :flag_sr: South Sudan :flag_ss: S\\u00e3o Tom\\u00e9 Pr\\u00edncipe :flag_st: El Salvador :flag_sv: Sint Maarten :flag_sx: Syria :flag_sy: Swaziland :flag_sz: Tristan da Cunha :flag_ta: Turks Caicos Islands :flag_tc: Chad :flag_td: French Southern Territories :flag_tf: Togo :flag_tg: Thailand :flag_th: Tajikistan :flag_tj: Tokelau :flag_tk: Timor-Leste :flag_tl: Turkmenistan :flag_tm: Tunisia :flag_tn: Tonga :flag_to: Turkey :flag_tr: Trinidad Tobago :flag_tt: Tuvalu :flag_tv: Taiwan :flag_tw: Tanzania :flag_tz: Ukraine :flag_ua: Uganda :flag_ug: U.S. Outlying Islands :flag_um: United States :flag_us: Uruguay :flag_uy: Uzbekistan :flag_uz: Vatican City :flag_va: St. Vincent Grenadines :flag_vc: Venezuela :flag_ve: British Virgin Islands :flag_vg: U.S. Virgin Islands :flag_vi: Vietnam :flag_vn: Vanuatu :flag_vu: Wallis Futuna :flag_wf: white flag :flag_white: Samoa :flag_ws: Kosovo :flag_xk: Yemen :flag_ye: Mayotte :flag_yt: South Africa :flag_za: Zambia :flag_zm: Zimbabwe :flag_zw: carp streamer :flags: flashlight :flashlight: fleur-de-lis :fleur-de-lis: floppy disk :floppy_disk: flower playing cards :flower_playing_cards: flushed face :flushed: flying saucer :flying_saucer: fog :fog: foggy :foggy: american football :football: footprints :footprints: fork and knife :fork_and_knife: fork and knife with plate :fork_knife_plate: fortune cookie :fortune_cookie: fountain :fountain: keycap: 4 :four: four leaf clover :four_leaf_clover: fox face :fox: framed picture :frame_photo: FREE button :free: baguette bread :french_bread: fried shrimp :fried_shrimp: french fries :fries: frog face :frog: frowning face :frowning2: frowning face with open mouth :frowning: fuel pump :fuelpump: full moon :full_moon: full moon with face :full_moon_with_face: game die :game_die: gear :gear: gem stone :gem: Gemini :gemini: genie :genie: ghost :ghost: wrapped gift :gift: heart with ribbon :gift_heart: giraffe :giraffe: girl :girl: girl: light skin tone :girl_tone1: girl: medium-light skin tone :girl_tone2: girl: medium skin tone :girl_tone3: girl: medium-dark skin tone :girl_tone4: girl: dark skin tone :girl_tone5: globe with meridians :globe_with_meridians: gloves :gloves: goal net :goal: goat :goat: flag in hole :golf: gorilla :gorilla: grapes :grapes: green apple :green_apple: green book :green_book: green heart :green_heart: white exclamation mark :grey_exclamation: white question mark :grey_question: grimacing face :grimacing: grinning face with smiling eyes :grin: grinning face :grinning: guard :guard: guard: light skin tone :guard_tone1: guard: medium-light skin tone :guard_tone2: guard: medium skin tone :guard_tone3: guard: medium-dark skin tone :guard_tone4: guard: dark skin tone :guard_tone5: guitar :guitar: pistol :gun: hamburger :hamburger: hammer :hammer: hammer and pick :hammer_pick: hamster face :hamster: raised hand with fingers splayed :hand_splayed: raised hand with fingers splayed: light skin tone :hand_splayed_tone1: raised hand with fingers splayed: medium-light skin tone :hand_splayed_tone2: raised hand with fingers splayed: medium skin tone :hand_splayed_tone3: raised hand with fingers splayed: medium-dark skin tone :hand_splayed_tone4: raised hand with fingers splayed: dark skin tone :hand_splayed_tone5: handbag :handbag: handshake :handshake: keycap: # :hash: front-facing baby chick :hatched_chick: hatching chick :hatching_chick: face with head-bandage :head_bandage: headphone :headphones: hear-no-evil monkey :hear_no_evil: red heart :heart: heart decoration :heart_decoration: heavy heart exclamation :heart_exclamation: smiling face with heart-eyes :heart_eyes: smiling cat face with heart-eyes :heart_eyes_cat: beating heart :heartbeat: growing heart :heartpulse: heart suit :hearts: heavy check mark :heavy_check_mark: heavy division sign :heavy_division_sign: heavy dollar sign :heavy_dollar_sign: heavy minus sign :heavy_minus_sign: heavy multiplication x :heavy_multiplication_x: heavy plus sign :heavy_plus_sign: hedgehog :hedgehog: helicopter :helicopter: rescue worker\\u2019s helmet :helmet_with_cross: herb :herb: hibiscus :hibiscus: bright button :high_brightness: high-heeled shoe :high_heel: ice hockey :hockey: hole :hole: houses :homes: honey pot :honey_pot: horse face :horse: horse racing :horse_racing: horse racing: light skin tone :horse_racing_tone1: horse racing: medium-light skin tone :horse_racing_tone2: horse racing: medium skin tone :horse_racing_tone3: horse racing: medium-dark skin tone :horse_racing_tone4: horse racing: dark skin tone :horse_racing_tone5: hospital :hospital: hot pepper :hot_pepper: hot dog :hotdog: hotel :hotel: hot springs :hotsprings: hourglass :hourglass: hourglass with flowing sand :hourglass_flowing_sand: house :house: derelict house :house_abandoned: house with garden :house_with_garden: hugging face :hugging: hushed face :hushed: ice cream :ice_cream: ice skate :ice_skate: soft ice cream :icecream: ID button :id: Japanese \\u201cbargain\\u201d button :ideograph_advantage: angry face with horns :imp: inbox tray :inbox_tray: incoming envelope :incoming_envelope: information :information_source: smiling face with halo :innocent: exclamation question mark :interrobang: mobile phone :iphone: desert island :island: red paper lantern :izakaya_lantern: jack-o-lantern :jack_o_lantern: map of Japan :japan: Japanese castle :japanese_castle: goblin :japanese_goblin: ogre :japanese_ogre: jeans :jeans: face with tears of joy :joy: cat face with tears of joy :joy_cat: joystick :joystick: kaaba :kaaba: old key :key2: key :key: keyboard :keyboard: keycap 10 :keycap_ten: kimono :kimono: kiss mark :kiss: kiss: man, man :kiss_mm: kiss: woman, man :kiss_woman_man: kiss: woman, woman :kiss_ww: kissing face :kissing: kissing cat face with closed eyes :kissing_cat: kissing face with closed eyes :kissing_closed_eyes: face blowing a kiss :kissing_heart: kissing face with smiling eyes :kissing_smiling_eyes: kiwi fruit :kiwi: kitchen knife :knife: koala :koala: Japanese \\u201chere\\u201d button :koko: label :label: large blue diamond :large_blue_diamond: large orange diamond :large_orange_diamond: last quarter moon :last_quarter_moon: last quarter moon with face :last_quarter_moon_with_face: smiling face with open mouth closed eyes :laughing: leaf fluttering in wind :leaves: ledger :ledger: left-facing fist :left_facing_fist: left-facing fist: light skin tone :left_facing_fist_tone1: left-facing fist: medium-light skin tone :left_facing_fist_tone2: left-facing fist: medium skin tone :left_facing_fist_tone3: left-facing fist: medium-dark skin tone :left_facing_fist_tone4: left-facing fist: dark skin tone :left_facing_fist_tone5: left luggage :left_luggage: left-right arrow :left_right_arrow: right arrow curving left :leftwards_arrow_with_hook: lemon :lemon: Leo :leo: leopard :leopard: level slider :level_slider: man in business suit levitating :levitate: Libra :libra: light rail :light_rail: link :link: lion face :lion_face: mouth :lips: lipstick :lipstick: lizard :lizard: locked :lock: locked with pen :lock_with_ink_pen: lollipop :lollipop: double curly loop :loop: speaker high volume :loud_sound: loudspeaker :loudspeaker: love hotel :love_hotel: love letter :love_letter: love-you gesture :love_you_gesture: love-you gesture: light skin tone :love_you_gesture_tone1: love-you gesture: medium-light skin tone :love_you_gesture_tone2: love-you gesture: medium skin tone :love_you_gesture_tone3: love-you gesture: medium-dark skin tone :love_you_gesture_tone4: love-you gesture: dark skin tone :love_you_gesture_tone5: dim button :low_brightness: lying face :lying_face: circled M :m: left-pointing magnifying glass :mag: right-pointing magnifying glass :mag_right: mage :mage: mage: light skin tone :mage_tone1: mage: medium-light skin tone :mage_tone2: mage: medium skin tone :mage_tone3: mage: medium-dark skin tone :mage_tone4: mage: dark skin tone :mage_tone5: mahjong red dragon :mahjong: closed mailbox with raised flag :mailbox: closed mailbox with lowered flag :mailbox_closed: open mailbox with raised flag :mailbox_with_mail: open mailbox with lowered flag :mailbox_with_no_mail: male sign :male_sign: man :man: man artist :man_artist: man artist: light skin tone :man_artist_tone1: man artist: medium-light skin tone :man_artist_tone2: man artist: medium skin tone :man_artist_tone3: man artist: medium-dark skin tone :man_artist_tone4: man artist: dark skin tone :man_artist_tone5: man astronaut :man_astronaut: man astronaut: light skin tone :man_astronaut_tone1: man astronaut: medium-light skin tone :man_astronaut_tone2: man astronaut: medium skin tone :man_astronaut_tone3: man astronaut: medium-dark skin tone :man_astronaut_tone4: man astronaut: dark skin tone :man_astronaut_tone5: man biking :man_biking: man biking: light skin tone :man_biking_tone1: man biking: medium-light skin tone :man_biking_tone2: man biking: medium skin tone :man_biking_tone3: man biking: medium-dark skin tone :man_biking_tone4: man biking: dark skin tone :man_biking_tone5: man bouncing ball :man_bouncing_ball: man bouncing ball: light skin tone :man_bouncing_ball_tone1: man bouncing ball: medium-light skin tone :man_bouncing_ball_tone2: man bouncing ball: medium skin tone :man_bouncing_ball_tone3: man bouncing ball: medium-dark skin tone :man_bouncing_ball_tone4: man bouncing ball: dark skin tone :man_bouncing_ball_tone5: man bowing :man_bowing: man bowing: light skin tone :man_bowing_tone1: man bowing: medium-light skin tone :man_bowing_tone2: man bowing: medium skin tone :man_bowing_tone3: man bowing: medium-dark skin tone :man_bowing_tone4: man bowing: dark skin tone :man_bowing_tone5: man cartwheeling :man_cartwheeling: man cartwheeling: light skin tone :man_cartwheeling_tone1: man cartwheeling: medium-light skin tone :man_cartwheeling_tone2: man cartwheeling: medium skin tone :man_cartwheeling_tone3: man cartwheeling: medium-dark skin tone :man_cartwheeling_tone4: man cartwheeling: dark skin tone :man_cartwheeling_tone5: man climbing :man_climbing: man climbing: light skin tone :man_climbing_tone1: man climbing: medium-light skin tone :man_climbing_tone2: man climbing: medium skin tone :man_climbing_tone3: man climbing: medium-dark skin tone :man_climbing_tone4: man climbing: dark skin tone :man_climbing_tone5: man construction worker :man_construction_worker: man construction worker: light skin tone :man_construction_worker_tone1: man construction worker: medium-light skin tone :man_construction_worker_tone2: man construction worker: medium skin tone :man_construction_worker_tone3: man construction worker: medium-dark skin tone :man_construction_worker_tone4: man construction worker: dark skin tone :man_construction_worker_tone5: man cook :man_cook: man cook: light skin tone :man_cook_tone1: man cook: medium-light skin tone :man_cook_tone2: man cook: medium skin tone :man_cook_tone3: man cook: medium-dark skin tone :man_cook_tone4: man cook: dark skin tone :man_cook_tone5: man dancing :man_dancing: man dancing: light skin tone :man_dancing_tone1: man dancing: medium-light skin tone :man_dancing_tone2: man dancing: medium skin tone :man_dancing_tone3: man dancing: medium-dark skin tone :man_dancing_tone4: man dancing: dark skin tone :man_dancing_tone5: man detective :man_detective: man detective: light skin tone :man_detective_tone1: man detective: medium-light skin tone :man_detective_tone2: man detective: medium skin tone :man_detective_tone3: man detective: medium-dark skin tone :man_detective_tone4: man detective: dark skin tone :man_detective_tone5: man elf :man_elf: man elf: light skin tone :man_elf_tone1: man elf: medium-light skin tone :man_elf_tone2: man elf: medium skin tone :man_elf_tone3: man elf: medium-dark skin tone :man_elf_tone4: man elf: dark skin tone :man_elf_tone5: man facepalming :man_facepalming: man facepalming: light skin tone :man_facepalming_tone1: man facepalming: medium-light skin tone :man_facepalming_tone2: man facepalming: medium skin tone :man_facepalming_tone3: man facepalming: medium-dark skin tone :man_facepalming_tone4: man facepalming: dark skin tone :man_facepalming_tone5: man factory worker :man_factory_worker: man factory worker: light skin tone :man_factory_worker_tone1: man factory worker: medium-light skin tone :man_factory_worker_tone2: man factory worker: medium skin tone :man_factory_worker_tone3: man factory worker: medium-dark skin tone :man_factory_worker_tone4: man factory worker: dark skin tone :man_factory_worker_tone5: man fairy :man_fairy: man fairy: light skin tone :man_fairy_tone1: man fairy: medium-light skin tone :man_fairy_tone2: man fairy: medium skin tone :man_fairy_tone3: man fairy: medium-dark skin tone :man_fairy_tone4: man fairy: dark skin tone :man_fairy_tone5: man farmer :man_farmer: man farmer: light skin tone :man_farmer_tone1: man farmer: medium-light skin tone :man_farmer_tone2: man farmer: medium skin tone :man_farmer_tone3: man farmer: medium-dark skin tone :man_farmer_tone4: man farmer: dark skin tone :man_farmer_tone5: man firefighter :man_firefighter: man firefighter: light skin tone :man_firefighter_tone1: man firefighter: medium-light skin tone :man_firefighter_tone2: man firefighter: medium skin tone :man_firefighter_tone3: man firefighter: medium-dark skin tone :man_firefighter_tone4: man firefighter: dark skin tone :man_firefighter_tone5: man frowning :man_frowning: man frowning: light skin tone :man_frowning_tone1: man frowning: medium-light skin tone :man_frowning_tone2: man frowning: medium skin tone :man_frowning_tone3: man frowning: medium-dark skin tone :man_frowning_tone4: man frowning: dark skin tone :man_frowning_tone5: man genie :man_genie: man gesturing NO :man_gesturing_no: man gesturing NO: light skin tone :man_gesturing_no_tone1: man gesturing NO: medium-light skin tone :man_gesturing_no_tone2: man gesturing NO: medium skin tone :man_gesturing_no_tone3: man gesturing NO: medium-dark skin tone :man_gesturing_no_tone4: man gesturing NO: dark skin tone :man_gesturing_no_tone5: man gesturing OK :man_gesturing_ok: man gesturing OK: light skin tone :man_gesturing_ok_tone1: man gesturing OK: medium-light skin tone :man_gesturing_ok_tone2: man gesturing OK: medium skin tone :man_gesturing_ok_tone3: man gesturing OK: medium-dark skin tone :man_gesturing_ok_tone4: man gesturing OK: dark skin tone :man_gesturing_ok_tone5: man getting massage :man_getting_face_massage: man getting massage: light skin tone :man_getting_face_massage_tone1: man getting massage: medium-light skin tone :man_getting_face_massage_tone2: man getting massage: medium skin tone :man_getting_face_massage_tone3: man getting massage: medium-dark skin tone :man_getting_face_massage_tone4: man getting massage: dark skin tone :man_getting_face_massage_tone5: man getting haircut :man_getting_haircut: man getting haircut: light skin tone :man_getting_haircut_tone1: man getting haircut: medium-light skin tone :man_getting_haircut_tone2: man getting haircut: medium skin tone :man_getting_haircut_tone3: man getting haircut: medium-dark skin tone :man_getting_haircut_tone4: man getting haircut: dark skin tone :man_getting_haircut_tone5: man golfing :man_golfing: man golfing: light skin tone :man_golfing_tone1: man golfing: medium-light skin tone :man_golfing_tone2: man golfing: medium skin tone :man_golfing_tone3: man golfing: medium-dark skin tone :man_golfing_tone4: man golfing: dark skin tone :man_golfing_tone5: man guard :man_guard: man guard: light skin tone :man_guard_tone1: man guard: medium-light skin tone :man_guard_tone2: man guard: medium skin tone :man_guard_tone3: man guard: medium-dark skin tone :man_guard_tone4: man guard: dark skin tone :man_guard_tone5: man health worker :man_health_worker: man health worker: light skin tone :man_health_worker_tone1: man health worker: medium-light skin tone :man_health_worker_tone2: man health worker: medium skin tone :man_health_worker_tone3: man health worker: medium-dark skin tone :man_health_worker_tone4: man health worker: dark skin tone :man_health_worker_tone5: man in business suit levitating: light skin tone :man_in_business_suit_levitating_tone1: man in business suit levitating: medium-light skin tone :man_in_business_suit_levitating_tone2: man in business suit levitating: medium skin tone :man_in_business_suit_levitating_tone3: man in business suit levitating: medium-dark skin tone :man_in_business_suit_levitating_tone4: man in business suit levitating: dark skin tone :man_in_business_suit_levitating_tone5: man in lotus position :man_in_lotus_position: man in lotus position: light skin tone :man_in_lotus_position_tone1: man in lotus position: medium-light skin tone :man_in_lotus_position_tone2: man in lotus position: medium skin tone :man_in_lotus_position_tone3: man in lotus position: medium-dark skin tone :man_in_lotus_position_tone4: man in lotus position: dark skin tone :man_in_lotus_position_tone5: man in steamy room :man_in_steamy_room: man in steamy room: light skin tone :man_in_steamy_room_tone1: man in steamy room: medium-light skin tone :man_in_steamy_room_tone2: man in steamy room: medium skin tone :man_in_steamy_room_tone3: man in steamy room: medium-dark skin tone :man_in_steamy_room_tone4: man in steamy room: dark skin tone :man_in_steamy_room_tone5: man in tuxedo :man_in_tuxedo: man in tuxedo: light skin tone :man_in_tuxedo_tone1: man in tuxedo: medium-light skin tone :man_in_tuxedo_tone2: man in tuxedo: medium skin tone :man_in_tuxedo_tone3: man in tuxedo: medium-dark skin tone :man_in_tuxedo_tone4: man in tuxedo: dark skin tone :man_in_tuxedo_tone5: man judge :man_judge: man judge: light skin tone :man_judge_tone1: man judge: medium-light skin tone :man_judge_tone2: man judge: medium skin tone :man_judge_tone3: man judge: medium-dark skin tone :man_judge_tone4: man judge: dark skin tone :man_judge_tone5: man juggling :man_juggling: man juggling: light skin tone :man_juggling_tone1: man juggling: medium-light skin tone :man_juggling_tone2: man juggling: medium skin tone :man_juggling_tone3: man juggling: medium-dark skin tone :man_juggling_tone4: man juggling: dark skin tone :man_juggling_tone5: man lifting weights :man_lifting_weights: man lifting weights: light skin tone :man_lifting_weights_tone1: man lifting weights: medium-light skin tone :man_lifting_weights_tone2: man lifting weights: medium skin tone :man_lifting_weights_tone3: man lifting weights: medium-dark skin tone :man_lifting_weights_tone4: man lifting weights: dark skin tone :man_lifting_weights_tone5: man mage :man_mage: man mage: light skin tone :man_mage_tone1: man mage: medium-light skin tone :man_mage_tone2: man mage: medium skin tone :man_mage_tone3: man mage: medium-dark skin tone :man_mage_tone4: man mage: dark skin tone :man_mage_tone5: man mechanic :man_mechanic: man mechanic: light skin tone :man_mechanic_tone1: man mechanic: medium-light skin tone :man_mechanic_tone2: man mechanic: medium skin tone :man_mechanic_tone3: man mechanic: medium-dark skin tone :man_mechanic_tone4: man mechanic: dark skin tone :man_mechanic_tone5: man mountain biking :man_mountain_biking: man mountain biking: light skin tone :man_mountain_biking_tone1: man mountain biking: medium-light skin tone :man_mountain_biking_tone2: man mountain biking: medium skin tone :man_mountain_biking_tone3: man mountain biking: medium-dark skin tone :man_mountain_biking_tone4: man mountain biking: dark skin tone :man_mountain_biking_tone5: man office worker :man_office_worker: man office worker: light skin tone :man_office_worker_tone1: man office worker: medium-light skin tone :man_office_worker_tone2: man office worker: medium skin tone :man_office_worker_tone3: man office worker: medium-dark skin tone :man_office_worker_tone4: man office worker: dark skin tone :man_office_worker_tone5: man pilot :man_pilot: man pilot: light skin tone :man_pilot_tone1: man pilot: medium-light skin tone :man_pilot_tone2: man pilot: medium skin tone :man_pilot_tone3: man pilot: medium-dark skin tone :man_pilot_tone4: man pilot: dark skin tone :man_pilot_tone5: man playing handball :man_playing_handball: man playing handball: light skin tone :man_playing_handball_tone1: man playing handball: medium-light skin tone :man_playing_handball_tone2: man playing handball: medium skin tone :man_playing_handball_tone3: man playing handball: medium-dark skin tone :man_playing_handball_tone4: man playing handball: dark skin tone :man_playing_handball_tone5: man playing water polo :man_playing_water_polo: man playing water polo: light skin tone :man_playing_water_polo_tone1: man playing water polo: medium-light skin tone :man_playing_water_polo_tone2: man playing water polo: medium skin tone :man_playing_water_polo_tone3: man playing water polo: medium-dark skin tone :man_playing_water_polo_tone4: man playing water polo: dark skin tone :man_playing_water_polo_tone5: man police officer :man_police_officer: man police officer: light skin tone :man_police_officer_tone1: man police officer: medium-light skin tone :man_police_officer_tone2: man police officer: medium skin tone :man_police_officer_tone3: man police officer: medium-dark skin tone :man_police_officer_tone4: man police officer: dark skin tone :man_police_officer_tone5: man pouting :man_pouting: man pouting: light skin tone :man_pouting_tone1: man pouting: medium-light skin tone :man_pouting_tone2: man pouting: medium skin tone :man_pouting_tone3: man pouting: medium-dark skin tone :man_pouting_tone4: man pouting: dark skin tone :man_pouting_tone5: man raising hand :man_raising_hand: man raising hand: light skin tone :man_raising_hand_tone1: man raising hand: medium-light skin tone :man_raising_hand_tone2: man raising hand: medium skin tone :man_raising_hand_tone3: man raising hand: medium-dark skin tone :man_raising_hand_tone4: man raising hand: dark skin tone :man_raising_hand_tone5: man rowing boat :man_rowing_boat: man rowing boat: light skin tone :man_rowing_boat_tone1: man rowing boat: medium-light skin tone :man_rowing_boat_tone2: man rowing boat: medium skin tone :man_rowing_boat_tone3: man rowing boat: medium-dark skin tone :man_rowing_boat_tone4: man rowing boat: dark skin tone :man_rowing_boat_tone5: man running :man_running: man running: light skin tone :man_running_tone1: man running: medium-light skin tone :man_running_tone2: man running: medium skin tone :man_running_tone3: man running: medium-dark skin tone :man_running_tone4: man running: dark skin tone :man_running_tone5: man scientist :man_scientist: man scientist: light skin tone :man_scientist_tone1: man scientist: medium-light skin tone :man_scientist_tone2: man scientist: medium skin tone :man_scientist_tone3: man scientist: medium-dark skin tone :man_scientist_tone4: man scientist: dark skin tone :man_scientist_tone5: man shrugging :man_shrugging: man shrugging: light skin tone :man_shrugging_tone1: man shrugging: medium-light skin tone :man_shrugging_tone2: man shrugging: medium skin tone :man_shrugging_tone3: man shrugging: medium-dark skin tone :man_shrugging_tone4: man shrugging: dark skin tone :man_shrugging_tone5: man singer :man_singer: man singer: light skin tone :man_singer_tone1: man singer: medium-light skin tone :man_singer_tone2: man singer: medium skin tone :man_singer_tone3: man singer: medium-dark skin tone :man_singer_tone4: man singer: dark skin tone :man_singer_tone5: man student :man_student: man student: light skin tone :man_student_tone1: man student: medium-light skin tone :man_student_tone2: man student: medium skin tone :man_student_tone3: man student: medium-dark skin tone :man_student_tone4: man student: dark skin tone :man_student_tone5: man surfing :man_surfing: man surfing: light skin tone :man_surfing_tone1: man surfing: medium-light skin tone :man_surfing_tone2: man surfing: medium skin tone :man_surfing_tone3: man surfing: medium-dark skin tone :man_surfing_tone4: man surfing: dark skin tone :man_surfing_tone5: man swimming :man_swimming: man swimming: light skin tone :man_swimming_tone1: man swimming: medium-light skin tone :man_swimming_tone2: man swimming: medium skin tone :man_swimming_tone3: man swimming: medium-dark skin tone :man_swimming_tone4: man swimming: dark skin tone :man_swimming_tone5: man teacher :man_teacher: man teacher: light skin tone :man_teacher_tone1: man teacher: medium-light skin tone :man_teacher_tone2: man teacher: medium skin tone :man_teacher_tone3: man teacher: medium-dark skin tone :man_teacher_tone4: man teacher: dark skin tone :man_teacher_tone5: man technologist :man_technologist: man technologist: light skin tone :man_technologist_tone1: man technologist: medium-light skin tone :man_technologist_tone2: man technologist: medium skin tone :man_technologist_tone3: man technologist: medium-dark skin tone :man_technologist_tone4: man technologist: dark skin tone :man_technologist_tone5: man tipping hand :man_tipping_hand: man tipping hand: light skin tone :man_tipping_hand_tone1: man tipping hand: medium-light skin tone :man_tipping_hand_tone2: man tipping hand: medium skin tone :man_tipping_hand_tone3: man tipping hand: medium-dark skin tone :man_tipping_hand_tone4: man tipping hand: dark skin tone :man_tipping_hand_tone5: man: light skin tone :man_tone1: man: medium-light skin tone :man_tone2: man: medium skin tone :man_tone3: man: medium-dark skin tone :man_tone4: man: dark skin tone :man_tone5: man vampire :man_vampire: man vampire: light skin tone :man_vampire_tone1: man vampire: medium-light skin tone :man_vampire_tone2: man vampire: medium skin tone :man_vampire_tone3: man vampire: medium-dark skin tone :man_vampire_tone4: man vampire: dark skin tone :man_vampire_tone5: man walking :man_walking: man walking: light skin tone :man_walking_tone1: man walking: medium-light skin tone :man_walking_tone2: man walking: medium skin tone :man_walking_tone3: man walking: medium-dark skin tone :man_walking_tone4: man walking: dark skin tone :man_walking_tone5: man wearing turban :man_wearing_turban: man wearing turban: light skin tone :man_wearing_turban_tone1: man wearing turban: medium-light skin tone :man_wearing_turban_tone2: man wearing turban: medium skin tone :man_wearing_turban_tone3: man wearing turban: medium-dark skin tone :man_wearing_turban_tone4: man wearing turban: dark skin tone :man_wearing_turban_tone5: man with Chinese cap :man_with_chinese_cap: man with Chinese cap: light skin tone :man_with_chinese_cap_tone1: man with Chinese cap: medium-light skin tone :man_with_chinese_cap_tone2: man with Chinese cap: medium skin tone :man_with_chinese_cap_tone3: man with Chinese cap: medium-dark skin tone :man_with_chinese_cap_tone4: man with Chinese cap: dark skin tone :man_with_chinese_cap_tone5: man zombie :man_zombie: man\\u2019s shoe :mans_shoe: world map :map: maple leaf :maple_leaf: martial arts uniform :martial_arts_uniform: face with medical mask :mask: meat on bone :meat_on_bone: sports medal :medal: medical symbol :medical_symbol: megaphone :mega: melon :melon: men with bunny ears partying :men_with_bunny_ears_partying: men wrestling :men_wrestling: menorah :menorah: men\\u2019s room :mens: mermaid :mermaid: mermaid: light skin tone :mermaid_tone1: mermaid: medium-light skin tone :mermaid_tone2: mermaid: medium skin tone :mermaid_tone3: mermaid: medium-dark skin tone :mermaid_tone4: mermaid: dark skin tone :mermaid_tone5: merman :merman: merman: light skin tone :merman_tone1: merman: medium-light skin tone :merman_tone2: merman: medium skin tone :merman_tone3: merman: medium-dark skin tone :merman_tone4: merman: dark skin tone :merman_tone5: merperson :merperson: merperson: light skin tone :merperson_tone1: merperson: medium-light skin tone :merperson_tone2: merperson: medium skin tone :merperson_tone3: merperson: medium-dark skin tone :merperson_tone4: merperson: dark skin tone :merperson_tone5: sign of the horns :metal: sign of the horns: light skin tone :metal_tone1: sign of the horns: medium-light skin tone :metal_tone2: sign of the horns: medium skin tone :metal_tone3: sign of the horns: medium-dark skin tone :metal_tone4: sign of the horns: dark skin tone :metal_tone5: metro :metro: studio microphone :microphone2: microphone :microphone: microscope :microscope: middle finger :middle_finger: middle finger: light skin tone :middle_finger_tone1: middle finger: medium-light skin tone :middle_finger_tone2: middle finger: medium skin tone :middle_finger_tone3: middle finger: medium-dark skin tone :middle_finger_tone4: middle finger: dark skin tone :middle_finger_tone5: military medal :military_medal: glass of milk :milk: milky way :milky_way: minibus :minibus: computer disk :minidisc: mobile phone off :mobile_phone_off: money-mouth face :money_mouth: money with wings :money_with_wings: money bag :moneybag: monkey :monkey: monkey face :monkey_face: monorail :monorail: graduation cap :mortar_board: mosque :mosque: motor scooter :motor_scooter: motor boat :motorboat: motorcycle :motorcycle: motorway :motorway: mount fuji :mount_fuji: mountain :mountain: mountain cableway :mountain_cableway: mountain railway :mountain_railway: snow-capped mountain :mountain_snow: mouse :mouse2: mouse face :mouse: computer mouse :mouse_three_button: movie camera :movie_camera: moai :moyai: Mrs. Claus :mrs_claus: Mrs. Claus: light skin tone :mrs_claus_tone1: Mrs. Claus: medium-light skin tone :mrs_claus_tone2: Mrs. Claus: medium skin tone :mrs_claus_tone3: Mrs. Claus: medium-dark skin tone :mrs_claus_tone4: Mrs. Claus: dark skin tone :mrs_claus_tone5: flexed biceps :muscle: flexed biceps: light skin tone :muscle_tone1: flexed biceps: medium-light skin tone :muscle_tone2: flexed biceps: medium skin tone :muscle_tone3: flexed biceps: medium-dark skin tone :muscle_tone4: flexed biceps: dark skin tone :muscle_tone5: mushroom :mushroom: musical keyboard :musical_keyboard: musical note :musical_note: musical score :musical_score: muted speaker :mute: nail polish :nail_care: nail polish: light skin tone :nail_care_tone1: nail polish: medium-light skin tone :nail_care_tone2: nail polish: medium skin tone :nail_care_tone3: nail polish: medium-dark skin tone :nail_care_tone4: nail polish: dark skin tone :nail_care_tone5: name badge :name_badge: nauseated face :nauseated_face: necktie :necktie: cross mark button :negative_squared_cross_mark: nerd face :nerd: neutral face :neutral_face: NEW button :new: new moon :new_moon: new moon face :new_moon_with_face: rolled-up newspaper :newspaper2: newspaper :newspaper: NG button :ng: night with stars :night_with_stars: keycap: 9 :nine: bell with slash :no_bell: no bicycles :no_bicycles: no entry :no_entry: prohibited :no_entry_sign: no mobile phones :no_mobile_phones: face without mouth :no_mouth: no pedestrians :no_pedestrians: no smoking :no_smoking: non-potable water :non-potable_water: nose :nose: nose: light skin tone :nose_tone1: nose: medium-light skin tone :nose_tone2: nose: medium skin tone :nose_tone3: nose: medium-dark skin tone :nose_tone4: nose: dark skin tone :nose_tone5: notebook :notebook: notebook with decorative cover :notebook_with_decorative_cover: spiral notepad :notepad_spiral: musical notes :notes: nut and bolt :nut_and_bolt: O button (blood type) :o2: heavy large circle :o: water wave :ocean: stop sign :octagonal_sign: octopus :octopus: oden :oden: office building :office: oil drum :oil: OK button :ok: OK hand :ok_hand: OK hand: light skin tone :ok_hand_tone1: OK hand: medium-light skin tone :ok_hand_tone2: OK hand: medium skin tone :ok_hand_tone3: OK hand: medium-dark skin tone :ok_hand_tone4: OK hand: dark skin tone :ok_hand_tone5: older adult :older_adult: older adult: light skin tone :older_adult_tone1: older adult: medium-light skin tone :older_adult_tone2: older adult: medium skin tone :older_adult_tone3: older adult: medium-dark skin tone :older_adult_tone4: older adult: dark skin tone :older_adult_tone5: old man :older_man: old man: light skin tone :older_man_tone1: old man: medium-light skin tone :older_man_tone2: old man: medium skin tone :older_man_tone3: old man: medium-dark skin tone :older_man_tone4: old man: dark skin tone :older_man_tone5: old woman :older_woman: old woman: light skin tone :older_woman_tone1: old woman: medium-light skin tone :older_woman_tone2: old woman: medium skin tone :older_woman_tone3: old woman: medium-dark skin tone :older_woman_tone4: old woman: dark skin tone :older_woman_tone5: om :om_symbol: ON! arrow :on: oncoming automobile :oncoming_automobile: oncoming bus :oncoming_bus: oncoming police car :oncoming_police_car: oncoming taxi :oncoming_taxi: keycap: 1 :one: open file folder :open_file_folder: open hands :open_hands: open hands: light skin tone :open_hands_tone1: open hands: medium-light skin tone :open_hands_tone2: open hands: medium skin tone :open_hands_tone3: open hands: medium-dark skin tone :open_hands_tone4: open hands: dark skin tone :open_hands_tone5: face with open mouth :open_mouth: Ophiuchus :ophiuchus: orange book :orange_book: orange heart :orange_heart: orthodox cross :orthodox_cross: outbox tray :outbox_tray: owl :owl: ox :ox: package :package: page facing up :page_facing_up: page with curl :page_with_curl: pager :pager: paintbrush :paintbrush: palm tree :palm_tree: palms up together :palms_up_together: palms up together: light skin tone :palms_up_together_tone1: palms up together: medium-light skin tone :palms_up_together_tone2: palms up together: medium skin tone :palms_up_together_tone3: palms up together: medium-dark skin tone :palms_up_together_tone4: palms up together: dark skin tone :palms_up_together_tone5: pancakes :pancakes: panda face :panda_face: paperclip :paperclip: linked paperclips :paperclips: national park :park: P button :parking: part alternation mark :part_alternation_mark: sun behind cloud :partly_sunny: passport control :passport_control: pause button :pause_button: peace symbol :peace: peach :peach: peanuts :peanuts: pear :pear: pen :pen_ballpoint: fountain pen :pen_fountain: pencil :pencil2: memo :pencil: penguin :penguin: pensive face :pensive: people with bunny ears partying :people_with_bunny_ears_partying: people wrestling :people_wrestling: performing arts :performing_arts: persevering face :persevere: person biking :person_biking: person biking: light skin tone :person_biking_tone1: person biking: medium-light skin tone :person_biking_tone2: person biking: medium skin tone :person_biking_tone3: person biking: medium-dark skin tone :person_biking_tone4: person biking: dark skin tone :person_biking_tone5: person bouncing ball :person_bouncing_ball: person bouncing ball: light skin tone :person_bouncing_ball_tone1: person bouncing ball: medium-light skin tone :person_bouncing_ball_tone2: person bouncing ball: medium skin tone :person_bouncing_ball_tone3: person bouncing ball: medium-dark skin tone :person_bouncing_ball_tone4: person bouncing ball: dark skin tone :person_bouncing_ball_tone5: person bowing :person_bowing: person bowing: light skin tone :person_bowing_tone1: person bowing: medium-light skin tone :person_bowing_tone2: person bowing: medium skin tone :person_bowing_tone3: person bowing: medium-dark skin tone :person_bowing_tone4: person bowing: dark skin tone :person_bowing_tone5: person climbing :person_climbing: person climbing: light skin tone :person_climbing_tone1: person climbing: medium-light skin tone :person_climbing_tone2: person climbing: medium skin tone :person_climbing_tone3: person climbing: medium-dark skin tone :person_climbing_tone4: person climbing: dark skin tone :person_climbing_tone5: person cartwheeling :person_doing_cartwheel: person cartwheeling: light skin tone :person_doing_cartwheel_tone1: person cartwheeling: medium-light skin tone :person_doing_cartwheel_tone2: person cartwheeling: medium skin tone :person_doing_cartwheel_tone3: person cartwheeling: medium-dark skin tone :person_doing_cartwheel_tone4: person cartwheeling: dark skin tone :person_doing_cartwheel_tone5: person facepalming :person_facepalming: person facepalming: light skin tone :person_facepalming_tone1: person facepalming: medium-light skin tone :person_facepalming_tone2: person facepalming: medium skin tone :person_facepalming_tone3: person facepalming: medium-dark skin tone :person_facepalming_tone4: person facepalming: dark skin tone :person_facepalming_tone5: person fencing :person_fencing: person frowning :person_frowning: person frowning: light skin tone :person_frowning_tone1: person frowning: medium-light skin tone :person_frowning_tone2: person frowning: medium skin tone :person_frowning_tone3: person frowning: medium-dark skin tone :person_frowning_tone4: person frowning: dark skin tone :person_frowning_tone5: person gesturing NO :person_gesturing_no: person gesturing NO: light skin tone :person_gesturing_no_tone1: person gesturing NO: medium-light skin tone :person_gesturing_no_tone2: person gesturing NO: medium skin tone :person_gesturing_no_tone3: person gesturing NO: medium-dark skin tone :person_gesturing_no_tone4: person gesturing NO: dark skin tone :person_gesturing_no_tone5: person gesturing OK :person_gesturing_ok: person gesturing OK: light skin tone :person_gesturing_ok_tone1: person gesturing OK: medium-light skin tone :person_gesturing_ok_tone2: person gesturing OK: medium skin tone :person_gesturing_ok_tone3: person gesturing OK: medium-dark skin tone :person_gesturing_ok_tone4: person gesturing OK: dark skin tone :person_gesturing_ok_tone5: person getting haircut :person_getting_haircut: person getting haircut: light skin tone :person_getting_haircut_tone1: person getting haircut: medium-light skin tone :person_getting_haircut_tone2: person getting haircut: medium skin tone :person_getting_haircut_tone3: person getting haircut: medium-dark skin tone :person_getting_haircut_tone4: person getting haircut: dark skin tone :person_getting_haircut_tone5: person getting massage :person_getting_massage: person getting massage: light skin tone :person_getting_massage_tone1: person getting massage: medium-light skin tone :person_getting_massage_tone2: person getting massage: medium skin tone :person_getting_massage_tone3: person getting massage: medium-dark skin tone :person_getting_massage_tone4: person getting massage: dark skin tone :person_getting_massage_tone5: person golfing :person_golfing: person golfing: light skin tone :person_golfing_tone1: person golfing: medium-light skin tone :person_golfing_tone2: person golfing: medium skin tone :person_golfing_tone3: person golfing: medium-dark skin tone :person_golfing_tone4: person golfing: dark skin tone :person_golfing_tone5: person in bed: light skin tone :person_in_bed_tone1: person in bed: medium-light skin tone :person_in_bed_tone2: person in bed: medium skin tone :person_in_bed_tone3: person in bed: medium-dark skin tone :person_in_bed_tone4: person in bed: dark skin tone :person_in_bed_tone5: person in lotus position :person_in_lotus_position: person in lotus position: light skin tone :person_in_lotus_position_tone1: person in lotus position: medium-light skin tone :person_in_lotus_position_tone2: person in lotus position: medium skin tone :person_in_lotus_position_tone3: person in lotus position: medium-dark skin tone :person_in_lotus_position_tone4: person in lotus position: dark skin tone :person_in_lotus_position_tone5: person in steamy room :person_in_steamy_room: person in steamy room: light skin tone :person_in_steamy_room_tone1: person in steamy room: medium-light skin tone :person_in_steamy_room_tone2: person in steamy room: medium skin tone :person_in_steamy_room_tone3: person in steamy room: medium-dark skin tone :person_in_steamy_room_tone4: person in steamy room: dark skin tone :person_in_steamy_room_tone5: person juggling :person_juggling: person juggling: light skin tone :person_juggling_tone1: person juggling: medium-light skin tone :person_juggling_tone2: person juggling: medium skin tone :person_juggling_tone3: person juggling: medium-dark skin tone :person_juggling_tone4: person juggling: dark skin tone :person_juggling_tone5: person lifting weights :person_lifting_weights: person lifting weights: light skin tone :person_lifting_weights_tone1: person lifting weights: medium-light skin tone :person_lifting_weights_tone2: person lifting weights: medium skin tone :person_lifting_weights_tone3: person lifting weights: medium-dark skin tone :person_lifting_weights_tone4: person lifting weights: dark skin tone :person_lifting_weights_tone5: person mountain biking :person_mountain_biking: person mountain biking: light skin tone :person_mountain_biking_tone1: person mountain biking: medium-light skin tone :person_mountain_biking_tone2: person mountain biking: medium skin tone :person_mountain_biking_tone3: person mountain biking: medium-dark skin tone :person_mountain_biking_tone4: person mountain biking: dark skin tone :person_mountain_biking_tone5: person playing handball :person_playing_handball: person playing handball: light skin tone :person_playing_handball_tone1: person playing handball: medium-light skin tone :person_playing_handball_tone2: person playing handball: medium skin tone :person_playing_handball_tone3: person playing handball: medium-dark skin tone :person_playing_handball_tone4: person playing handball: dark skin tone :person_playing_handball_tone5: person playing water polo :person_playing_water_polo: person playing water polo: light skin tone :person_playing_water_polo_tone1: person playing water polo: medium-light skin tone :person_playing_water_polo_tone2: person playing water polo: medium skin tone :person_playing_water_polo_tone3: person playing water polo: medium-dark skin tone :person_playing_water_polo_tone4: person playing water polo: dark skin tone :person_playing_water_polo_tone5: person pouting :person_pouting: person pouting: light skin tone :person_pouting_tone1: person pouting: medium-light skin tone :person_pouting_tone2: person pouting: medium skin tone :person_pouting_tone3: person pouting: medium-dark skin tone :person_pouting_tone4: person pouting: dark skin tone :person_pouting_tone5: person raising hand :person_raising_hand: person raising hand: light skin tone :person_raising_hand_tone1: person raising hand: medium-light skin tone :person_raising_hand_tone2: person raising hand: medium skin tone :person_raising_hand_tone3: person raising hand: medium-dark skin tone :person_raising_hand_tone4: person raising hand: dark skin tone :person_raising_hand_tone5: person rowing boat :person_rowing_boat: person rowing boat: light skin tone :person_rowing_boat_tone1: person rowing boat: medium-light skin tone :person_rowing_boat_tone2: person rowing boat: medium skin tone :person_rowing_boat_tone3: person rowing boat: medium-dark skin tone :person_rowing_boat_tone4: person rowing boat: dark skin tone :person_rowing_boat_tone5: person running :person_running: person running: light skin tone :person_running_tone1: person running: medium-light skin tone :person_running_tone2: person running: medium skin tone :person_running_tone3: person running: medium-dark skin tone :person_running_tone4: person running: dark skin tone :person_running_tone5: person shrugging :person_shrugging: person shrugging: light skin tone :person_shrugging_tone1: person shrugging: medium-light skin tone :person_shrugging_tone2: person shrugging: medium skin tone :person_shrugging_tone3: person shrugging: medium-dark skin tone :person_shrugging_tone4: person shrugging: dark skin tone :person_shrugging_tone5: person surfing :person_surfing: person surfing: light skin tone :person_surfing_tone1: person surfing: medium-light skin tone :person_surfing_tone2: person surfing: medium skin tone :person_surfing_tone3: person surfing: medium-dark skin tone :person_surfing_tone4: person surfing: dark skin tone :person_surfing_tone5: person swimming :person_swimming: person swimming: light skin tone :person_swimming_tone1: person swimming: medium-light skin tone :person_swimming_tone2: person swimming: medium skin tone :person_swimming_tone3: person swimming: medium-dark skin tone :person_swimming_tone4: person swimming: dark skin tone :person_swimming_tone5: person tipping hand :person_tipping_hand: person tipping hand: light skin tone :person_tipping_hand_tone1: person tipping hand: medium-light skin tone :person_tipping_hand_tone2: person tipping hand: medium skin tone :person_tipping_hand_tone3: person tipping hand: medium-dark skin tone :person_tipping_hand_tone4: person tipping hand: dark skin tone :person_tipping_hand_tone5: person walking :person_walking: person walking: light skin tone :person_walking_tone1: person walking: medium-light skin tone :person_walking_tone2: person walking: medium skin tone :person_walking_tone3: person walking: medium-dark skin tone :person_walking_tone4: person walking: dark skin tone :person_walking_tone5: person wearing turban :person_wearing_turban: person wearing turban: light skin tone :person_wearing_turban_tone1: person wearing turban: medium-light skin tone :person_wearing_turban_tone2: person wearing turban: medium skin tone :person_wearing_turban_tone3: person wearing turban: medium-dark skin tone :person_wearing_turban_tone4: person wearing turban: dark skin tone :person_wearing_turban_tone5: pick :pick: pie :pie: pig :pig2: pig face :pig: pig nose :pig_nose: pill :pill: pineapple :pineapple: ping pong :ping_pong: Pisces :pisces: pizza :pizza: place of worship :place_of_worship: play or pause button :play_pause: backhand index pointing down :point_down: backhand index pointing down: light skin tone :point_down_tone1: backhand index pointing down: medium-light skin tone :point_down_tone2: backhand index pointing down: medium skin tone :point_down_tone3: backhand index pointing down: medium-dark skin tone :point_down_tone4: backhand index pointing down: dark skin tone :point_down_tone5: backhand index pointing left :point_left: backhand index pointing left: light skin tone :point_left_tone1: backhand index pointing left: medium-light skin tone :point_left_tone2: backhand index pointing left: medium skin tone :point_left_tone3: backhand index pointing left: medium-dark skin tone :point_left_tone4: backhand index pointing left: dark skin tone :point_left_tone5: backhand index pointing right :point_right: backhand index pointing right: light skin tone :point_right_tone1: backhand index pointing right: medium-light skin tone :point_right_tone2: backhand index pointing right: medium skin tone :point_right_tone3: backhand index pointing right: medium-dark skin tone :point_right_tone4: backhand index pointing right: dark skin tone :point_right_tone5: index pointing up :point_up: backhand index pointing up :point_up_2: backhand index pointing up: light skin tone :point_up_2_tone1: backhand index pointing up: medium-light skin tone :point_up_2_tone2: backhand index pointing up: medium skin tone :point_up_2_tone3: backhand index pointing up: medium-dark skin tone :point_up_2_tone4: backhand index pointing up: dark skin tone :point_up_2_tone5: index pointing up: light skin tone :point_up_tone1: index pointing up: medium-light skin tone :point_up_tone2: index pointing up: medium skin tone :point_up_tone3: index pointing up: medium-dark skin tone :point_up_tone4: index pointing up: dark skin tone :point_up_tone5: police car :police_car: police officer :police_officer: police officer: light skin tone :police_officer_tone1: police officer: medium-light skin tone :police_officer_tone2: police officer: medium skin tone :police_officer_tone3: police officer: medium-dark skin tone :police_officer_tone4: police officer: dark skin tone :police_officer_tone5: poodle :poodle: pile of poo :poop: popcorn :popcorn: Japanese post office :post_office: postal horn :postal_horn: postbox :postbox: potable water :potable_water: potato :potato: clutch bag :pouch: poultry leg :poultry_leg: pound banknote :pound: pound symbol :pound_symbol: pouting cat face :pouting_cat: folded hands :pray: folded hands: light skin tone :pray_tone1: folded hands: medium-light skin tone :pray_tone2: folded hands: medium skin tone :pray_tone3: folded hands: medium-dark skin tone :pray_tone4: folded hands: dark skin tone :pray_tone5: prayer beads :prayer_beads: pregnant woman :pregnant_woman: pregnant woman: light skin tone :pregnant_woman_tone1: pregnant woman: medium-light skin tone :pregnant_woman_tone2: pregnant woman: medium skin tone :pregnant_woman_tone3: pregnant woman: medium-dark skin tone :pregnant_woman_tone4: pregnant woman: dark skin tone :pregnant_woman_tone5: pretzel :pretzel: prince :prince: prince: light skin tone :prince_tone1: prince: medium-light skin tone :prince_tone2: prince: medium skin tone :prince_tone3: prince: medium-dark skin tone :prince_tone4: prince: dark skin tone :prince_tone5: princess :princess: princess: light skin tone :princess_tone1: princess: medium-light skin tone :princess_tone2: princess: medium skin tone :princess_tone3: princess: medium-dark skin tone :princess_tone4: princess: dark skin tone :princess_tone5: printer :printer: film projector :projector: oncoming fist :punch: oncoming fist: light skin tone :punch_tone1: oncoming fist: medium-light skin tone :punch_tone2: oncoming fist: medium skin tone :punch_tone3: oncoming fist: medium-dark skin tone :punch_tone4: oncoming fist: dark skin tone :punch_tone5: purple heart :purple_heart: purse :purse: pushpin :pushpin: litter in bin sign :put_litter_in_its_place: question mark :question: rabbit :rabbit2: rabbit face :rabbit: racing car :race_car: horse :racehorse: radio :radio: radio button :radio_button: radioactive :radioactive: pouting face :rage: railway car :railway_car: railway track :railway_track: rainbow :rainbow: rainbow flag :rainbow_flag: raised back of hand :raised_back_of_hand: raised back of hand: light skin tone :raised_back_of_hand_tone1: raised back of hand: medium-light skin tone :raised_back_of_hand_tone2: raised back of hand: medium skin tone :raised_back_of_hand_tone3: raised back of hand: medium-dark skin tone :raised_back_of_hand_tone4: raised back of hand: dark skin tone :raised_back_of_hand_tone5: raised hand :raised_hand: raised hand: light skin tone :raised_hand_tone1: raised hand: medium-light skin tone :raised_hand_tone2: raised hand: medium skin tone :raised_hand_tone3: raised hand: medium-dark skin tone :raised_hand_tone4: raised hand: dark skin tone :raised_hand_tone5: raising hands :raised_hands: raising hands: light skin tone :raised_hands_tone1: raising hands: medium-light skin tone :raised_hands_tone2: raising hands: medium skin tone :raised_hands_tone3: raising hands: medium-dark skin tone :raised_hands_tone4: raising hands: dark skin tone :raised_hands_tone5: ram :ram: steaming bowl :ramen: rat :rat: record button :record_button: recycling symbol :recycle: automobile :red_car: red circle :red_circle: regional indicator symbol letter a :regional_indicator_a: regional indicator symbol letter b :regional_indicator_b: regional indicator symbol letter c :regional_indicator_c: regional indicator symbol letter d :regional_indicator_d: regional indicator symbol letter e :regional_indicator_e: regional indicator symbol letter f :regional_indicator_f: regional indicator symbol letter g :regional_indicator_g: regional indicator symbol letter h :regional_indicator_h: regional indicator symbol letter i :regional_indicator_i: regional indicator symbol letter j :regional_indicator_j: regional indicator symbol letter k :regional_indicator_k: regional indicator symbol letter l :regional_indicator_l: regional indicator symbol letter m :regional_indicator_m: regional indicator symbol letter n :regional_indicator_n: regional indicator symbol letter o :regional_indicator_o: regional indicator symbol letter p :regional_indicator_p: regional indicator symbol letter q :regional_indicator_q: regional indicator symbol letter r :regional_indicator_r: regional indicator symbol letter s :regional_indicator_s: regional indicator symbol letter t :regional_indicator_t: regional indicator symbol letter u :regional_indicator_u: regional indicator symbol letter v :regional_indicator_v: regional indicator symbol letter w :regional_indicator_w: regional indicator symbol letter x :regional_indicator_x: regional indicator symbol letter y :regional_indicator_y: regional indicator symbol letter z :regional_indicator_z: registered :registered: smiling face :relaxed: relieved face :relieved: reminder ribbon :reminder_ribbon: repeat button :repeat: repeat single button :repeat_one: restroom :restroom: revolving hearts :revolving_hearts: fast reverse button :rewind: rhinoceros :rhino: ribbon :ribbon: cooked rice :rice: rice ball :rice_ball: rice cracker :rice_cracker: moon viewing ceremony :rice_scene: right-facing fist :right_facing_fist: right-facing fist: light skin tone :right_facing_fist_tone1: right-facing fist: medium-light skin tone :right_facing_fist_tone2: right-facing fist: medium skin tone :right_facing_fist_tone3: right-facing fist: medium-dark skin tone :right_facing_fist_tone4: right-facing fist: dark skin tone :right_facing_fist_tone5: ring :ring: robot face :robot: rocket :rocket: rolling on the floor laughing :rofl: roller coaster :roller_coaster: face with rolling eyes :rolling_eyes: rooster :rooster: rose :rose: rosette :rosette: police car light :rotating_light: round pushpin :round_pushpin: rugby football :rugby_football: running shirt :running_shirt_with_sash: Japanese \\u201cservice charge\\u201d button :sa: Sagittarius :sagittarius: sailboat :sailboat: sake :sake: green salad :salad: woman\\u2019s sandal :sandal: sandwich :sandwich: Santa Claus :santa: Santa Claus: light skin tone :santa_tone1: Santa Claus: medium-light skin tone :santa_tone2: Santa Claus: medium skin tone :santa_tone3: Santa Claus: medium-dark skin tone :santa_tone4: Santa Claus: dark skin tone :santa_tone5: satellite antenna :satellite: satellite :satellite_orbital: sauropod :sauropod: saxophone :saxophone: balance scale :scales: scarf :scarf: school :school: school backpack :school_satchel: scissors :scissors: kick scooter :scooter: scorpion :scorpion: Scorpius :scorpius: Scotland :scotland: face screaming in fear :scream: weary cat face :scream_cat: scroll :scroll: seat :seat: 2 nd place medal :second_place: Japanese \\u201csecret\\u201d button :secret: see-no-evil monkey :see_no_evil: seedling :seedling: selfie :selfie: selfie: light skin tone :selfie_tone1: selfie: medium-light skin tone :selfie_tone2: selfie: medium skin tone :selfie_tone3: selfie: medium-dark skin tone :selfie_tone4: selfie: dark skin tone :selfie_tone5: keycap: 7 :seven: shallow pan of food :shallow_pan_of_food: shamrock :shamrock: shark :shark: shaved ice :shaved_ice: ewe :sheep: spiral shell :shell: shield :shield: shinto shrine :shinto_shrine: ship :ship: t-shirt :shirt: shopping bags :shopping_bags: shopping cart :shopping_cart: shower :shower: shrimp :shrimp: shushing face :shushing_face: antenna bars :signal_strength: keycap: 6 :six: dotted six-pointed star :six_pointed_star: skis :ski: skier :skier: skull :skull: skull and crossbones :skull_crossbones: sled :sled: sleeping face :sleeping: person in bed :sleeping_accommodation: sleepy face :sleepy: slightly frowning face :slight_frown: slightly smiling face :slight_smile: slot machine :slot_machine: small blue diamond :small_blue_diamond: small orange diamond :small_orange_diamond: red triangle pointed up :small_red_triangle: red triangle pointed down :small_red_triangle_down: smiling face with open mouth smiling eyes :smile: grinning cat face with smiling eyes :smile_cat: smiling face with open mouth :smiley: smiling cat face with open mouth :smiley_cat: smiling face with horns :smiling_imp: smirking face :smirk: cat face with wry smile :smirk_cat: cigarette :smoking: snail :snail: snake :snake: sneezing face :sneezing_face: snowboarder :snowboarder: snowboarder: light skin tone :snowboarder_tone1: snowboarder: medium-light skin tone :snowboarder_tone2: snowboarder: medium skin tone :snowboarder_tone3: snowboarder: medium-dark skin tone :snowboarder_tone4: snowboarder: dark skin tone :snowboarder_tone5: snowflake :snowflake: snowman :snowman2: snowman without snow :snowman: loudly crying face :sob: soccer ball :soccer: socks :socks: SOON arrow :soon: SOS button :sos: speaker medium volume :sound: alien monster :space_invader: spade suit :spades: spaghetti :spaghetti: sparkle :sparkle: sparkler :sparkler: sparkles :sparkles: sparkling heart :sparkling_heart: speak-no-evil monkey :speak_no_evil: speaker low volume :speaker: speaking head :speaking_head: speech balloon :speech_balloon: left speech bubble :speech_left: speedboat :speedboat: spider :spider: spider web :spider_web: spoon :spoon: squid :squid: stadium :stadium: glowing star :star2: white medium star :star: star and crescent :star_and_crescent: star of David :star_of_david: star-struck :star_struck: shooting star :stars: station :station: Statue of Liberty :statue_of_liberty: locomotive :steam_locomotive: pot of food :stew: stop button :stop_button: stopwatch :stopwatch: straight ruler :straight_ruler: strawberry :strawberry: face with stuck-out tongue :stuck_out_tongue: face with stuck-out tongue closed eyes :stuck_out_tongue_closed_eyes: face with stuck-out tongue winking eye :stuck_out_tongue_winking_eye: stuffed flatbread :stuffed_flatbread: sun with face :sun_with_face: sunflower :sunflower: smiling face with sunglasses :sunglasses: sun :sunny: sunrise :sunrise: sunrise over mountains :sunrise_over_mountains: sushi :sushi: suspension railway :suspension_railway: face with cold sweat :sweat: sweat droplets :sweat_drops: smiling face with open mouth cold sweat :sweat_smile: roasted sweet potato :sweet_potato: input symbols :symbols: synagogue :synagogue: syringe :syringe: T-Rex :t_rex: taco :taco: party popper :tada: takeout box :takeout_box: tanabata tree :tanabata_tree: tangerine :tangerine: Taurus :taurus: taxi :taxi: teacup without handle :tea: telephone :telephone: telephone receiver :telephone_receiver: telescope :telescope: tennis :tennis: tent :tent: thermometer :thermometer: face with thermometer :thermometer_face: thinking face :thinking: 3 rd place medal :third_place: thought balloon :thought_balloon: keycap: 3 :three: thumbs down :thumbsdown: thumbs down: light skin tone :thumbsdown_tone1: thumbs down: medium-light skin tone :thumbsdown_tone2: thumbs down: medium skin tone :thumbsdown_tone3: thumbs down: medium-dark skin tone :thumbsdown_tone4: thumbs down: dark skin tone :thumbsdown_tone5: thumbs up :thumbsup: thumbs up: light skin tone :thumbsup_tone1: thumbs up: medium-light skin tone :thumbsup_tone2: thumbs up: medium skin tone :thumbsup_tone3: thumbs up: medium-dark skin tone :thumbsup_tone4: thumbs up: dark skin tone :thumbsup_tone5: cloud with lightning and rain :thunder_cloud_rain: ticket :ticket: admission tickets :tickets: tiger :tiger2: tiger face :tiger: timer clock :timer: tired face :tired_face: trade mark :tm: toilet :toilet: Tokyo tower :tokyo_tower: tomato :tomato: light skin tone :tone1: medium-light skin tone :tone2: medium skin tone :tone3: medium-dark skin tone :tone4: dark skin tone :tone5: tongue :tongue: hammer and wrench :tools: TOP arrow :top: top hat :tophat: next track button :track_next: last track button :track_previous: trackball :trackball: tractor :tractor: horizontal traffic light :traffic_light: train :train2: tram car :train: tram :tram: triangular flag :triangular_flag_on_post: triangular ruler :triangular_ruler: trident emblem :trident: face with steam from nose :triumph: trolleybus :trolleybus: trophy :trophy: tropical drink :tropical_drink: tropical fish :tropical_fish: delivery truck :truck: trumpet :trumpet: tulip :tulip: tumbler glass :tumbler_glass: turkey :turkey: turtle :turtle: television :tv: shuffle tracks button :twisted_rightwards_arrows: keycap: 2 :two: two hearts :two_hearts: two men holding hands :two_men_holding_hands: two women holding hands :two_women_holding_hands: Japanese \\u201cdiscount\\u201d button :u5272: Japanese \\u201cpassing grade\\u201d button :u5408: Japanese \\u201copen for business\\u201d button :u55b6: Japanese \\u201creserved\\u201d button :u6307: Japanese \\u201cmonthly amount\\u201d button :u6708: Japanese \\u201cnot free of charge\\u201d button :u6709: Japanese \\u201cno vacancy\\u201d button :u6e80: Japanese \\u201cfree of charge\\u201d button :u7121: Japanese \\u201capplication\\u201d button :u7533: Japanese \\u201cprohibited\\u201d button :u7981: Japanese \\u201cvacancy\\u201d button :u7a7a: umbrella :umbrella2: umbrella with rain drops :umbrella: unamused face :unamused: no one under eighteen :underage: unicorn face :unicorn: United Nations :united_nations: unlocked :unlock: UP! button :up: upside-down face :upside_down: funeral urn :urn: victory hand :v: victory hand: light skin tone :v_tone1: victory hand: medium-light skin tone :v_tone2: victory hand: medium skin tone :v_tone3: victory hand: medium-dark skin tone :v_tone4: victory hand: dark skin tone :v_tone5: vampire :vampire: vampire: light skin tone :vampire_tone1: vampire: medium-light skin tone :vampire_tone2: vampire: medium skin tone :vampire_tone3: vampire: medium-dark skin tone :vampire_tone4: vampire: dark skin tone :vampire_tone5: vertical traffic light :vertical_traffic_light: videocassette :vhs: vibration mode :vibration_mode: video camera :video_camera: video game :video_game: violin :violin: Virgo :virgo: volcano :volcano: volleyball :volleyball: VS button :vs: vulcan salute :vulcan: vulcan salute: light skin tone :vulcan_tone1: vulcan salute: medium-light skin tone :vulcan_tone2: vulcan salute: medium skin tone :vulcan_tone3: vulcan salute: medium-dark skin tone :vulcan_tone4: vulcan salute: dark skin tone :vulcan_tone5: Wales :wales: waning crescent moon :waning_crescent_moon: waning gibbous moon :waning_gibbous_moon: warning :warning: wastebasket :wastebasket: watch :watch: water buffalo :water_buffalo: watermelon :watermelon: waving hand :wave: waving hand: light skin tone :wave_tone1: waving hand: medium-light skin tone :wave_tone2: waving hand: medium skin tone :wave_tone3: waving hand: medium-dark skin tone :wave_tone4: waving hand: dark skin tone :wave_tone5: wavy dash :wavy_dash: waxing crescent moon :waxing_crescent_moon: waxing gibbous moon :waxing_gibbous_moon: water closet :wc: weary face :weary: wedding :wedding: whale :whale2: spouting whale :whale: wheel of dharma :wheel_of_dharma: wheelchair symbol :wheelchair: white heavy check mark :white_check_mark: white circle :white_circle: white flower :white_flower: white large square :white_large_square: white medium-small square :white_medium_small_square: white medium square :white_medium_square: white small square :white_small_square: white square button :white_square_button: sun behind large cloud :white_sun_cloud: sun behind rain cloud :white_sun_rain_cloud: sun behind small cloud :white_sun_small_cloud: wilted flower :wilted_rose: wind face :wind_blowing_face: wind chime :wind_chime: wine glass :wine_glass: winking face :wink: wolf face :wolf: woman :woman: woman artist :woman_artist: woman artist: light skin tone :woman_artist_tone1: woman artist: medium-light skin tone :woman_artist_tone2: woman artist: medium skin tone :woman_artist_tone3: woman artist: medium-dark skin tone :woman_artist_tone4: woman artist: dark skin tone :woman_artist_tone5: woman astronaut :woman_astronaut: woman astronaut: light skin tone :woman_astronaut_tone1: woman astronaut: medium-light skin tone :woman_astronaut_tone2: woman astronaut: medium skin tone :woman_astronaut_tone3: woman astronaut: medium-dark skin tone :woman_astronaut_tone4: woman astronaut: dark skin tone :woman_astronaut_tone5: woman biking :woman_biking: woman biking: light skin tone :woman_biking_tone1: woman biking: medium-light skin tone :woman_biking_tone2: woman biking: medium skin tone :woman_biking_tone3: woman biking: medium-dark skin tone :woman_biking_tone4: woman biking: dark skin tone :woman_biking_tone5: woman bouncing ball :woman_bouncing_ball: woman bouncing ball: light skin tone :woman_bouncing_ball_tone1: woman bouncing ball: medium-light skin tone :woman_bouncing_ball_tone2: woman bouncing ball: medium skin tone :woman_bouncing_ball_tone3: woman bouncing ball: medium-dark skin tone :woman_bouncing_ball_tone4: woman bouncing ball: dark skin tone :woman_bouncing_ball_tone5: woman bowing :woman_bowing: woman bowing: light skin tone :woman_bowing_tone1: woman bowing: medium-light skin tone :woman_bowing_tone2: woman bowing: medium skin tone :woman_bowing_tone3: woman bowing: medium-dark skin tone :woman_bowing_tone4: woman bowing: dark skin tone :woman_bowing_tone5: woman cartwheeling :woman_cartwheeling: woman cartwheeling: light skin tone :woman_cartwheeling_tone1: woman cartwheeling: medium-light skin tone :woman_cartwheeling_tone2: woman cartwheeling: medium skin tone :woman_cartwheeling_tone3: woman cartwheeling: medium-dark skin tone :woman_cartwheeling_tone4: woman cartwheeling: dark skin tone :woman_cartwheeling_tone5: woman climbing :woman_climbing: woman climbing: light skin tone :woman_climbing_tone1: woman climbing: medium-light skin tone :woman_climbing_tone2: woman climbing: medium skin tone :woman_climbing_tone3: woman climbing: medium-dark skin tone :woman_climbing_tone4: woman climbing: dark skin tone :woman_climbing_tone5: woman construction worker :woman_construction_worker: woman construction worker: light skin tone :woman_construction_worker_tone1: woman construction worker: medium-light skin tone :woman_construction_worker_tone2: woman construction worker: medium skin tone :woman_construction_worker_tone3: woman construction worker: medium-dark skin tone :woman_construction_worker_tone4: woman construction worker: dark skin tone :woman_construction_worker_tone5: woman cook :woman_cook: woman cook: light skin tone :woman_cook_tone1: woman cook: medium-light skin tone :woman_cook_tone2: woman cook: medium skin tone :woman_cook_tone3: woman cook: medium-dark skin tone :woman_cook_tone4: woman cook: dark skin tone :woman_cook_tone5: woman detective :woman_detective: woman detective: light skin tone :woman_detective_tone1: woman detective: medium-light skin tone :woman_detective_tone2: woman detective: medium skin tone :woman_detective_tone3: woman detective: medium-dark skin tone :woman_detective_tone4: woman detective: dark skin tone :woman_detective_tone5: woman elf :woman_elf: woman elf: light skin tone :woman_elf_tone1: woman elf: medium-light skin tone :woman_elf_tone2: woman elf: medium skin tone :woman_elf_tone3: woman elf: medium-dark skin tone :woman_elf_tone4: woman elf: dark skin tone :woman_elf_tone5: woman facepalming :woman_facepalming: woman facepalming: light skin tone :woman_facepalming_tone1: woman facepalming: medium-light skin tone :woman_facepalming_tone2: woman facepalming: medium skin tone :woman_facepalming_tone3: woman facepalming: medium-dark skin tone :woman_facepalming_tone4: woman facepalming: dark skin tone :woman_facepalming_tone5: woman factory worker :woman_factory_worker: woman factory worker: light skin tone :woman_factory_worker_tone1: woman factory worker: medium-light skin tone :woman_factory_worker_tone2: woman factory worker: medium skin tone :woman_factory_worker_tone3: woman factory worker: medium-dark skin tone :woman_factory_worker_tone4: woman factory worker: dark skin tone :woman_factory_worker_tone5: woman fairy :woman_fairy: woman fairy: light skin tone :woman_fairy_tone1: woman fairy: medium-light skin tone :woman_fairy_tone2: woman fairy: medium skin tone :woman_fairy_tone3: woman fairy: medium-dark skin tone :woman_fairy_tone4: woman fairy: dark skin tone :woman_fairy_tone5: woman farmer :woman_farmer: woman farmer: light skin tone :woman_farmer_tone1: woman farmer: medium-light skin tone :woman_farmer_tone2: woman farmer: medium skin tone :woman_farmer_tone3: woman farmer: medium-dark skin tone :woman_farmer_tone4: woman farmer: dark skin tone :woman_farmer_tone5: woman firefighter :woman_firefighter: woman firefighter: light skin tone :woman_firefighter_tone1: woman firefighter: medium-light skin tone :woman_firefighter_tone2: woman firefighter: medium skin tone :woman_firefighter_tone3: woman firefighter: medium-dark skin tone :woman_firefighter_tone4: woman firefighter: dark skin tone :woman_firefighter_tone5: woman frowning :woman_frowning: woman frowning: light skin tone :woman_frowning_tone1: woman frowning: medium-light skin tone :woman_frowning_tone2: woman frowning: medium skin tone :woman_frowning_tone3: woman frowning: medium-dark skin tone :woman_frowning_tone4: woman frowning: dark skin tone :woman_frowning_tone5: woman genie :woman_genie: woman gesturing NO :woman_gesturing_no: woman gesturing NO: light skin tone :woman_gesturing_no_tone1: woman gesturing NO: medium-light skin tone :woman_gesturing_no_tone2: woman gesturing NO: medium skin tone :woman_gesturing_no_tone3: woman gesturing NO: medium-dark skin tone :woman_gesturing_no_tone4: woman gesturing NO: dark skin tone :woman_gesturing_no_tone5: woman gesturing OK :woman_gesturing_ok: woman gesturing OK: light skin tone :woman_gesturing_ok_tone1: woman gesturing OK: medium-light skin tone :woman_gesturing_ok_tone2: woman gesturing OK: medium skin tone :woman_gesturing_ok_tone3: woman gesturing OK: medium-dark skin tone :woman_gesturing_ok_tone4: woman gesturing OK: dark skin tone :woman_gesturing_ok_tone5: woman getting massage :woman_getting_face_massage: woman getting massage: light skin tone :woman_getting_face_massage_tone1: woman getting massage: medium-light skin tone :woman_getting_face_massage_tone2: woman getting massage: medium skin tone :woman_getting_face_massage_tone3: woman getting massage: medium-dark skin tone :woman_getting_face_massage_tone4: woman getting massage: dark skin tone :woman_getting_face_massage_tone5: woman getting haircut :woman_getting_haircut: woman getting haircut: light skin tone :woman_getting_haircut_tone1: woman getting haircut: medium-light skin tone :woman_getting_haircut_tone2: woman getting haircut: medium skin tone :woman_getting_haircut_tone3: woman getting haircut: medium-dark skin tone :woman_getting_haircut_tone4: woman getting haircut: dark skin tone :woman_getting_haircut_tone5: woman golfing :woman_golfing: woman golfing: light skin tone :woman_golfing_tone1: woman golfing: medium-light skin tone :woman_golfing_tone2: woman golfing: medium skin tone :woman_golfing_tone3: woman golfing: medium-dark skin tone :woman_golfing_tone4: woman golfing: dark skin tone :woman_golfing_tone5: woman guard :woman_guard: woman guard: light skin tone :woman_guard_tone1: woman guard: medium-light skin tone :woman_guard_tone2: woman guard: medium skin tone :woman_guard_tone3: woman guard: medium-dark skin tone :woman_guard_tone4: woman guard: dark skin tone :woman_guard_tone5: woman health worker :woman_health_worker: woman health worker: light skin tone :woman_health_worker_tone1: woman health worker: medium-light skin tone :woman_health_worker_tone2: woman health worker: medium skin tone :woman_health_worker_tone3: woman health worker: medium-dark skin tone :woman_health_worker_tone4: woman health worker: dark skin tone :woman_health_worker_tone5: woman in lotus position :woman_in_lotus_position: woman in lotus position: light skin tone :woman_in_lotus_position_tone1: woman in lotus position: medium-light skin tone :woman_in_lotus_position_tone2: woman in lotus position: medium skin tone :woman_in_lotus_position_tone3: woman in lotus position: medium-dark skin tone :woman_in_lotus_position_tone4: woman in lotus position: dark skin tone :woman_in_lotus_position_tone5: woman in steamy room :woman_in_steamy_room: woman in steamy room: light skin tone :woman_in_steamy_room_tone1: woman in steamy room: medium-light skin tone :woman_in_steamy_room_tone2: woman in steamy room: medium skin tone :woman_in_steamy_room_tone3: woman in steamy room: medium-dark skin tone :woman_in_steamy_room_tone4: woman in steamy room: dark skin tone :woman_in_steamy_room_tone5: woman judge :woman_judge: woman judge: light skin tone :woman_judge_tone1: woman judge: medium-light skin tone :woman_judge_tone2: woman judge: medium skin tone :woman_judge_tone3: woman judge: medium-dark skin tone :woman_judge_tone4: woman judge: dark skin tone :woman_judge_tone5: woman juggling :woman_juggling: woman juggling: light skin tone :woman_juggling_tone1: woman juggling: medium-light skin tone :woman_juggling_tone2: woman juggling: medium skin tone :woman_juggling_tone3: woman juggling: medium-dark skin tone :woman_juggling_tone4: woman juggling: dark skin tone :woman_juggling_tone5: woman lifting weights :woman_lifting_weights: woman lifting weights: light skin tone :woman_lifting_weights_tone1: woman lifting weights: medium-light skin tone :woman_lifting_weights_tone2: woman lifting weights: medium skin tone :woman_lifting_weights_tone3: woman lifting weights: medium-dark skin tone :woman_lifting_weights_tone4: woman lifting weights: dark skin tone :woman_lifting_weights_tone5: woman mage :woman_mage: woman mage: light skin tone :woman_mage_tone1: woman mage: medium-light skin tone :woman_mage_tone2: woman mage: medium skin tone :woman_mage_tone3: woman mage: medium-dark skin tone :woman_mage_tone4: woman mage: dark skin tone :woman_mage_tone5: woman mechanic :woman_mechanic: woman mechanic: light skin tone :woman_mechanic_tone1: woman mechanic: medium-light skin tone :woman_mechanic_tone2: woman mechanic: medium skin tone :woman_mechanic_tone3: woman mechanic: medium-dark skin tone :woman_mechanic_tone4: woman mechanic: dark skin tone :woman_mechanic_tone5: woman mountain biking :woman_mountain_biking: woman mountain biking: light skin tone :woman_mountain_biking_tone1: woman mountain biking: medium-light skin tone :woman_mountain_biking_tone2: woman mountain biking: medium skin tone :woman_mountain_biking_tone3: woman mountain biking: medium-dark skin tone :woman_mountain_biking_tone4: woman mountain biking: dark skin tone :woman_mountain_biking_tone5: woman office worker :woman_office_worker: woman office worker: light skin tone :woman_office_worker_tone1: woman office worker: medium-light skin tone :woman_office_worker_tone2: woman office worker: medium skin tone :woman_office_worker_tone3: woman office worker: medium-dark skin tone :woman_office_worker_tone4: woman office worker: dark skin tone :woman_office_worker_tone5: woman pilot :woman_pilot: woman pilot: light skin tone :woman_pilot_tone1: woman pilot: medium-light skin tone :woman_pilot_tone2: woman pilot: medium skin tone :woman_pilot_tone3: woman pilot: medium-dark skin tone :woman_pilot_tone4: woman pilot: dark skin tone :woman_pilot_tone5: woman playing handball :woman_playing_handball: woman playing handball: light skin tone :woman_playing_handball_tone1: woman playing handball: medium-light skin tone :woman_playing_handball_tone2: woman playing handball: medium skin tone :woman_playing_handball_tone3: woman playing handball: medium-dark skin tone :woman_playing_handball_tone4: woman playing handball: dark skin tone :woman_playing_handball_tone5: woman playing water polo :woman_playing_water_polo: woman playing water polo: light skin tone :woman_playing_water_polo_tone1: woman playing water polo: medium-light skin tone :woman_playing_water_polo_tone2: woman playing water polo: medium skin tone :woman_playing_water_polo_tone3: woman playing water polo: medium-dark skin tone :woman_playing_water_polo_tone4: woman playing water polo: dark skin tone :woman_playing_water_polo_tone5: woman police officer :woman_police_officer: woman police officer: light skin tone :woman_police_officer_tone1: woman police officer: medium-light skin tone :woman_police_officer_tone2: woman police officer: medium skin tone :woman_police_officer_tone3: woman police officer: medium-dark skin tone :woman_police_officer_tone4: woman police officer: dark skin tone :woman_police_officer_tone5: woman pouting :woman_pouting: woman pouting: light skin tone :woman_pouting_tone1: woman pouting: medium-light skin tone :woman_pouting_tone2: woman pouting: medium skin tone :woman_pouting_tone3: woman pouting: medium-dark skin tone :woman_pouting_tone4: woman pouting: dark skin tone :woman_pouting_tone5: woman raising hand :woman_raising_hand: woman raising hand: light skin tone :woman_raising_hand_tone1: woman raising hand: medium-light skin tone :woman_raising_hand_tone2: woman raising hand: medium skin tone :woman_raising_hand_tone3: woman raising hand: medium-dark skin tone :woman_raising_hand_tone4: woman raising hand: dark skin tone :woman_raising_hand_tone5: woman rowing boat :woman_rowing_boat: woman rowing boat: light skin tone :woman_rowing_boat_tone1: woman rowing boat: medium-light skin tone :woman_rowing_boat_tone2: woman rowing boat: medium skin tone :woman_rowing_boat_tone3: woman rowing boat: medium-dark skin tone :woman_rowing_boat_tone4: woman rowing boat: dark skin tone :woman_rowing_boat_tone5: woman running :woman_running: woman running: light skin tone :woman_running_tone1: woman running: medium-light skin tone :woman_running_tone2: woman running: medium skin tone :woman_running_tone3: woman running: medium-dark skin tone :woman_running_tone4: woman running: dark skin tone :woman_running_tone5: woman scientist :woman_scientist: woman scientist: light skin tone :woman_scientist_tone1: woman scientist: medium-light skin tone :woman_scientist_tone2: woman scientist: medium skin tone :woman_scientist_tone3: woman scientist: medium-dark skin tone :woman_scientist_tone4: woman scientist: dark skin tone :woman_scientist_tone5: woman shrugging :woman_shrugging: woman shrugging: light skin tone :woman_shrugging_tone1: woman shrugging: medium-light skin tone :woman_shrugging_tone2: woman shrugging: medium skin tone :woman_shrugging_tone3: woman shrugging: medium-dark skin tone :woman_shrugging_tone4: woman shrugging: dark skin tone :woman_shrugging_tone5: woman singer :woman_singer: woman singer: light skin tone :woman_singer_tone1: woman singer: medium-light skin tone :woman_singer_tone2: woman singer: medium skin tone :woman_singer_tone3: woman singer: medium-dark skin tone :woman_singer_tone4: woman singer: dark skin tone :woman_singer_tone5: woman student :woman_student: woman student: light skin tone :woman_student_tone1: woman student: medium-light skin tone :woman_student_tone2: woman student: medium skin tone :woman_student_tone3: woman student: medium-dark skin tone :woman_student_tone4: woman student: dark skin tone :woman_student_tone5: woman surfing :woman_surfing: woman surfing: light skin tone :woman_surfing_tone1: woman surfing: medium-light skin tone :woman_surfing_tone2: woman surfing: medium skin tone :woman_surfing_tone3: woman surfing: medium-dark skin tone :woman_surfing_tone4: woman surfing: dark skin tone :woman_surfing_tone5: woman swimming :woman_swimming: woman swimming: light skin tone :woman_swimming_tone1: woman swimming: medium-light skin tone :woman_swimming_tone2: woman swimming: medium skin tone :woman_swimming_tone3: woman swimming: medium-dark skin tone :woman_swimming_tone4: woman swimming: dark skin tone :woman_swimming_tone5: woman teacher :woman_teacher: woman teacher: light skin tone :woman_teacher_tone1: woman teacher: medium-light skin tone :woman_teacher_tone2: woman teacher: medium skin tone :woman_teacher_tone3: woman teacher: medium-dark skin tone :woman_teacher_tone4: woman teacher: dark skin tone :woman_teacher_tone5: woman technologist :woman_technologist: woman technologist: light skin tone :woman_technologist_tone1: woman technologist: medium-light skin tone :woman_technologist_tone2: woman technologist: medium skin tone :woman_technologist_tone3: woman technologist: medium-dark skin tone :woman_technologist_tone4: woman technologist: dark skin tone :woman_technologist_tone5: woman tipping hand :woman_tipping_hand: woman tipping hand: light skin tone :woman_tipping_hand_tone1: woman tipping hand: medium-light skin tone :woman_tipping_hand_tone2: woman tipping hand: medium skin tone :woman_tipping_hand_tone3: woman tipping hand: medium-dark skin tone :woman_tipping_hand_tone4: woman tipping hand: dark skin tone :woman_tipping_hand_tone5: woman: light skin tone :woman_tone1: woman: medium-light skin tone :woman_tone2: woman: medium skin tone :woman_tone3: woman: medium-dark skin tone :woman_tone4: woman: dark skin tone :woman_tone5: woman vampire :woman_vampire: woman vampire: light skin tone :woman_vampire_tone1: woman vampire: medium-light skin tone :woman_vampire_tone2: woman vampire: medium skin tone :woman_vampire_tone3: woman vampire: medium-dark skin tone :woman_vampire_tone4: woman vampire: dark skin tone :woman_vampire_tone5: woman walking :woman_walking: woman walking: light skin tone :woman_walking_tone1: woman walking: medium-light skin tone :woman_walking_tone2: woman walking: medium skin tone :woman_walking_tone3: woman walking: medium-dark skin tone :woman_walking_tone4: woman walking: dark skin tone :woman_walking_tone5: woman wearing turban :woman_wearing_turban: woman wearing turban: light skin tone :woman_wearing_turban_tone1: woman wearing turban: medium-light skin tone :woman_wearing_turban_tone2: woman wearing turban: medium skin tone :woman_wearing_turban_tone3: woman wearing turban: medium-dark skin tone :woman_wearing_turban_tone4: woman wearing turban: dark skin tone :woman_wearing_turban_tone5: woman with headscarf :woman_with_headscarf: woman with headscarf: light skin tone :woman_with_headscarf_tone1: woman with headscarf: medium-light skin tone :woman_with_headscarf_tone2: woman with headscarf: medium skin tone :woman_with_headscarf_tone3: woman with headscarf: medium-dark skin tone :woman_with_headscarf_tone4: woman with headscarf: dark skin tone :woman_with_headscarf_tone5: woman zombie :woman_zombie: woman\\u2019s clothes :womans_clothes: woman\\u2019s hat :womans_hat: women with bunny ears partying :women_with_bunny_ears_partying: women wrestling :women_wrestling: women\\u2019s room :womens: worried face :worried: wrench :wrench: writing hand :writing_hand: writing hand: light skin tone :writing_hand_tone1: writing hand: medium-light skin tone :writing_hand_tone2: writing hand: medium skin tone :writing_hand_tone3: writing hand: medium-dark skin tone :writing_hand_tone4: writing hand: dark skin tone :writing_hand_tone5: cross mark :x: yellow heart :yellow_heart: yen banknote :yen: yin yang :yin_yang: face savouring delicious food :yum: high voltage :zap: zebra :zebra: keycap: 0 :zero: zipper-mouth face :zipper_mouth: zombie :zombie: zzz :zzz:","title":"2. emojione\u5168\u540d\u77ed\u540d\u6620\u5c04\u8868"},{"location":"appendix/level/","text":"\u4e00\u4e2a.md\u91cc\u53ea\u80fd\u6709\u4e00\u4e2a#\uff08h1\uff09\uff0c\u4e0b\u9762\u662f\u591a\u4e2a## \u5982\u679c\u6709\u591a\u4e2a#\uff08h1\uff09\uff0c\u5219\u662f\u4e0d\u6807\u51c6\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u4e0d\u4f1a\u81ea\u52a8\u751f\u4ea7\u76ee\u5f55 \u5982\u679c.md\u6ca1\u6709\u7528#\uff08h1\uff09\uff0c\u5219mkdocs\u4f1a\u81ea\u52a8\u5c06\u8be5\u6587\u4ef6\u5728mkdocs.yml\u91cc\u5bf9\u5e94\u7684page\u540d\u7528h1\u6548\u679c\u5c55\u793a\u5728\u7b2c\u4e00\u884c","title":"6. mkdocs\u5c42\u7ea7\u5173\u7cfb"},{"location":"appendix/module/","text":"\u4e0b\u8ff0\u5747\u4e3a\u4e2a\u4eba\u7406\u89e3\uff0c\u4e0d\u4fdd\u8bc1\u51c6\u786e\u6027 python markdown \u662f\u7528python\u5199\u7684markdown\u6a21\u5757\uff0c\u7528\u8fd9\u6a21\u5757\u53ef\u4ee5\u5c06markdown\u6587\u672c\u6e32\u67d3\u6210html\uff0c\u6bd4\u5982\uff1a import markdown text = ... # abc ... ```go ... import fmt ... ``` ... ... ## sss ... ... - xxx ... - yyy ... html = markdown.markdown(text) print html h1 abc /h1 p code go import fmt /code /p h2 sss /h2 ul li xxx /li li yyy /li /ul \u540c\u65f6markdown\u6a21\u5757\u5185\u7f6e\u4e00\u4e9b\u6269\u5c55\uff0c\u6709\uff1a abbr.py admonition.py attr_list.py codehilite.py def_list.py extra.py fenced_code.py footnotes.py headerid.py meta.py nl2br.py sane_lists.py smart_strong.py smarty.py tables.py toc.py wikilinks.py pymdownx \u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u6269\u5c55\u4e86markdown\u7684\u529f\u80fd\uff0c\u6bd4\u5982emoji\u56fe\u6807\u3001\u53ef\u6298\u53e0\u7684\u6587\u672c\u6846\u7b49\uff0cpymdownx\u4e5f\u662f\u8c03\u7528markdown\u6a21\u5757\u505a\u4e8b\uff0cpymdownx\u5305\u542b\u4ee5\u4e0b\u529f\u80fd\uff1a arithmatex.py b64.py betterem.py caret.py critic.py details.py emoji.py emoji1_db.py escapeall.py extra.py extrarawhtml.py gemoji_db.py github.py highlight.py inlinehilite.py keymap_db.py keys.py magiclink.py mark.py pathconverter.py plainhtml.py progressbar.py slugs.py smartsymbols.py snippets.py superfences.py tasklist.py tilde.py twemoji_db.py util.py mkdocs \u662f\u7528python\u7f16\u5199\u7684\uff0c\u5305\u62ecmkdocs\u4e3b\u9898\u53ca\u547d\u4ee4\u884c\u5de5\u5177\uff0cmkdocs\u8c03\u7528python markdown\u6765\u6e32\u67d3html\uff0c\u5176\u4e2d\u91cd\u5199\u4e86\u5c11\u90e8\u5206\u57fa\u7840\u529f\u80fd\uff0c\u6bd4\u5982toc\uff0c\u4ee5\u8fbe\u5230\u7b26\u5408mkdocs\u4e3b\u9898\u6548\u679c\uff1bmkdocs\u4e5f\u5185\u7f6e\u4e00\u79cd\u4e3b\u9898\uff0c\u5c31\u53ebmkdocs\uff0c\u540c\u65f6\u4e5f\u5185\u7f6e\u652f\u6301readthedocs\uff0c\u5e76\u4e14mkdocs\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898\u3002mkdocs\u4e3b\u8981\u5c31\u662f\u4e00\u4e2a\u96c6\u6210\u5668\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u6765\u7b80\u5316\u6e32\u67d3\u3001\u90e8\u7f72\u3001\u4f7f\u7528\u3001\u6a21\u5757\u8c03\u7528\u3001\u4e3b\u9898\u8c03\u7528 material \u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u7b26\u5408mkdocs\u89c4\u8303\u7684\u81ea\u5b9a\u4e49\u4e3b\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7pip install mkdocs-material\u6765\u4e0b\u8f7d\uff0c\u8fd9\u4e2a\u6a21\u5757\u91cc\u9762\u90fd\u662f\u4e00\u4e9bjs\u3001css\u3001html\u6587\u4ef6 material\u8fd9\u4e2a\u6a21\u5757\u540d\u548c\u4e3b\u9898\u98ce\u683c\uff0c\u662f\u6765\u81ea\u4e8egoogle material\uff0c\u5373google\u5b9a\u4e49\u7684\u4e00\u79cd\u901a\u7528\u98ce\u683c\uff0c\u7528\u4e8e\u517c\u5bb9\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u7684\u9875\u9762\u5c55\u793a\uff0c\u5373\u53ea\u8981\u7b26\u5408\u8fd9\u79cd\u8c37\u6b4c\u98ce\u683c\u7684\uff0c\u4e00\u5904\u7f16\u5199\uff0c\u5904\u5904\u4f7f\u7528\uff08\u5728pc\u3001\u624b\u673a\u4e0a\u90fd\u53ef\u4ee5\u7528\uff0c\u5373\u4f1a\u6839\u636e\u5206\u8fa8\u7387\u81ea\u52a8\u8c03\u6574\u9875\u9762\u5c55\u793a\uff09 material\u4e3b\u9898\u5bf9python markdown\u7684\u4e00\u4e9b\u5185\u7f6e\u6269\u5c55\u548cpymdownx\u7684\u529f\u80fd\u505a\u4e86\u4e3b\u9898\u6548\u679c\u4f18\u5316\uff0c\u4ee5\u4fbf\u66f4\u4f18\u7f8e\uff0c\u5185\u7f6e\u7684\u6709\uff1a \u652f\u6301\u7684python markdown\u6269\u5c55\u6709\uff1aAdmonition\u3001CodeHilite\u3001Footnotes\u3001Metadata\u3001Permalinks pymdownx\u6709\uff1aArithmatex\u3001BetterEM\u3001Caret\u3001Critic\u3001Details\u3001Emoji\u3001InlineHilite\u3001MagicLink\u3001Mark\u3001SmartSymbols\u3001SuperFences\u3001Tasklist\u3001Tilde","title":"5. \u6a21\u5757\u4ecb\u7ecd"},{"location":"appendix/module/#python-markdown","text":"\u662f\u7528python\u5199\u7684markdown\u6a21\u5757\uff0c\u7528\u8fd9\u6a21\u5757\u53ef\u4ee5\u5c06markdown\u6587\u672c\u6e32\u67d3\u6210html\uff0c\u6bd4\u5982\uff1a import markdown text = ... # abc ... ```go ... import fmt ... ``` ... ... ## sss ... ... - xxx ... - yyy ... html = markdown.markdown(text) print html h1 abc /h1 p code go import fmt /code /p h2 sss /h2 ul li xxx /li li yyy /li /ul \u540c\u65f6markdown\u6a21\u5757\u5185\u7f6e\u4e00\u4e9b\u6269\u5c55\uff0c\u6709\uff1a abbr.py admonition.py attr_list.py codehilite.py def_list.py extra.py fenced_code.py footnotes.py headerid.py meta.py nl2br.py sane_lists.py smart_strong.py smarty.py tables.py toc.py wikilinks.py","title":"python markdown"},{"location":"appendix/module/#pymdownx","text":"\u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u6269\u5c55\u4e86markdown\u7684\u529f\u80fd\uff0c\u6bd4\u5982emoji\u56fe\u6807\u3001\u53ef\u6298\u53e0\u7684\u6587\u672c\u6846\u7b49\uff0cpymdownx\u4e5f\u662f\u8c03\u7528markdown\u6a21\u5757\u505a\u4e8b\uff0cpymdownx\u5305\u542b\u4ee5\u4e0b\u529f\u80fd\uff1a arithmatex.py b64.py betterem.py caret.py critic.py details.py emoji.py emoji1_db.py escapeall.py extra.py extrarawhtml.py gemoji_db.py github.py highlight.py inlinehilite.py keymap_db.py keys.py magiclink.py mark.py pathconverter.py plainhtml.py progressbar.py slugs.py smartsymbols.py snippets.py superfences.py tasklist.py tilde.py twemoji_db.py util.py","title":"pymdownx"},{"location":"appendix/module/#mkdocs","text":"\u662f\u7528python\u7f16\u5199\u7684\uff0c\u5305\u62ecmkdocs\u4e3b\u9898\u53ca\u547d\u4ee4\u884c\u5de5\u5177\uff0cmkdocs\u8c03\u7528python markdown\u6765\u6e32\u67d3html\uff0c\u5176\u4e2d\u91cd\u5199\u4e86\u5c11\u90e8\u5206\u57fa\u7840\u529f\u80fd\uff0c\u6bd4\u5982toc\uff0c\u4ee5\u8fbe\u5230\u7b26\u5408mkdocs\u4e3b\u9898\u6548\u679c\uff1bmkdocs\u4e5f\u5185\u7f6e\u4e00\u79cd\u4e3b\u9898\uff0c\u5c31\u53ebmkdocs\uff0c\u540c\u65f6\u4e5f\u5185\u7f6e\u652f\u6301readthedocs\uff0c\u5e76\u4e14mkdocs\u4e5f\u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898\u3002mkdocs\u4e3b\u8981\u5c31\u662f\u4e00\u4e2a\u96c6\u6210\u5668\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u6765\u7b80\u5316\u6e32\u67d3\u3001\u90e8\u7f72\u3001\u4f7f\u7528\u3001\u6a21\u5757\u8c03\u7528\u3001\u4e3b\u9898\u8c03\u7528","title":"mkdocs"},{"location":"appendix/module/#material","text":"\u662fpython\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f\u7b26\u5408mkdocs\u89c4\u8303\u7684\u81ea\u5b9a\u4e49\u4e3b\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7pip install mkdocs-material\u6765\u4e0b\u8f7d\uff0c\u8fd9\u4e2a\u6a21\u5757\u91cc\u9762\u90fd\u662f\u4e00\u4e9bjs\u3001css\u3001html\u6587\u4ef6 material\u8fd9\u4e2a\u6a21\u5757\u540d\u548c\u4e3b\u9898\u98ce\u683c\uff0c\u662f\u6765\u81ea\u4e8egoogle material\uff0c\u5373google\u5b9a\u4e49\u7684\u4e00\u79cd\u901a\u7528\u98ce\u683c\uff0c\u7528\u4e8e\u517c\u5bb9\u4e0d\u540c\u5206\u8fa8\u7387\u4e0b\u7684\u9875\u9762\u5c55\u793a\uff0c\u5373\u53ea\u8981\u7b26\u5408\u8fd9\u79cd\u8c37\u6b4c\u98ce\u683c\u7684\uff0c\u4e00\u5904\u7f16\u5199\uff0c\u5904\u5904\u4f7f\u7528\uff08\u5728pc\u3001\u624b\u673a\u4e0a\u90fd\u53ef\u4ee5\u7528\uff0c\u5373\u4f1a\u6839\u636e\u5206\u8fa8\u7387\u81ea\u52a8\u8c03\u6574\u9875\u9762\u5c55\u793a\uff09 material\u4e3b\u9898\u5bf9python markdown\u7684\u4e00\u4e9b\u5185\u7f6e\u6269\u5c55\u548cpymdownx\u7684\u529f\u80fd\u505a\u4e86\u4e3b\u9898\u6548\u679c\u4f18\u5316\uff0c\u4ee5\u4fbf\u66f4\u4f18\u7f8e\uff0c\u5185\u7f6e\u7684\u6709\uff1a \u652f\u6301\u7684python markdown\u6269\u5c55\u6709\uff1aAdmonition\u3001CodeHilite\u3001Footnotes\u3001Metadata\u3001Permalinks pymdownx\u6709\uff1aArithmatex\u3001BetterEM\u3001Caret\u3001Critic\u3001Details\u3001Emoji\u3001InlineHilite\u3001MagicLink\u3001Mark\u3001SmartSymbols\u3001SuperFences\u3001Tasklist\u3001Tilde","title":"material"},{"location":"appendix/pygments/","text":"\u5305\u62ec\u9ad8\u7ea7\u8bed\u8a00\u3001\u6a21\u7248\u8bed\u8a00\u3001\u6807\u8bb0\u8bed\u8a00\uff0c\u5171434\u4e2a \u683c\u5f0f \u77ed\u540d ABAP abap ABNF abnf ActionScript 3 as3, actionscript3 ActionScript as, actionscript Ada ada, ada95, ada2005 ADL adl Agda agda Aheui aheui Alloy alloy AmbientTalk at, ambienttalk, ambienttalk/2 Ampl ampl Angular2 ng2 ANTLR With ActionScript Target antlr-as, antlr-actionscript ANTLR With C# Target antlr-csharp, antlr-c# ANTLR With CPP Target antlr-cpp ANTLR With Java Target antlr-java ANTLR With ObjectiveC Target antlr-objc ANTLR With Perl Target antlr-perl ANTLR With Python Target antlr-python ANTLR With Ruby Target antlr-ruby, antlr-rb ANTLR antlr ApacheConf apacheconf, aconf, apache APL apl AppleScript applescript Arduino arduino AspectJ aspectj aspx-cs aspx-cs aspx-vb aspx-vb Asymptote asy, asymptote autohotkey ahk, autohotkey AutoIt autoit Awk awk, gawk, mawk, nawk Base Makefile basemake Bash Session console, shell-session Bash bash, sh, ksh, zsh, shell Batchfile bat, batch, dosbatch, winbatch BBCode bbcode BC bc Befunge befunge BibTeX bib, bibtex BlitzBasic blitzbasic, b3d, bplus BlitzMax blitzmax, bmax BNF bnf Boo boo Boogie boogie Brainfuck brainfuck, bf Bro bro BST bst, bst-pybtex BUGS bugs, winbugs, openbugs C c C# csharp, c# C++ cpp, c++ c-objdump c-objdump ca65 assembler ca65 cADL cadl CAmkES camkes, idl4 Cap'n Proto capnp CapDL capdl CBM BASIC V2 cbmbas Ceylon ceylon CFEngine3 cfengine3, cf3 cfstatement cfs ChaiScript chai, chaiscript Chapel chapel, chpl Cheetah cheetah, spitfire Cirru cirru Clay clay Clean clean Clojure clojure, clj ClojureScript clojurescript, cljs CMake cmake COBOL cobol COBOLFree cobolfree CoffeeScript coffee-script, coffeescript, coffee Coldfusion CFC cfc Coldfusion HTML cfm Common Lisp common-lisp, cl, lisp Component Pascal componentpascal, cp Coq coq cpp-objdump cpp-objdump, c++-objdumb, cxx-objdump CPSA cpsa Crmsh crmsh, pcmk Croc croc Cryptol cryptol, cry Crystal cr, crystal Csound Document csound-document, csound-csd Csound Orchestra csound, csound-orc Csound Score csound-score, csound-sco CSS css CSS+Django/Jinja css+django, css+jinja CSS+Genshi Text css+genshitext, css+genshi CSS+Lasso css+lasso CSS+Mako css+mako CSS+mozpreproc css+mozpreproc CSS+Myghty css+myghty CSS+PHP css+php CSS+Ruby css+erb, css+ruby CSS+Smarty css+smarty CUDA cuda, cu Cypher cypher Cython cython, pyx, pyrex D d d-objdump d-objdump Darcs Patch dpatch Dart dart Debian Control file control, debcontrol Debian Sourcelist sourceslist, sources.list, debsources Delphi delphi, pas, pascal, objectpascal dg dg Diff diff, udiff Django/Jinja django, jinja Docker docker, dockerfile DTD dtd Duel duel, jbst, jsonml+bst Dylan session dylan-console, dylan-repl Dylan dylan DylanLID dylan-lid, lid Earl Grey earl-grey, earlgrey, eg Easytrieve easytrieve EBNF ebnf eC ec ECL ecl Eiffel eiffel Elixir iex session iex Elixir elixir, ex, exs Elm elm EmacsLisp emacs, elisp, emacs-lisp Embedded Ragel ragel-em ERB erb Erlang erl session erl Erlang erlang Evoque evoque Ezhil ezhil Factor factor Fancy fancy, fy Fantom fan Felix felix, flx Fish fish, fishshell Flatline flatline Forth forth Fortran fortran FortranFixed fortranfixed FoxPro foxpro, vfp, clipper, xbase FSharp fsharp GAP gap GAS gas, asm Genshi Text genshitext Genshi genshi, kid, xml+genshi, xml+kid Gettext Catalog pot, po Gherkin cucumber, gherkin GLSL glsl Gnuplot gnuplot Go go Golo golo GoodData-CL gooddata-cl Gosu Template gst Gosu gosu Groff groff, nroff, man Groovy groovy Haml haml Handlebars handlebars Haskell haskell, hs Haxe hx, haxe, hxsl Hexdump hexdump HSAIL hsail, hsa HTML + Angular2 html+ng2 HTML html HTML+Cheetah html+cheetah, html+spitfire, htmlcheetah HTML+Django/Jinja html+django, html+jinja, htmldjango HTML+Evoque html+evoque HTML+Genshi html+genshi, html+kid HTML+Handlebars html+handlebars HTML+Lasso html+lasso HTML+Mako html+mako HTML+Myghty html+myghty HTML+PHP html+php HTML+Smarty html+smarty HTML+Twig html+twig HTML+Velocity html+velocity HTTP http Hxml haxeml, hxml Hy hylang Hybris hybris, hy IDL idl Idris idris, idr Igor igor, igorpro Inform 6 template i6t Inform 6 inform6, i6 Inform 7 inform7, i7 INI ini, cfg, dosini Io io Ioke ioke, ik IRC logs irc Isabelle isabelle J j JAGS jags Jasmin jasmin, jasminxt Java Server Page jsp Java java JavaScript js, javascript JavaScript+Cheetah js+cheetah, javascript+cheetah, js+spitfire, javascript+spitfire JavaScript+Django/Jinja js+django, javascript+django, js+jinja, javascript+jinja JavaScript+Genshi Text js+genshitext, js+genshi, javascript+genshitext, javascript+genshi JavaScript+Lasso js+lasso, javascript+lasso JavaScript+Mako js+mako, javascript+mako Javascript+mozpreproc javascript+mozpreproc JavaScript+Myghty js+myghty, javascript+myghty JavaScript+PHP js+php, javascript+php JavaScript+Ruby js+erb, javascript+erb, js+ruby, javascript+ruby JavaScript+Smarty js+smarty, javascript+smarty JCL jcl JSGF jsgf JSON json JSON-LD jsonld, json-ld JSONBareObject json-object Julia console jlcon Julia julia, jl Juttle juttle, juttle Kal kal Kconfig kconfig, menuconfig, linux-config, kernel-config Koka koka Kotlin kotlin Lasso lasso, lassoscript Lean lean LessCss less Lighttpd configuration file lighty, lighttpd Limbo limbo liquid liquid Literate Agda lagda, literate-agda Literate Cryptol lcry, literate-cryptol, lcryptol Literate Haskell lhs, literate-haskell, lhaskell Literate Idris lidr, literate-idris, lidris LiveScript live-script, livescript LLVM llvm Logos logos Logtalk logtalk LSL lsl Lua lua Makefile make, makefile, mf, bsdmake Mako mako MAQL maql markdown md Mask mask Mason mason Mathematica mathematica, mma, nb Matlab session matlabsession Matlab matlab MiniD minid Modelica modelica Modula-2 modula2, m2 MoinMoin/Trac Wiki markup trac-wiki, moin Monkey monkey Monte monte MOOCode moocode, moo MoonScript moon, moonscript mozhashpreproc mozhashpreproc mozpercentpreproc mozpercentpreproc MQL mql, mq4, mq5, mql4, mql5 Mscgen mscgen, msc MSDOS Session doscon MuPAD mupad MXML mxml Myghty myghty MySQL mysql NASM nasm NCL ncl Nemerle nemerle nesC nesc NewLisp newlisp Newspeak newspeak Nginx configuration file nginx Nimrod nim, nimrod Nit nit Nix nixos, nix NSIS nsis, nsi, nsh NumPy numpy NuSMV nusmv objdump objdump objdump-nasm objdump-nasm Objective-C objective-c, objectivec, obj-c, objc Objective-C++ objective-c++, objectivec++, obj-c++, objc++ Objective-J objective-j, objectivej, obj-j, objj OCaml ocaml Octave octave ODIN odin Ooc ooc Opa opa OpenEdge ABL openedge, abl, progress PacmanConf pacmanconf Pan pan ParaSail parasail Pawn pawn Perl perl, pl Perl6 perl6, pl6 PHP php, php3, php4, php5 Pig pig Pike pike PkgConfig pkgconfig PL/pgSQL plpgsql PostgreSQL console (psql) psql, postgresql-console, postgres-console PostgreSQL SQL dialect postgresql, postgres PostScript postscript, postscr POVRay pov PowerShell Session ps1con PowerShell powershell, posh, ps1, psm1 Praat praat Prolog prolog Properties properties, jproperties Protocol Buffer protobuf, proto Pug pug, jade Puppet puppet PyPy Log pypylog, pypy Python 3 python3, py3 Python 3.0 Traceback py3tb Python console session pycon Python Traceback pytb Python python, py, sage QBasic qbasic, basic QML qml, qbs QVTO qvto, qvt Racket racket, rkt Ragel in C Host ragel-c Ragel in CPP Host ragel-cpp Ragel in D Host ragel-d Ragel in Java Host ragel-java Ragel in Objective C Host ragel-objc Ragel in Ruby Host ragel-ruby, ragel-rb Ragel ragel Raw token data raw RConsole rconsole, rout Rd rd REBOL rebol Red red, red/system Redcode redcode reg registry Relax-NG Compact rnc, rng-compact ResourceBundle resource, resourcebundle reStructuredText rst, rest, restructuredtext Rexx rexx, arexx RHTML rhtml, html+erb, html+ruby Roboconf Graph roboconf-graph Roboconf Instances roboconf-instances RobotFramework robotframework RPMSpec spec RQL rql RSL rsl Ruby irb session rbcon, irb Ruby rb, ruby, duby Rust rust S splus, s, r SAS sas Sass sass Scala scala Scalate Server Page ssp Scaml scaml Scheme scheme, scm Scilab scilab SCSS scss Shen shen Silver silver Slim slim Smali smali Smalltalk smalltalk, squeak, st Smarty smarty Snobol snobol Snowball snowball SourcePawn sp SPARQL sparql SQL sql sqlite3con sqlite3 SquidConf squidconf, squid.conf, squid Stan stan Standard ML sml Stata stata, do SuperCollider sc, supercollider Swift swift SWIG swig systemverilog systemverilog, sv TADS 3 tads3 TAP tap TASM tasm Tcl tcl Tcsh Session tcshcon Tcsh tcsh, csh Tea tea Termcap termcap Terminfo terminfo Terraform terraform, tf TeX tex, latex Text only text Thrift thrift Todotxt todotxt TrafficScript rts, trafficscript Transact-SQL tsql, t-sql Treetop treetop Turtle turtle Twig twig TypeScript ts, typescript TypoScript typoscript TypoScriptCssData typoscriptcssdata TypoScriptHtmlData typoscripthtmldata UrbiScript urbiscript Vala vala, vapi VB.net vb.net, vbnet VCL vcl VCLSnippets vclsnippets, vclsnippet VCTreeStatus vctreestatus Velocity velocity verilog verilog, v VGL vgl vhdl vhdl VimL vim WDiff wdiff Whiley whiley X10 x10, xten XML xml XML+Cheetah xml+cheetah, xml+spitfire XML+Django/Jinja xml+django, xml+jinja XML+Evoque xml+evoque XML+Lasso xml+lasso XML+Mako xml+mako XML+Myghty xml+myghty XML+PHP xml+php XML+Ruby xml+erb, xml+ruby XML+Smarty xml+smarty XML+Velocity xml+velocity XQuery xquery, xqy, xq, xql, xqm XSLT xslt Xtend xtend xtlang extempore XUL+mozpreproc xul+mozpreproc YAML yaml YAML+Jinja yaml+jinja, salt, sls Zephir zephir \u8bf4\u660e \u9017\u53f7\u5206\u9694\u8868\u793a\u4efb\u9009\u4e00\u79cd\u5747\u53ef \u5e95\u5c42\u5b9e\u9645\u662f\u7531Pygments\u7684lexers\u6240\u5b9e\u73b0\uff0c\u4e0a\u8ff0\u8868\u683c\u4e2d\u7684Pygments\u7248\u672c\u662f2.2.0\uff0c\u652f\u6301\u5171434\u79cd\u8bed\u8a00\u3001\u6a21\u7248\u3001\u6807\u8bb0\u8bed\u8a00\u3002 \u53ea\u8981\u662f\u4f9d\u8d56Pygments\u5b9e\u73b0\u7684\u8bed\u6cd5\u9ad8\u4eae\uff0c\u4e0a\u8ff0\u8868\u683c\u91cc\u7684\u5747\u53ef\u4ee5\u4f7f\u7528 \u4e0a\u8ff0\u8868\u683c\u4e0d\u662f\u4ecepygments\u7684\u5b98\u7f51\u4e0a\u627e\u5230\u7684\uff0c\u56e0\u4e3a\u5b98\u7f51\u5df2\u7ecf\u5f88\u4e45\u6ca1\u66f4\u65b0\u8fd9\u4e2a\u8868\u683c\u4e86\uff08 http://pygments.org/languages/ \uff0c\u8fdego\u8bed\u8a00\u90fd\u6ca1\u5199\u51fa\u6765\uff09\uff0c\u6240\u4ee5\u6211\u662f\u76f4\u63a5\u4ecepygments\u6e90\u4ee3\u7801\uff08pygments/lexers/_mapping.py\uff09\u91cc\u641c\u96c6\u7684\u3002 \u9644: \u83b7\u5f97\u4e0a\u8ff0434\u79cd\u8bed\u8a00\u7684\u65b9\u6cd5 #!/usr/bin/python from pygments.lexers import get_all_lexers lexers = get_all_lexers () for lexer in lexers : print lexer","title":"1. \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u7684\u8bed\u8a00"},{"location":"appendix/search/","text":"\u867d\u7136search\u529f\u80fd(lunr.js)\u6682\u4e0d\u76f4\u63a5\u652f\u6301\u4e2d\u6587\uff0c\u4f46\u6d4b\u8bd5\u53d1\u73b0\u8bbe\u7f6e\u4e3a\u65e5\u8bed\u540e\uff0c\u4e2d\u6587\u548c\u82f1\u6587\u641c\u7d22\u90fd\u53ef\u4ee5\u4f7f\u7528 extra: search: language: jp Note \u6d4b\u8bd5\u53d1\u73b0\uff0c\u5f53\u7ad9\u70b9\u6587\u5b57\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u6709\u7684\u65f6\u5019\u7b2c\u4e00\u6b21\u641c\u7d22\u52a0\u8f7d\u67e5\u8be2\u7684\u65f6\u95f4\u6bd4\u8f83\u4e45\uff0c\u4f1a\u5f15\u8d77\u6d4f\u89c8\u5668\u5047\u6b7b\uff0c\u591a\u7b49\u4e00\u4f1a\u5c31\u884c\u4e86\u3002\u6bd4\u5982\u672c\u7ad9\u70b9\u5185\u5bb9\u6bd4\u8f83\u591a\uff0c\u641c\u7d22\u5c31\u6bd4\u8f83\u5361 \u4e3a\u4ec0\u4e48\u4e0a\u9762\u8bf4\u7684\u662f\u6709\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u6211\u7684\u53e6\u4e00\u4e2a\u7ad9\u70b9\u6587\u5b57\u6570\u91cf\u6bd4\u672c\u7ad9\u8fd8\u8981\u591a\uff0c\u4f46\u641c\u7d22\u786e\u5f88\u5feb\uff0c\u7b49\u4ee5\u540e\u719f\u6089\u4e86lunr.js\u540e\u518d\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 \u53e6\u5916\uff0c\u641c\u7d22\u5bf9\u8bdd\u6846\u7684\u663e\u793a\u6587\u5b57\uff0c\u9ed8\u8ba4\u4e3a\u82f1\u6587\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e2d\u6587\u3002\u4f8b\u5982\"search\"\u6539\u4e3a\u4e2d\u6587\u540e\u5c31\u53eb\"\u641c\u7d22\" theme: language: zh","title":"7. \u652f\u6301\u4e2d\u6587\u641c\u7d22"},{"location":"appendix/yml/","text":"site_name : markdown\u8bed\u6cd5\u8be6\u89e3(\u57fa\u4e8emkdocs-material) - \u5f20\u6bbf\u53ef\u7b14\u8bb0 site_description : \u5173\u4e8emkdocs-material\u652f\u6301\u7684markdown\u8bed\u6cd5\uff0c\u5305\u62ec\u4f20\u7edf\u8bed\u6cd5\u548c\u6269\u5c55\u8bed\u6cd5 site_author : zdk site_url : https://feixia5712.github.io/mynote/ repo_name : feixia5712/mynote repo_url : https://github.com/feixia5712/mynote theme : name : material palette : primary : Blue Grey accent : Pink feature : tabs : false #font: #text: Ubuntu #code: Ubuntu Mono language : zh extra : social : - type : github link : https://github.com/feixia5712 search : language : jp markdown_extensions : - admonition - codehilite : guess_lang : false linenums : false - toc : permalink : true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_png #emoji_generator: !!python/name:pymdownx.emoji.to_svg #emoji_generator: !!python/name:pymdownx.emoji.to_png_sprite #emoji_generator: !!python/name:pymdownx.emoji.to_svg_sprite #emoji_generator: !!python/name:pymdownx.emoji.to_awesome #emoji_generator: !!python/name:pymdownx.emoji.to_alt - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde extra_javascript : - js/extra.js - js/baidu-tongji.js - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML nav : - \u4e00. \u4ecb\u7ecd : index.md - \u4e8c. \u5b89\u88c5 : - 1. \u672c\u5730\u73af\u5883\u642d\u5efa : install/local.md - 2. \u53d1\u5e03\u81f3GitHub Pages : install/github-pages.md - 3. \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server : install/http-server.md - \u4e09. \u8bed\u6cd5 : - 1. \u8bed\u6cd5\u603b\u89c8 : syntax/main.md - 2. \u6807\u9898 : syntax/headline.md - 3. \u6bb5\u843d : syntax/paragraph.md","title":"8. mkdocs.yml\u8303\u4f8b"},{"location":"install/github-pages/","text":"\u901a\u8fc7mkdocs gh-deploy\u81ea\u52a8\u7f16\u8bd1\u51fahtml\u5e76\u53d1\u5e03\u81f3GitHub pages \u521d\u59cb\u5316repo \u5728github\u4e0a\u521b\u5efa\u4e00\u4e2arepo\uff0c\u540d\u5b57\u53ebmy-project \u5c06repo\u540c\u6b65\u5230\u672c\u5730 \u5bfc\u5165\u9879\u76ee \u5c06mkdocs\u6839\u76ee\u5f55(my-project)\u4e0b\u7684\u6240\u6709\u4e1c\u897f\u79fb\u5230\u672c\u5730git\u76ee\u5f55\u4e0b (\u7136\u540e\u53ef\u4ee5\u5c06mkdocs\u6839\u76ee\u5f55\u5220\u9664\u4e86) \u53d1\u5e03 \u5728\u672c\u5730git\u76ee\u5f55\u4e0b\u6267\u884c mkdocs gh-deploy","title":"2. \u53d1\u5e03\u81f3GitHub Pages"},{"location":"install/github-pages/#repo","text":"\u5728github\u4e0a\u521b\u5efa\u4e00\u4e2arepo\uff0c\u540d\u5b57\u53ebmy-project \u5c06repo\u540c\u6b65\u5230\u672c\u5730","title":"\u521d\u59cb\u5316repo"},{"location":"install/github-pages/#_1","text":"\u5c06mkdocs\u6839\u76ee\u5f55(my-project)\u4e0b\u7684\u6240\u6709\u4e1c\u897f\u79fb\u5230\u672c\u5730git\u76ee\u5f55\u4e0b (\u7136\u540e\u53ef\u4ee5\u5c06mkdocs\u6839\u76ee\u5f55\u5220\u9664\u4e86)","title":"\u5bfc\u5165\u9879\u76ee"},{"location":"install/github-pages/#_2","text":"\u5728\u672c\u5730git\u76ee\u5f55\u4e0b\u6267\u884c mkdocs gh-deploy","title":"\u53d1\u5e03"},{"location":"install/http-server/","text":"\u901a\u8fc7mkdocs build\u7f16\u8bd1\u51fahtml\u5e76\u624b\u52a8\u540c\u6b65\u81f3http server\u7684\u6839\u76ee\u5f55 \u751f\u6210\u7ad9\u70b9\u6587\u4ef6 \u5728git\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs build \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u53ef\u4ee5\u770b\u5230site\u76ee\u5f55 \u53d1\u5e03\u81f3http server \u5c06site\u76ee\u5f55\u91cc\u7684\u6240\u6709\u4e1c\u897f\u540c\u6b65\u81f3\u81ea\u5df1\u7684http server\u7684\u6839\u76ee\u5f55","title":"3. \u53d1\u5e03\u81f3\u81ea\u5df1\u7684HTTP Server"},{"location":"install/http-server/#_1","text":"\u5728git\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs build \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u540e\u53ef\u4ee5\u770b\u5230site\u76ee\u5f55","title":"\u751f\u6210\u7ad9\u70b9\u6587\u4ef6"},{"location":"install/http-server/#http-server","text":"\u5c06site\u76ee\u5f55\u91cc\u7684\u6240\u6709\u4e1c\u897f\u540c\u6b65\u81f3\u81ea\u5df1\u7684http server\u7684\u6839\u76ee\u5f55","title":"\u53d1\u5e03\u81f3http server"},{"location":"install/local/","text":"\u73af\u5883\u8bf4\u660e python: 2.7.13\u6216\u80053.5\u4ee5\u4e0a \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0 mkdocs-material\u90e8\u7f72 \u5b89\u88c5 pip install mkdocs mkdocs-material \u82e5\u4e0b\u8f7d\u6162\uff0c\u53ef\u66f4\u6362\u5b89\u88c5\u6e90\u4e3a\u8c46\u74e3 sudo pip install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material \u521d\u59cb\u5316\u9879\u76ee mkdocs new my-project \u4f1a\u751f\u6210my-project\u76ee\u5f55\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u653e\u7f6e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u5305\u62ecmkdocs.yaml\uff0c\u8fd9\u662f\u4e3b\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539\u4e3b\u9898 mkdocs.yml\u91cc\u6dfb\u52a0: theme: name: material \u6307\u5b9aip:port dev_addr: 192.168.94.130:8000 \u6dfb\u52a0\u6269\u5c55 mkdocs.yml\u91cc\u6dfb\u52a0: markdown_extensions: - admonition - codehilite: guess_lang: false linenums: false - toc: permalink: true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_png - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde [\u53ef\u9009] \u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1 [\u53ef\u9009] \u6539\u53d8\u9875\u9762\u914d\u8272 [\u63a8\u8350] \u652f\u6301\u4e2d\u6587\u641c\u7d22 \u53ef\u4ee5\u67e5\u770b\u6211\u7684mkdocs.yml\u8303\u4f8b\uff0c\u8be6\u89c1 mkdocs.yml\u8303\u4f8b mkdocs\u670d\u52a1\u542f\u52a8 # \u5728my-project\u76ee\u5f55\u91cc\u6267\u884c mkdocs serve \u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 http://192.168.94.130:8000/ \u67e5\u770b\u6548\u679c","title":"1. \u672c\u5730\u73af\u5883\u642d\u5efa"},{"location":"install/local/#_1","text":"python: 2.7.13\u6216\u80053.5\u4ee5\u4e0a \u4f9d\u8d56\u7684python\u5305: \u5305\u540d \u6a21\u5757\u540d \u7248\u672c mkdocs mkdocs 1.0.4 mkdocs-material material 3.0.6 Markdown markdown 3.0.1 pymdown-extensions pymdownx 6.0","title":"\u73af\u5883\u8bf4\u660e"},{"location":"install/local/#mkdocs-material","text":"","title":"mkdocs-material\u90e8\u7f72"},{"location":"install/local/#_2","text":"pip install mkdocs mkdocs-material \u82e5\u4e0b\u8f7d\u6162\uff0c\u53ef\u66f4\u6362\u5b89\u88c5\u6e90\u4e3a\u8c46\u74e3 sudo pip install --trusted-host pypi.douban.com -i http://pypi.douban.com/simple/ mkdocs mkdocs-material","title":"\u5b89\u88c5"},{"location":"install/local/#_3","text":"mkdocs new my-project \u4f1a\u751f\u6210my-project\u76ee\u5f55\uff0c\u8fdb\u5165\u8be5\u76ee\u5f55\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\u9ed8\u8ba4\u653e\u7f6e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u5305\u62ecmkdocs.yaml\uff0c\u8fd9\u662f\u4e3b\u914d\u7f6e\u6587\u4ef6","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"install/local/#_4","text":"mkdocs.yml\u91cc\u6dfb\u52a0: theme: name: material","title":"\u4fee\u6539\u4e3b\u9898"},{"location":"install/local/#ipport","text":"dev_addr: 192.168.94.130:8000","title":"\u6307\u5b9aip:port"},{"location":"install/local/#_5","text":"mkdocs.yml\u91cc\u6dfb\u52a0: markdown_extensions: - admonition - codehilite: guess_lang: false linenums: false - toc: permalink: true - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_png - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist - pymdownx.tilde [\u53ef\u9009] \u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1 [\u53ef\u9009] \u6539\u53d8\u9875\u9762\u914d\u8272 [\u63a8\u8350] \u652f\u6301\u4e2d\u6587\u641c\u7d22 \u53ef\u4ee5\u67e5\u770b\u6211\u7684mkdocs.yml\u8303\u4f8b\uff0c\u8be6\u89c1 mkdocs.yml\u8303\u4f8b","title":"\u6dfb\u52a0\u6269\u5c55"},{"location":"install/local/#mkdocs","text":"# \u5728my-project\u76ee\u5f55\u91cc\u6267\u884c mkdocs serve \u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00 http://192.168.94.130:8000/ \u67e5\u770b\u6548\u679c","title":"mkdocs\u670d\u52a1\u542f\u52a8"},{"location":"kubernetes/kubernetes_mynote1/","text":"\u8bfe\u7a0b\u8d2d\u4e70\u5730\u5740: \u6781\u5ba2\u65f6\u95f4 \u5c0a\u91cd\u539f\u521b \u6253\u901a\u201c\u5bb9\u5668\u6280\u672f\u201d\u7684\u4efb\u7763\u4e8c\u8109 \u4ece 2013 \u5e74 Docker \u9879\u76ee\u53d1\u5e03\u5f00\u59cb\u7b97\u8d77\uff0c\u8fd9\u6b21\u53d8\u9769\u4e5f\u4e0d\u8fc7\u77ed\u77ed 5 \u5e74\u65f6\u95f4\uff0c\u53ef\u5728\u73b0\u5982\u4eca\u7684\u6280\u672f\u5708\u513f\u91cc\uff0c\u4e0d\u61c2\u5bb9\u5668\uff0c\u6ca1\u542c\u8fc7 Kubernetes\uff0c\u4f60\u8fd8\u771f\u4e0d\u597d\u610f\u601d\u8ddf\u4eba\u6253\u62db\u547c\u3002 \u5bb9\u5668\u6280\u672f\u8fd9\u6837\u4e00\u4e2a\u65b0\u751f\u4e8b\u7269\uff0c\u5b8c\u5168\u91cd\u5851\u4e86\u6574\u4e2a\u4e91\u8ba1\u7b97\u5e02\u573a\u7684\u5f62\u6001\u3002\u5b83\u4e0d\u4ec5\u50ac\u751f\u51fa\u4e86\u4e00\u6279\u5e74\u8f7b\u6709\u4e3a\u7684\u5bb9\u5668\u6280\u672f\u4eba\uff0c\u66f4\u57f9\u80b2\u51fa\u4e86\u4e00\u4e2a\u5177\u6709\u76f8\u5f53\u89c4\u6a21\u7684\u5f00\u6e90\u57fa\u7840\u8bbe\u65bd\u6280\u672f\u5e02\u573a\u3002 \u5728\u8fd9\u4e2a\u5e02\u573a\u91cc\uff0c\u4e0d\u4ec5\u6709 Google\u3001Microsoft \u7b49\u6280\u672f\u5de8\u64d8\u4eec\u53ae\u6740\u81f3\u4eca\uff0c\u66f4\u6709\u65e0\u6570\u7684\u56fd\u5185\u5916\u521b\u4e1a\u516c\u53f8\u524d\u4ec6\u540e\u7ee7\u3002\u800c\u5728\u56fd\u5185\uff0c\u751a\u81f3\u8fde\u4ee5\u524d\u5bf9\u5f00\u6e90\u57fa\u7840\u8bbe\u65bd\u9886\u57df\u6d89\u8db3\u4e0d\u591a\u7684 BAT\u3001\u8682\u8681\u3001\u6ef4\u6ef4\u8fd9\u6837\u7684\u5de8\u5934\u4eec\uff0c\u4e5f\u90fd\u4ece AI\u3001\u4e91\u8ba1\u7b97\u3001\u5fae\u670d\u52a1\u3001\u57fa\u7840\u8bbe\u65bd\u7b49\u7ef4\u5ea6\u591a\u7ba1\u9f50\u4e0b\uff0c\u4e89\u76f8\u628a\u5bb9\u5668\u548c Kubernetes \u9879\u76ee\u6811\u7acb\u4e3a\u6218\u7565\u91cd\u5fc3\u4e4b\u4e00\u3002 \u5c31\u5728\u8fd9\u573a\u56e0\u201c\u5bb9\u5668\u201d\u800c\u8d77\u7684\u6280\u672f\u53d8\u9769\u4e2d\uff0cKubernetes \u9879\u76ee\u5df2\u7136\u6210\u4e3a\u5bb9\u5668\u6280\u672f\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u91cd\u65b0\u5b9a\u4e49\u4e86\u57fa\u7840\u8bbe\u65bd\u9886\u57df\u5bf9\u5e94\u7528\u7f16\u6392\u4e0e\u7ba1\u7406\u7684\u79cd\u79cd\u53ef\u80fd\u3002 \u5176\u5b9e\uff0c\u5bb9\u5668\u6280\u672f\u4f53\u7cfb\u770b\u4f3c\u7eb7\u4e71\u7e41\u6742\uff0c\u5374\u5b58\u5728\u7740\u5f88\u591a\u53ef\u4ee5\u201c\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\u201d\u7684\u4e3b\u7ebf\u3002\u6bd4\u5982\uff0cLinux \u7684\u8fdb\u7a0b\u6a21\u578b\u5bf9\u4e8e\u5bb9\u5668\u672c\u8eab\u7684\u91cd\u8981\u610f\u4e49\uff1b\u6216\u8005\uff0c\u201c\u63a7\u5236\u5668\u201d\u6a21\u5f0f\u5bf9\u6574\u4e2a Kubernetes \u9879\u76ee\u63d0\u7eb2\u6308\u9886\u7684\u4f5c\u7528\u3002 \u4f46\u662f\uff0c\u8fd9\u4e9b\u5173\u4e8e Linux \u5185\u6838\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u7b49\u65b9\u65b9\u9762\u9762\u7684\u79ef\u7d2f\uff0c\u5e76\u4e0d\u4f1a\u5728 Docker \u6216\u8005 Kubernetes \u7684\u6587\u6863\u4e2d\u4ea4\u4ee3\u6e05\u695a\u3002\u53ef\u504f\u504f\u5c31\u662f\u5b83\u4eec\uff0c\u624d\u662f\u771f\u6b63\u638c\u63e1\u5bb9\u5668\u6280\u672f\u4f53\u7cfb\u7684\u7cbe\u9ad3\u6240\u5728\uff0c\u662f\u6bcf\u4e00\u4f4d\u6280\u672f\u4ece\u4e1a\u8005\u9700\u8981\u6089\u5fc3\u4fee\u70bc\u7684\u201c\u5185\u529f\u201d\u3002 \u673a\u4f1a\u603b\u662f\u7559\u7ed9\u6709\u51c6\u5907\u7684\u4eba\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u4e00\u8d77\u5f00\u542f\u8fd9\u6b21\u5145\u6ee1\u6311\u6218\u7684\u5bb9\u5668\u4e4b\u65c5\uff01","title":"1. \u6253\u901a\u201c\u5bb9\u5668\u6280\u672f\u201d\u7684\u4efb\u7763\u4e8c\u8109"},{"location":"kubernetes/kubernetes_mynote1/#_1","text":"\u4ece 2013 \u5e74 Docker \u9879\u76ee\u53d1\u5e03\u5f00\u59cb\u7b97\u8d77\uff0c\u8fd9\u6b21\u53d8\u9769\u4e5f\u4e0d\u8fc7\u77ed\u77ed 5 \u5e74\u65f6\u95f4\uff0c\u53ef\u5728\u73b0\u5982\u4eca\u7684\u6280\u672f\u5708\u513f\u91cc\uff0c\u4e0d\u61c2\u5bb9\u5668\uff0c\u6ca1\u542c\u8fc7 Kubernetes\uff0c\u4f60\u8fd8\u771f\u4e0d\u597d\u610f\u601d\u8ddf\u4eba\u6253\u62db\u547c\u3002 \u5bb9\u5668\u6280\u672f\u8fd9\u6837\u4e00\u4e2a\u65b0\u751f\u4e8b\u7269\uff0c\u5b8c\u5168\u91cd\u5851\u4e86\u6574\u4e2a\u4e91\u8ba1\u7b97\u5e02\u573a\u7684\u5f62\u6001\u3002\u5b83\u4e0d\u4ec5\u50ac\u751f\u51fa\u4e86\u4e00\u6279\u5e74\u8f7b\u6709\u4e3a\u7684\u5bb9\u5668\u6280\u672f\u4eba\uff0c\u66f4\u57f9\u80b2\u51fa\u4e86\u4e00\u4e2a\u5177\u6709\u76f8\u5f53\u89c4\u6a21\u7684\u5f00\u6e90\u57fa\u7840\u8bbe\u65bd\u6280\u672f\u5e02\u573a\u3002 \u5728\u8fd9\u4e2a\u5e02\u573a\u91cc\uff0c\u4e0d\u4ec5\u6709 Google\u3001Microsoft \u7b49\u6280\u672f\u5de8\u64d8\u4eec\u53ae\u6740\u81f3\u4eca\uff0c\u66f4\u6709\u65e0\u6570\u7684\u56fd\u5185\u5916\u521b\u4e1a\u516c\u53f8\u524d\u4ec6\u540e\u7ee7\u3002\u800c\u5728\u56fd\u5185\uff0c\u751a\u81f3\u8fde\u4ee5\u524d\u5bf9\u5f00\u6e90\u57fa\u7840\u8bbe\u65bd\u9886\u57df\u6d89\u8db3\u4e0d\u591a\u7684 BAT\u3001\u8682\u8681\u3001\u6ef4\u6ef4\u8fd9\u6837\u7684\u5de8\u5934\u4eec\uff0c\u4e5f\u90fd\u4ece AI\u3001\u4e91\u8ba1\u7b97\u3001\u5fae\u670d\u52a1\u3001\u57fa\u7840\u8bbe\u65bd\u7b49\u7ef4\u5ea6\u591a\u7ba1\u9f50\u4e0b\uff0c\u4e89\u76f8\u628a\u5bb9\u5668\u548c Kubernetes \u9879\u76ee\u6811\u7acb\u4e3a\u6218\u7565\u91cd\u5fc3\u4e4b\u4e00\u3002 \u5c31\u5728\u8fd9\u573a\u56e0\u201c\u5bb9\u5668\u201d\u800c\u8d77\u7684\u6280\u672f\u53d8\u9769\u4e2d\uff0cKubernetes \u9879\u76ee\u5df2\u7136\u6210\u4e3a\u5bb9\u5668\u6280\u672f\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u91cd\u65b0\u5b9a\u4e49\u4e86\u57fa\u7840\u8bbe\u65bd\u9886\u57df\u5bf9\u5e94\u7528\u7f16\u6392\u4e0e\u7ba1\u7406\u7684\u79cd\u79cd\u53ef\u80fd\u3002 \u5176\u5b9e\uff0c\u5bb9\u5668\u6280\u672f\u4f53\u7cfb\u770b\u4f3c\u7eb7\u4e71\u7e41\u6742\uff0c\u5374\u5b58\u5728\u7740\u5f88\u591a\u53ef\u4ee5\u201c\u7275\u4e00\u53d1\u800c\u52a8\u5168\u8eab\u201d\u7684\u4e3b\u7ebf\u3002\u6bd4\u5982\uff0cLinux \u7684\u8fdb\u7a0b\u6a21\u578b\u5bf9\u4e8e\u5bb9\u5668\u672c\u8eab\u7684\u91cd\u8981\u610f\u4e49\uff1b\u6216\u8005\uff0c\u201c\u63a7\u5236\u5668\u201d\u6a21\u5f0f\u5bf9\u6574\u4e2a Kubernetes \u9879\u76ee\u63d0\u7eb2\u6308\u9886\u7684\u4f5c\u7528\u3002 \u4f46\u662f\uff0c\u8fd9\u4e9b\u5173\u4e8e Linux \u5185\u6838\u3001\u5206\u5e03\u5f0f\u7cfb\u7edf\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u7b49\u65b9\u65b9\u9762\u9762\u7684\u79ef\u7d2f\uff0c\u5e76\u4e0d\u4f1a\u5728 Docker \u6216\u8005 Kubernetes \u7684\u6587\u6863\u4e2d\u4ea4\u4ee3\u6e05\u695a\u3002\u53ef\u504f\u504f\u5c31\u662f\u5b83\u4eec\uff0c\u624d\u662f\u771f\u6b63\u638c\u63e1\u5bb9\u5668\u6280\u672f\u4f53\u7cfb\u7684\u7cbe\u9ad3\u6240\u5728\uff0c\u662f\u6bcf\u4e00\u4f4d\u6280\u672f\u4ece\u4e1a\u8005\u9700\u8981\u6089\u5fc3\u4fee\u70bc\u7684\u201c\u5185\u529f\u201d\u3002 \u673a\u4f1a\u603b\u662f\u7559\u7ed9\u6709\u51c6\u5907\u7684\u4eba\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u4e00\u8d77\u5f00\u542f\u8fd9\u6b21\u5145\u6ee1\u6311\u6218\u7684\u5bb9\u5668\u4e4b\u65c5\uff01","title":"\u6253\u901a\u201c\u5bb9\u5668\u6280\u672f\u201d\u7684\u4efb\u7763\u4e8c\u8109"},{"location":"kubernetes/kubernetes_mynote2/","text":"\u5c0f\u9cb8\u9c7c\u5927\u4e8b\u8bb0\uff08\u4e00\uff09\uff1a\u521d\u51fa\u8305\u5e90 Pass\u4e0e\u5bb9\u5668 2013 \u5e74\u7684\u540e\u7aef\u6280\u672f\u9886\u57df\uff0c\u5df2\u7ecf\u592a\u4e45\u6ca1\u6709\u51fa\u73b0\u8fc7\u4ee4\u4eba\u5174\u594b\u7684\u4e1c\u897f\u4e86\u3002\u66fe\u7ecf\u88ab\u4eba\u4eec\u5bc4\u4e88\u539a\u671b\u7684\u4e91\u8ba1\u7b97\u6280\u672f\uff0c\u4e5f\u5df2\u7ecf\u4ece\u5f53\u521d\u865a\u65e0\u7f25\u7f08\u7684\u6982\u5ff5\u8715\u53d8\u6210\u4e86\u5b9e\u5b9e\u5728\u5728\u7684\u865a\u62df\u673a\u548c\u8d26\u5355\u3002\u800c\u76f8\u6bd4\u4e8e\u7684\u5982\u65e5\u4e2d\u5929 AWS \u548c\u76db\u6781\u4e00\u65f6\u7684 OpenStack\uff0c\u4ee5 Cloud Foundry \u4e3a\u4ee3\u8868\u7684\u5f00\u6e90 PaaS \u9879\u76ee\uff0c\u5374\u6210\u4e3a\u4e86\u5f53\u65f6\u4e91\u8ba1\u7b97\u6280\u672f\u4e2d\u7684\u4e00\u80a1\u6e05\u6d41\u3002 \u8fd9\u65f6\uff0cCloud Foundry \u9879\u76ee\u5df2\u7ecf\u57fa\u672c\u5ea6\u8fc7\u4e86\u6700\u8270\u96be\u7684\u6982\u5ff5\u666e\u53ca\u548c\u7528\u6237\u6559\u80b2\u9636\u6bb5\uff0c\u5438\u5f15\u4e86\u5305\u62ec\u767e\u5ea6\u3001\u4eac\u4e1c\u3001\u534e\u4e3a\u3001IBM \u7b49\u4e00\u5927\u6279\u56fd\u5185\u5916\u6280\u672f\u5382\u5546\uff0c\u5f00\u542f\u4e86\u4ee5\u5f00\u6e90 PaaS \u4e3a\u6838\u5fc3\u6784\u5efa\u5e73\u53f0\u5c42\u670d\u52a1\u80fd\u529b\u7684\u53d8\u9769\u3002\u5982\u679c\u4f60\u6709\u673a\u4f1a\u95ee\u95ee\u5f53\u65f6\u7684\u4e91\u8ba1\u7b97\u4ece\u4e1a\u8005\u4eec\uff0c\u4ed6\u4eec\u5341\u6709\u516b\u4e5d\u90fd\u4f1a\u544a\u8bc9\u4f60\uff1aPaaS \u7684\u65f6\u4ee3\u5c31\u8981\u6765\u4e86\uff01 \u8fd9\u4e2a\u8bf4\u6cd5\u5176\u5b9e\u4e00\u70b9\u513f\u6ca1\u9519\uff0c\u5982\u679c\u4e0d\u662f\u540e\u6765\u4e00\u4e2a\u53eb Docker \u7684\u5f00\u6e90\u9879\u76ee\u7a81\u7136\u5192\u51fa\u6765\u7684\u8bdd\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5f53\u65f6\u8fd8\u540d\u53eb dotCloud \u7684 Docker \u516c\u53f8\uff0c\u4e5f\u662f\u8fd9\u80a1 PaaS \u70ed\u6f6e\u4e2d\u7684\u4e00\u4efd\u5b50\u3002\u53ea\u4e0d\u8fc7\u76f8\u6bd4\u4e8e Heroku\u3001Pivotal\u3001Red Hat \u7b49 PaaS \u5f04\u6f6e\u513f\u4eec\uff0cdotCloud \u516c\u53f8\u5b9e\u5728\u662f\u592a\u5fae\u4e0d\u8db3\u9053\u4e86\uff0c\u800c\u5b83\u7684\u4e3b\u6253\u4ea7\u54c1\u7531\u4e8e\u8ddf\u4e3b\u6d41\u7684 Cloud Foundry \u793e\u533a\u8131\u8282\uff0c\u957f\u671f\u4ee5\u6765\u4e5f\u65e0\u4eba\u95ee\u6d25\u3002\u773c\u770b\u5c31\u8981\u88ab\u5982\u706b\u5982\u837c\u7684 PaaS \u98ce\u6f6e\u629b\u5f03\uff0cdotCloud \u516c\u53f8\u5374\u505a\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u51b3\u5b9a\uff1a\u5f00\u6e90\u81ea\u5df1\u7684\u5bb9\u5668\u9879\u76ee Docker\u3002 Pass\u5de5\u4f5c\u539f\u7406 \u4e8b\u5b9e\u4e0a\uff0c\u50cf Cloud Foundry \u8fd9\u6837\u7684 PaaS \u9879\u76ee\uff0c\u6700\u6838\u5fc3\u7684\u7ec4\u4ef6\u5c31\u662f\u4e00\u5957\u5e94\u7528\u7684\u6253\u5305\u548c\u5206\u53d1\u673a\u5236\u3002 Cloud Foundry \u4e3a\u6bcf\u79cd\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u90fd\u5b9a\u4e49\u4e86\u4e00\u79cd\u6253\u5305\u683c\u5f0f\uff0c\u800c\u201ccf push\u201d\u7684\u4f5c\u7528\uff0c\u57fa\u672c\u4e0a\u7b49\u540c\u4e8e\u7528\u6237\u628a\u5e94\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u548c\u542f\u52a8\u811a\u672c\u6253\u8fdb\u4e00\u4e2a\u538b\u7f29\u5305\u5185\uff0c\u4e0a\u4f20\u5230\u4e91\u4e0a Cloud Foundry \u7684\u5b58\u50a8\u4e2d\u3002\u63a5\u7740\uff0cCloud Foundry \u4f1a\u901a\u8fc7\u8c03\u5ea6\u5668\u9009\u62e9\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u8fd9\u4e2a\u5e94\u7528\u7684\u865a\u62df\u673a\uff0c\u7136\u540e\u901a\u77e5\u8fd9\u4e2a\u673a\u5668\u4e0a\u7684 Agent \u628a\u5e94\u7528\u538b\u7f29\u5305\u4e0b\u8f7d\u4e0b\u6765\u542f\u52a8\u3002 \u8fd9\u65f6\u5019\u5173\u952e\u6765\u4e86\uff0c\u7531\u4e8e\u9700\u8981\u5728\u4e00\u4e2a\u865a\u62df\u673a\u4e0a\u542f\u52a8\u5f88\u591a\u4e2a\u6765\u81ea\u4e0d\u540c\u7528\u6237\u7684\u5e94\u7528\uff0cCloud Foundry \u4f1a\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684 Cgroups \u548c Namespace \u673a\u5236\u4e3a\u6bcf\u4e00\u4e2a\u5e94\u7528\u5355\u72ec\u521b\u5efa\u4e00\u4e2a\u79f0\u4f5c\u201c\u6c99\u76d2\u201d\u7684\u9694\u79bb\u73af\u5883\uff0c\u7136\u540e\u5728\u201c\u6c99\u76d2\u201d\u4e2d\u542f\u52a8\u8fd9\u4e9b\u5e94\u7528\u8fdb\u7a0b\u3002\u8fd9\u6837\uff0c\u5c31\u5b9e\u73b0\u4e86\u628a\u591a\u4e2a\u7528\u6237\u7684\u5e94\u7528\u4e92\u4e0d\u5e72\u6d89\u5730\u5728\u865a\u62df\u673a\u91cc\u6279\u91cf\u5730\u3001\u81ea\u52a8\u5730\u8fd0\u884c\u8d77\u6765\u7684\u76ee\u7684\u3002 \u8fd9\uff0c\u6b63\u662f PaaS \u9879\u76ee\u6700\u6838\u5fc3\u7684\u80fd\u529b\u3002 \u800c\u8fd9\u4e9b Cloud Foundry \u7528\u6765\u8fd0\u884c\u5e94\u7528\u7684\u9694\u79bb\u73af\u5883\uff0c\u6216\u8005\u8bf4\u201c\u6c99\u76d2\u201d\uff0c\u5c31\u662f\u6240\u8c13\u7684\u201c\u5bb9\u5668\u201d\u3002 \u800c Docker \u9879\u76ee\uff0c\u5b9e\u9645\u4e0a\u8ddf Cloud Foundry \u7684\u5bb9\u5668\u5e76\u6ca1\u6709\u592a\u5927\u4e0d\u540c\uff0c\u6240\u4ee5\u5728\u5b83\u53d1\u5e03\u540e\u4e0d\u4e45\uff0cCloud Foundry \u7684\u9996\u5e2d\u4ea7\u54c1\u7ecf\u7406 James Bayer \u5c31\u5728\u793e\u533a\u91cc\u505a\u4e86\u4e00\u6b21\u8be6\u7ec6\u5bf9\u6bd4\uff0c\u544a\u8bc9\u7528\u6237 Docker \u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u540c\u6837\u4f7f\u7528 Cgroups \u548c Namespace \u5b9e\u73b0\u7684\u201c\u6c99\u76d2\u201d\u800c\u5df2\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u9ed1\u79d1\u6280\uff0c\u4e5f\u4e0d\u9700\u8981\u7279\u522b\u5173\u6ce8 Docker\u5d1b\u8d77 Pass \u6253\u5305\u529f\u80fd\uff0c\u5374\u6210\u4e86 PaaS \u65e5\u540e\u4e0d\u65ad\u906d\u5230\u7528\u6237\u8bdf\u75c5\u7684\u4e00\u4e2a\u201c\u8f6f\u808b\u201d\u3002 \u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6839\u672c\u539f\u56e0\u662f\uff0c\u4e00\u65e6\u7528\u4e0a\u4e86 PaaS\uff0c\u7528\u6237\u5c31\u5fc5\u987b\u4e3a\u6bcf\u79cd\u8bed\u8a00\u3001\u6bcf\u79cd\u6846\u67b6\uff0c\u751a\u81f3\u6bcf\u4e2a\u7248\u672c\u7684\u5e94\u7528\u7ef4\u62a4\u4e00\u4e2a\u6253\u597d\u7684\u5305\u3002\u8fd9\u4e2a\u6253\u5305\u8fc7\u7a0b\uff0c\u6ca1\u6709\u4efb\u4f55\u7ae0\u6cd5\u53ef\u5faa\uff0c\u66f4\u9ebb\u70e6\u7684\u662f\uff0c\u660e\u660e\u5728\u672c\u5730\u8fd0\u884c\u5f97\u597d\u597d\u7684\u5e94\u7528\uff0c\u5374\u9700\u8981\u505a\u5f88\u591a\u4fee\u6539\u548c\u914d\u7f6e\u5de5\u4f5c\u624d\u80fd\u5728 PaaS \u91cc\u8fd0\u884c\u8d77\u6765\u3002\u800c\u8fd9\u4e9b\u4fee\u6539\u548c\u914d\u7f6e\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7ecf\u9a8c\u53ef\u4ee5\u501f\u9274\uff0c\u57fa\u672c\u4e0a\u5f97\u9760\u4e0d\u65ad\u8bd5\u9519\uff0c\u76f4\u5230\u4f60\u6478\u6e05\u695a\u4e86\u672c\u5730\u5e94\u7528\u548c\u8fdc\u7aef PaaS \u5339\u914d\u7684\u201c\u813e\u6c14\u201d\u624d\u80fd\u591f\u641e\u5b9a\u3002 \u6700\u540e\u7ed3\u5c40\u5c31\u662f\uff0c\u201ccf push\u201d\u786e\u5b9e\u662f\u80fd\u4e00\u952e\u90e8\u7f72\u4e86\uff0c\u4f46\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u4e00\u952e\u90e8\u7f72\uff0c\u7528\u6237\u4e3a\u6bcf\u4e2a\u5e94\u7528\u6253\u5305\u7684\u5de5\u4f5c\u53ef\u8c13\u4e00\u6ce2\u4e09\u6298\uff0c\u8d39\u5c3d\u5fc3\u673a\u3002 Docker\u955c\u50cf\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898 \u800cDocker \u955c\u50cf\u89e3\u51b3\u7684\uff0c\u6070\u6070\u5c31\u662f\u6253\u5305\u8fd9\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\u3002 \u6240\u8c13 Docker \u955c\u50cf\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u538b\u7f29\u5305\u3002\u4f46\u662f\u8fd9\u4e2a\u538b\u7f29\u5305\u91cc\u7684\u5185\u5bb9\uff0c\u6bd4 PaaS \u7684\u5e94\u7528\u53ef\u6267\u884c\u6587\u4ef6 + \u542f\u505c\u811a\u672c\u7684\u7ec4\u5408\u5c31\u8981\u4e30\u5bcc\u591a\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u5927\u591a\u6570 Docker \u955c\u50cf\u662f\u76f4\u63a5\u7531\u4e00\u4e2a\u5b8c\u6574\u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u6784\u6210\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u538b\u7f29\u5305\u91cc\u7684\u5185\u5bb9\u8ddf\u4f60\u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 \u8fd9\u5c31\u6709\u610f\u601d\u4e86\uff1a\u5047\u8bbe\u4f60\u7684\u5e94\u7528\u5728\u672c\u5730\u8fd0\u884c\u65f6\uff0c\u80fd\u770b\u89c1\u7684\u73af\u5883\u662f CentOS 7.2 \u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u90a3\u4e48\u53ea\u8981\u7528 CentOS 7.2 \u7684 ISO \u505a\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u518d\u628a\u4f60\u7684\u5e94\u7528\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u538b\u7f29\u8fdb\u53bb\uff0c\u90a3\u4e48\u65e0\u8bba\u5728\u54ea\u91cc\u89e3\u538b\u8fd9\u4e2a\u538b\u7f29\u5305\uff0c\u90fd\u53ef\u4ee5\u5f97\u5230\u4e0e\u4f60\u672c\u5730\u6d4b\u8bd5\u65f6\u4e00\u6837\u7684\u73af\u5883\u3002\u5f53\u7136\uff0c\u4f60\u7684\u5e94\u7528\u4e5f\u5728\u91cc\u9762\uff01 \u8fd9\u5c31\u662f Docker \u955c\u50cf\u6700\u5389\u5bb3\u7684\u5730\u65b9\uff1a\u53ea\u8981\u6709\u8fd9\u4e2a\u538b\u7f29\u5305\u5728\u624b\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u6280\u672f\u521b\u5efa\u4e00\u4e2a\u201c\u6c99\u76d2\u201d\uff0c\u5728\u201c\u6c99\u76d2\u201d\u4e2d\u89e3\u538b\u8fd9\u4e2a\u538b\u7f29\u5305\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u4e86\u3002 \u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e2a\u538b\u7f29\u5305\u5305\u542b\u4e86\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u5305\u542b\u4e86\u8fd9\u4e2a\u5e94\u7528\u8fd0\u884c\u6240\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5148\u7528\u8fd9\u4e2a\u538b\u7f29\u5305\u5728\u672c\u5730\u8fdb\u884c\u5f00\u53d1\u548c\u6d4b\u8bd5\uff0c\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u628a\u8fd9\u4e2a\u538b\u7f29\u5305\u4e0a\u4f20\u5230\u4e91\u7aef\u8fd0\u884c\u3002 \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5b8c\u5168\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u914d\u7f6e\u6216\u8005\u4fee\u6539\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u538b\u7f29\u5305\u8d4b\u4e88\u4e86\u4f60\u4e00\u79cd\u6781\u5176\u5b9d\u8d35\u7684\u80fd\u529b\uff1a\u672c\u5730\u73af\u5883\u548c\u4e91\u7aef\u73af\u5883\u7684\u9ad8\u5ea6\u4e00\u81f4\uff01 \u90a3\u4e48\uff0c\u6709\u4e86 Docker \u955c\u50cf\u8fd9\u4e2a\u5229\u5668\uff0cPaaS \u91cc\u6700\u6838\u5fc3\u7684\u6253\u5305\u7cfb\u7edf\u4e00\u4e0b\u5b50\u5c31\u6ca1\u4e86\u7528\u6b66\u4e4b\u5730\uff0c\u6700\u8ba9\u7528\u6237\u6293\u72c2\u7684\u6253\u5305\u8fc7\u7a0b\u4e5f\u968f\u4e4b\u6d88\u5931\u4e86\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728\u5f53\u4eca\u7684\u4e92\u8054\u7f51\u91cc\uff0cDocker \u955c\u50cf\u9700\u8981\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u53ef\u8c13\u553e\u624b\u53ef\u5f97\u3002 \u6240\u4ee5\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4e0b\u8f7d\u597d\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u4e0e\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u5236\u4f5c\u4e00\u4e2a\u538b\u7f29\u5305\u5373\u53ef\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\uff1a $ docker build \u6211\u7684\u955c\u50cf \u4e00\u65e6\u955c\u50cf\u5236\u4f5c\u5b8c\u6210\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u8ba9 Docker \u521b\u5efa\u4e00\u4e2a\u201c\u6c99\u76d2\u201d\u6765\u89e3\u538b\u8fd9\u4e2a\u955c\u50cf\uff0c\u7136\u540e\u5728\u201c\u6c99\u76d2\u201d\u4e2d\u8fd0\u884c\u81ea\u5df1\u7684\u5e94\u7528\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\uff1a $ docker run \u6211\u7684\u955c\u50cf \u5f53\u7136\uff0cdocker run \u521b\u5efa\u7684\u201c\u6c99\u76d2\u201d\uff0c\u4e5f\u662f\u4f7f\u7528 Cgroups \u548c Namespace \u673a\u5236\u521b\u5efa\u51fa\u6765\u7684\u9694\u79bb\u73af\u5883\u3002\u6211\u4f1a\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e2a\u673a\u5236\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u4e0d\u8fc7\uff0cDocker \u9879\u76ee\u56fa\u7136\u89e3\u51b3\u4e86\u5e94\u7528\u6253\u5305\u7684\u96be\u9898\uff0c\u4f46\u6b63\u5982\u524d\u9762\u6240\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u5b83\u5e76\u4e0d\u80fd\u4ee3\u66ff PaaS \u5b8c\u6210\u5927\u89c4\u6a21\u90e8\u7f72\u5e94\u7528\u7684\u804c\u8d23\u3002 \u800c\u5728 2014 \u5e74\u5e95\u7684 DockerCon \u4e0a\uff0cDocker \u516c\u53f8\u96c4\u5fc3\u52c3\u52c3\u5730\u5bf9\u5916\u53d1\u5e03\u4e86\u81ea\u5bb6\u7814\u53d1\u7684\u201cDocker \u539f\u751f\u201d\u5bb9\u5668\u96c6\u7fa4\u7ba1\u7406\u9879\u76ee Swarm\uff0c\u4e0d\u4ec5\u5c06\u8fd9\u6ce2\u201cCaaS\u201d\u70ed\u63a8\u5411\u4e86\u4e00\u4e2a\u524d\u6240\u672a\u6709\u7684\u9ad8\u6f6e\uff0c\u66f4\u662f\u5bc4\u6258\u4e86\u6574\u4e2a Docker \u516c\u53f8\u91cd\u65b0\u5b9a\u4e49 PaaS \u7684\u5b8f\u4f1f\u613f\u671b\u3002","title":"2. \u5c0f\u9cb8\u9c7c\u5927\u4e8b\u8bb0\uff08\u4e00\uff09\uff1a\u521d\u51fa\u8305\u5e90"},{"location":"kubernetes/kubernetes_mynote2/#_1","text":"","title":"\u5c0f\u9cb8\u9c7c\u5927\u4e8b\u8bb0\uff08\u4e00\uff09\uff1a\u521d\u51fa\u8305\u5e90"},{"location":"kubernetes/kubernetes_mynote2/#pass","text":"2013 \u5e74\u7684\u540e\u7aef\u6280\u672f\u9886\u57df\uff0c\u5df2\u7ecf\u592a\u4e45\u6ca1\u6709\u51fa\u73b0\u8fc7\u4ee4\u4eba\u5174\u594b\u7684\u4e1c\u897f\u4e86\u3002\u66fe\u7ecf\u88ab\u4eba\u4eec\u5bc4\u4e88\u539a\u671b\u7684\u4e91\u8ba1\u7b97\u6280\u672f\uff0c\u4e5f\u5df2\u7ecf\u4ece\u5f53\u521d\u865a\u65e0\u7f25\u7f08\u7684\u6982\u5ff5\u8715\u53d8\u6210\u4e86\u5b9e\u5b9e\u5728\u5728\u7684\u865a\u62df\u673a\u548c\u8d26\u5355\u3002\u800c\u76f8\u6bd4\u4e8e\u7684\u5982\u65e5\u4e2d\u5929 AWS \u548c\u76db\u6781\u4e00\u65f6\u7684 OpenStack\uff0c\u4ee5 Cloud Foundry \u4e3a\u4ee3\u8868\u7684\u5f00\u6e90 PaaS \u9879\u76ee\uff0c\u5374\u6210\u4e3a\u4e86\u5f53\u65f6\u4e91\u8ba1\u7b97\u6280\u672f\u4e2d\u7684\u4e00\u80a1\u6e05\u6d41\u3002 \u8fd9\u65f6\uff0cCloud Foundry \u9879\u76ee\u5df2\u7ecf\u57fa\u672c\u5ea6\u8fc7\u4e86\u6700\u8270\u96be\u7684\u6982\u5ff5\u666e\u53ca\u548c\u7528\u6237\u6559\u80b2\u9636\u6bb5\uff0c\u5438\u5f15\u4e86\u5305\u62ec\u767e\u5ea6\u3001\u4eac\u4e1c\u3001\u534e\u4e3a\u3001IBM \u7b49\u4e00\u5927\u6279\u56fd\u5185\u5916\u6280\u672f\u5382\u5546\uff0c\u5f00\u542f\u4e86\u4ee5\u5f00\u6e90 PaaS \u4e3a\u6838\u5fc3\u6784\u5efa\u5e73\u53f0\u5c42\u670d\u52a1\u80fd\u529b\u7684\u53d8\u9769\u3002\u5982\u679c\u4f60\u6709\u673a\u4f1a\u95ee\u95ee\u5f53\u65f6\u7684\u4e91\u8ba1\u7b97\u4ece\u4e1a\u8005\u4eec\uff0c\u4ed6\u4eec\u5341\u6709\u516b\u4e5d\u90fd\u4f1a\u544a\u8bc9\u4f60\uff1aPaaS \u7684\u65f6\u4ee3\u5c31\u8981\u6765\u4e86\uff01 \u8fd9\u4e2a\u8bf4\u6cd5\u5176\u5b9e\u4e00\u70b9\u513f\u6ca1\u9519\uff0c\u5982\u679c\u4e0d\u662f\u540e\u6765\u4e00\u4e2a\u53eb Docker \u7684\u5f00\u6e90\u9879\u76ee\u7a81\u7136\u5192\u51fa\u6765\u7684\u8bdd\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5f53\u65f6\u8fd8\u540d\u53eb dotCloud \u7684 Docker \u516c\u53f8\uff0c\u4e5f\u662f\u8fd9\u80a1 PaaS \u70ed\u6f6e\u4e2d\u7684\u4e00\u4efd\u5b50\u3002\u53ea\u4e0d\u8fc7\u76f8\u6bd4\u4e8e Heroku\u3001Pivotal\u3001Red Hat \u7b49 PaaS \u5f04\u6f6e\u513f\u4eec\uff0cdotCloud \u516c\u53f8\u5b9e\u5728\u662f\u592a\u5fae\u4e0d\u8db3\u9053\u4e86\uff0c\u800c\u5b83\u7684\u4e3b\u6253\u4ea7\u54c1\u7531\u4e8e\u8ddf\u4e3b\u6d41\u7684 Cloud Foundry \u793e\u533a\u8131\u8282\uff0c\u957f\u671f\u4ee5\u6765\u4e5f\u65e0\u4eba\u95ee\u6d25\u3002\u773c\u770b\u5c31\u8981\u88ab\u5982\u706b\u5982\u837c\u7684 PaaS \u98ce\u6f6e\u629b\u5f03\uff0cdotCloud \u516c\u53f8\u5374\u505a\u51fa\u4e86\u8fd9\u6837\u4e00\u4e2a\u51b3\u5b9a\uff1a\u5f00\u6e90\u81ea\u5df1\u7684\u5bb9\u5668\u9879\u76ee Docker\u3002","title":"Pass\u4e0e\u5bb9\u5668"},{"location":"kubernetes/kubernetes_mynote2/#pass_1","text":"\u4e8b\u5b9e\u4e0a\uff0c\u50cf Cloud Foundry \u8fd9\u6837\u7684 PaaS \u9879\u76ee\uff0c\u6700\u6838\u5fc3\u7684\u7ec4\u4ef6\u5c31\u662f\u4e00\u5957\u5e94\u7528\u7684\u6253\u5305\u548c\u5206\u53d1\u673a\u5236\u3002 Cloud Foundry \u4e3a\u6bcf\u79cd\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00\u90fd\u5b9a\u4e49\u4e86\u4e00\u79cd\u6253\u5305\u683c\u5f0f\uff0c\u800c\u201ccf push\u201d\u7684\u4f5c\u7528\uff0c\u57fa\u672c\u4e0a\u7b49\u540c\u4e8e\u7528\u6237\u628a\u5e94\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u548c\u542f\u52a8\u811a\u672c\u6253\u8fdb\u4e00\u4e2a\u538b\u7f29\u5305\u5185\uff0c\u4e0a\u4f20\u5230\u4e91\u4e0a Cloud Foundry \u7684\u5b58\u50a8\u4e2d\u3002\u63a5\u7740\uff0cCloud Foundry \u4f1a\u901a\u8fc7\u8c03\u5ea6\u5668\u9009\u62e9\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u8fd9\u4e2a\u5e94\u7528\u7684\u865a\u62df\u673a\uff0c\u7136\u540e\u901a\u77e5\u8fd9\u4e2a\u673a\u5668\u4e0a\u7684 Agent \u628a\u5e94\u7528\u538b\u7f29\u5305\u4e0b\u8f7d\u4e0b\u6765\u542f\u52a8\u3002 \u8fd9\u65f6\u5019\u5173\u952e\u6765\u4e86\uff0c\u7531\u4e8e\u9700\u8981\u5728\u4e00\u4e2a\u865a\u62df\u673a\u4e0a\u542f\u52a8\u5f88\u591a\u4e2a\u6765\u81ea\u4e0d\u540c\u7528\u6237\u7684\u5e94\u7528\uff0cCloud Foundry \u4f1a\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684 Cgroups \u548c Namespace \u673a\u5236\u4e3a\u6bcf\u4e00\u4e2a\u5e94\u7528\u5355\u72ec\u521b\u5efa\u4e00\u4e2a\u79f0\u4f5c\u201c\u6c99\u76d2\u201d\u7684\u9694\u79bb\u73af\u5883\uff0c\u7136\u540e\u5728\u201c\u6c99\u76d2\u201d\u4e2d\u542f\u52a8\u8fd9\u4e9b\u5e94\u7528\u8fdb\u7a0b\u3002\u8fd9\u6837\uff0c\u5c31\u5b9e\u73b0\u4e86\u628a\u591a\u4e2a\u7528\u6237\u7684\u5e94\u7528\u4e92\u4e0d\u5e72\u6d89\u5730\u5728\u865a\u62df\u673a\u91cc\u6279\u91cf\u5730\u3001\u81ea\u52a8\u5730\u8fd0\u884c\u8d77\u6765\u7684\u76ee\u7684\u3002 \u8fd9\uff0c\u6b63\u662f PaaS \u9879\u76ee\u6700\u6838\u5fc3\u7684\u80fd\u529b\u3002 \u800c\u8fd9\u4e9b Cloud Foundry \u7528\u6765\u8fd0\u884c\u5e94\u7528\u7684\u9694\u79bb\u73af\u5883\uff0c\u6216\u8005\u8bf4\u201c\u6c99\u76d2\u201d\uff0c\u5c31\u662f\u6240\u8c13\u7684\u201c\u5bb9\u5668\u201d\u3002 \u800c Docker \u9879\u76ee\uff0c\u5b9e\u9645\u4e0a\u8ddf Cloud Foundry \u7684\u5bb9\u5668\u5e76\u6ca1\u6709\u592a\u5927\u4e0d\u540c\uff0c\u6240\u4ee5\u5728\u5b83\u53d1\u5e03\u540e\u4e0d\u4e45\uff0cCloud Foundry \u7684\u9996\u5e2d\u4ea7\u54c1\u7ecf\u7406 James Bayer \u5c31\u5728\u793e\u533a\u91cc\u505a\u4e86\u4e00\u6b21\u8be6\u7ec6\u5bf9\u6bd4\uff0c\u544a\u8bc9\u7528\u6237 Docker \u5b9e\u9645\u4e0a\u53ea\u662f\u4e00\u4e2a\u540c\u6837\u4f7f\u7528 Cgroups \u548c Namespace \u5b9e\u73b0\u7684\u201c\u6c99\u76d2\u201d\u800c\u5df2\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u9ed1\u79d1\u6280\uff0c\u4e5f\u4e0d\u9700\u8981\u7279\u522b\u5173\u6ce8","title":"Pass\u5de5\u4f5c\u539f\u7406"},{"location":"kubernetes/kubernetes_mynote2/#docker","text":"Pass \u6253\u5305\u529f\u80fd\uff0c\u5374\u6210\u4e86 PaaS \u65e5\u540e\u4e0d\u65ad\u906d\u5230\u7528\u6237\u8bdf\u75c5\u7684\u4e00\u4e2a\u201c\u8f6f\u808b\u201d\u3002 \u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u6839\u672c\u539f\u56e0\u662f\uff0c\u4e00\u65e6\u7528\u4e0a\u4e86 PaaS\uff0c\u7528\u6237\u5c31\u5fc5\u987b\u4e3a\u6bcf\u79cd\u8bed\u8a00\u3001\u6bcf\u79cd\u6846\u67b6\uff0c\u751a\u81f3\u6bcf\u4e2a\u7248\u672c\u7684\u5e94\u7528\u7ef4\u62a4\u4e00\u4e2a\u6253\u597d\u7684\u5305\u3002\u8fd9\u4e2a\u6253\u5305\u8fc7\u7a0b\uff0c\u6ca1\u6709\u4efb\u4f55\u7ae0\u6cd5\u53ef\u5faa\uff0c\u66f4\u9ebb\u70e6\u7684\u662f\uff0c\u660e\u660e\u5728\u672c\u5730\u8fd0\u884c\u5f97\u597d\u597d\u7684\u5e94\u7528\uff0c\u5374\u9700\u8981\u505a\u5f88\u591a\u4fee\u6539\u548c\u914d\u7f6e\u5de5\u4f5c\u624d\u80fd\u5728 PaaS \u91cc\u8fd0\u884c\u8d77\u6765\u3002\u800c\u8fd9\u4e9b\u4fee\u6539\u548c\u914d\u7f6e\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7ecf\u9a8c\u53ef\u4ee5\u501f\u9274\uff0c\u57fa\u672c\u4e0a\u5f97\u9760\u4e0d\u65ad\u8bd5\u9519\uff0c\u76f4\u5230\u4f60\u6478\u6e05\u695a\u4e86\u672c\u5730\u5e94\u7528\u548c\u8fdc\u7aef PaaS \u5339\u914d\u7684\u201c\u813e\u6c14\u201d\u624d\u80fd\u591f\u641e\u5b9a\u3002 \u6700\u540e\u7ed3\u5c40\u5c31\u662f\uff0c\u201ccf push\u201d\u786e\u5b9e\u662f\u80fd\u4e00\u952e\u90e8\u7f72\u4e86\uff0c\u4f46\u662f\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u4e00\u952e\u90e8\u7f72\uff0c\u7528\u6237\u4e3a\u6bcf\u4e2a\u5e94\u7528\u6253\u5305\u7684\u5de5\u4f5c\u53ef\u8c13\u4e00\u6ce2\u4e09\u6298\uff0c\u8d39\u5c3d\u5fc3\u673a\u3002 Docker\u955c\u50cf\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898 \u800cDocker \u955c\u50cf\u89e3\u51b3\u7684\uff0c\u6070\u6070\u5c31\u662f\u6253\u5305\u8fd9\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\u3002 \u6240\u8c13 Docker \u955c\u50cf\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u538b\u7f29\u5305\u3002\u4f46\u662f\u8fd9\u4e2a\u538b\u7f29\u5305\u91cc\u7684\u5185\u5bb9\uff0c\u6bd4 PaaS \u7684\u5e94\u7528\u53ef\u6267\u884c\u6587\u4ef6 + \u542f\u505c\u811a\u672c\u7684\u7ec4\u5408\u5c31\u8981\u4e30\u5bcc\u591a\u4e86\u3002\u5b9e\u9645\u4e0a\uff0c\u5927\u591a\u6570 Docker \u955c\u50cf\u662f\u76f4\u63a5\u7531\u4e00\u4e2a\u5b8c\u6574\u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u6784\u6210\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u538b\u7f29\u5305\u91cc\u7684\u5185\u5bb9\u8ddf\u4f60\u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5\u73af\u5883\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002 \u8fd9\u5c31\u6709\u610f\u601d\u4e86\uff1a\u5047\u8bbe\u4f60\u7684\u5e94\u7528\u5728\u672c\u5730\u8fd0\u884c\u65f6\uff0c\u80fd\u770b\u89c1\u7684\u73af\u5883\u662f CentOS 7.2 \u64cd\u4f5c\u7cfb\u7edf\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u90a3\u4e48\u53ea\u8981\u7528 CentOS 7.2 \u7684 ISO \u505a\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u518d\u628a\u4f60\u7684\u5e94\u7528\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u538b\u7f29\u8fdb\u53bb\uff0c\u90a3\u4e48\u65e0\u8bba\u5728\u54ea\u91cc\u89e3\u538b\u8fd9\u4e2a\u538b\u7f29\u5305\uff0c\u90fd\u53ef\u4ee5\u5f97\u5230\u4e0e\u4f60\u672c\u5730\u6d4b\u8bd5\u65f6\u4e00\u6837\u7684\u73af\u5883\u3002\u5f53\u7136\uff0c\u4f60\u7684\u5e94\u7528\u4e5f\u5728\u91cc\u9762\uff01 \u8fd9\u5c31\u662f Docker \u955c\u50cf\u6700\u5389\u5bb3\u7684\u5730\u65b9\uff1a\u53ea\u8981\u6709\u8fd9\u4e2a\u538b\u7f29\u5305\u5728\u624b\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u67d0\u79cd\u6280\u672f\u521b\u5efa\u4e00\u4e2a\u201c\u6c99\u76d2\u201d\uff0c\u5728\u201c\u6c99\u76d2\u201d\u4e2d\u89e3\u538b\u8fd9\u4e2a\u538b\u7f29\u5305\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u4e86\u3002 \u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e2a\u538b\u7f29\u5305\u5305\u542b\u4e86\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u4e5f\u5c31\u662f\u5305\u542b\u4e86\u8fd9\u4e2a\u5e94\u7528\u8fd0\u884c\u6240\u9700\u8981\u7684\u6240\u6709\u4f9d\u8d56\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5148\u7528\u8fd9\u4e2a\u538b\u7f29\u5305\u5728\u672c\u5730\u8fdb\u884c\u5f00\u53d1\u548c\u6d4b\u8bd5\uff0c\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u628a\u8fd9\u4e2a\u538b\u7f29\u5305\u4e0a\u4f20\u5230\u4e91\u7aef\u8fd0\u884c\u3002 \u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5b8c\u5168\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u914d\u7f6e\u6216\u8005\u4fee\u6539\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u538b\u7f29\u5305\u8d4b\u4e88\u4e86\u4f60\u4e00\u79cd\u6781\u5176\u5b9d\u8d35\u7684\u80fd\u529b\uff1a\u672c\u5730\u73af\u5883\u548c\u4e91\u7aef\u73af\u5883\u7684\u9ad8\u5ea6\u4e00\u81f4\uff01 \u90a3\u4e48\uff0c\u6709\u4e86 Docker \u955c\u50cf\u8fd9\u4e2a\u5229\u5668\uff0cPaaS \u91cc\u6700\u6838\u5fc3\u7684\u6253\u5305\u7cfb\u7edf\u4e00\u4e0b\u5b50\u5c31\u6ca1\u4e86\u7528\u6b66\u4e4b\u5730\uff0c\u6700\u8ba9\u7528\u6237\u6293\u72c2\u7684\u6253\u5305\u8fc7\u7a0b\u4e5f\u968f\u4e4b\u6d88\u5931\u4e86\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5728\u5f53\u4eca\u7684\u4e92\u8054\u7f51\u91cc\uff0cDocker \u955c\u50cf\u9700\u8981\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u53ef\u8c13\u553e\u624b\u53ef\u5f97\u3002 \u6240\u4ee5\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4e0b\u8f7d\u597d\u7684\u64cd\u4f5c\u7cfb\u7edf\u6587\u4ef6\u4e0e\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528\u5b83\u5236\u4f5c\u4e00\u4e2a\u538b\u7f29\u5305\u5373\u53ef\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\uff1a $ docker build \u6211\u7684\u955c\u50cf \u4e00\u65e6\u955c\u50cf\u5236\u4f5c\u5b8c\u6210\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u8ba9 Docker \u521b\u5efa\u4e00\u4e2a\u201c\u6c99\u76d2\u201d\u6765\u89e3\u538b\u8fd9\u4e2a\u955c\u50cf\uff0c\u7136\u540e\u5728\u201c\u6c99\u76d2\u201d\u4e2d\u8fd0\u884c\u81ea\u5df1\u7684\u5e94\u7528\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\uff1a $ docker run \u6211\u7684\u955c\u50cf \u5f53\u7136\uff0cdocker run \u521b\u5efa\u7684\u201c\u6c99\u76d2\u201d\uff0c\u4e5f\u662f\u4f7f\u7528 Cgroups \u548c Namespace \u673a\u5236\u521b\u5efa\u51fa\u6765\u7684\u9694\u79bb\u73af\u5883\u3002\u6211\u4f1a\u5728\u540e\u9762\u7684\u6587\u7ae0\u4e2d\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e2a\u673a\u5236\u7684\u5b9e\u73b0\u539f\u7406\u3002 \u4e0d\u8fc7\uff0cDocker \u9879\u76ee\u56fa\u7136\u89e3\u51b3\u4e86\u5e94\u7528\u6253\u5305\u7684\u96be\u9898\uff0c\u4f46\u6b63\u5982\u524d\u9762\u6240\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u5b83\u5e76\u4e0d\u80fd\u4ee3\u66ff PaaS \u5b8c\u6210\u5927\u89c4\u6a21\u90e8\u7f72\u5e94\u7528\u7684\u804c\u8d23\u3002 \u800c\u5728 2014 \u5e74\u5e95\u7684 DockerCon \u4e0a\uff0cDocker \u516c\u53f8\u96c4\u5fc3\u52c3\u52c3\u5730\u5bf9\u5916\u53d1\u5e03\u4e86\u81ea\u5bb6\u7814\u53d1\u7684\u201cDocker \u539f\u751f\u201d\u5bb9\u5668\u96c6\u7fa4\u7ba1\u7406\u9879\u76ee Swarm\uff0c\u4e0d\u4ec5\u5c06\u8fd9\u6ce2\u201cCaaS\u201d\u70ed\u63a8\u5411\u4e86\u4e00\u4e2a\u524d\u6240\u672a\u6709\u7684\u9ad8\u6f6e\uff0c\u66f4\u662f\u5bc4\u6258\u4e86\u6574\u4e2a Docker \u516c\u53f8\u91cd\u65b0\u5b9a\u4e49 PaaS \u7684\u5b8f\u4f1f\u613f\u671b\u3002","title":"Docker\u5d1b\u8d77"},{"location":"linux/fuwu/ss/","text":"ss-local \u7ec8\u7aef\u4ee3\u7406\uff08gfwlist\uff09 \u7b80\u4ecb ss-local \u662f shadowsocks \u7684\u672c\u5730 socks5 \u670d\u52a1\u5668\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528 ss-local \u63d0\u4f9b\u7684 socks5 \u4ee3\u7406\uff0c\u5fc5\u987b\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528 socks5 \u534f\u8bae\u4e0e\u4e4b\u901a\u4fe1\u3002\u4f46\u662f\u5f88\u53ef\u60dc\uff0c\u9664\u4e86\u90e8\u5206\u6d4f\u89c8\u5668\u3001\u8f6f\u4ef6\u76f4\u63a5\u652f\u6301 socks5 \u534f\u8bae\u5916\uff0c\u5176\u5b83\u7684\u90fd\u53ea\u652f\u6301 http \u4ee3\u7406\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9 privoxy \u6765\u5c06 http \u4ee3\u7406\u534f\u8bae\u8f6c\u6362\u4e3a socks5 \u4ee3\u7406\u534f\u8bae\uff0c\u4e0e\u540e\u7aef\u7684 ss-local \u8fdb\u884c\u901a\u4fe1\uff0c\u4e0e\u6b64\u540c\u65f6\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c gfwlist \u5206\u6d41\u64cd\u4f5c\u3002 \u5b89\u88c5 \u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u8fd9\u91cc\u9009\u62e9\u5b89\u88c5 python \u7248 shadowsocks\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u4efb\u610f\u7248\u672c\uff08ss\u3001ssr\u3001ssh\u3001v2ray\uff0c\u53ea\u8981\u80fd\u63d0\u4f9b socks5 \u4ee3\u7406\uff09\u3002 # CentOS/RHEL yum -y install epel-release yum -y install python-pip pip install shadowsocks # ArchLinux pacman -S python-pip pip install shadowsocks \u914d\u7f6e vim /etc/ss-local.json { \"server\": \"1.2.3.4\", \"server_port\": 8989, \"method\": \"aes-128-cfb\", \"password\": \"123456\", \"local_address\": \"127.0.0.1\", \"local_port\": 1080, \"fast_open\": true, \"workers\": 1 } \u914d\u7f6e\u8bf4\u660e vim /etc/ss-local.json { server : 1.2.3.4 , server_port : 8989, method : aes-128-cfb , password : 123456 , local_address : 127.0.0.1 , local_port : 1080, fast_open : true, workers : 1 } ## \u914d\u7f6e\u8bf4\u660e\uff1a{ server : 1.2.3.4 , # \u670d\u52a1\u5668IP server_port : 8989, # \u670d\u52a1\u5668Port method : aes-128-cfb , # \u52a0\u5bc6\u65b9\u5f0f password : 123456 , # \u7aef\u53e3\u5bc6\u7801 local_address : 127.0.0.1 , # \u672c\u5730\u76d1\u542cIP local_port : 1080, # \u672c\u5730\u76d1\u542cPort fast_open : true, # TCP Fast Open workers : 1 # worker\u8fdb\u7a0b\u6570\u91cf} \u8fd0\u884c nohup sslocal -c /etc/ss-local.json /dev/null /var/log/ss-local.log","title":"1. shadowsock\u642d\u5efa"},{"location":"linux/fuwu/ss/#ss-local-gfwlist","text":"","title":"ss-local \u7ec8\u7aef\u4ee3\u7406\uff08gfwlist\uff09"},{"location":"linux/fuwu/ss/#_1","text":"ss-local \u662f shadowsocks \u7684\u672c\u5730 socks5 \u670d\u52a1\u5668\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528 ss-local \u63d0\u4f9b\u7684 socks5 \u4ee3\u7406\uff0c\u5fc5\u987b\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528 socks5 \u534f\u8bae\u4e0e\u4e4b\u901a\u4fe1\u3002\u4f46\u662f\u5f88\u53ef\u60dc\uff0c\u9664\u4e86\u90e8\u5206\u6d4f\u89c8\u5668\u3001\u8f6f\u4ef6\u76f4\u63a5\u652f\u6301 socks5 \u534f\u8bae\u5916\uff0c\u5176\u5b83\u7684\u90fd\u53ea\u652f\u6301 http \u4ee3\u7406\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9 privoxy \u6765\u5c06 http \u4ee3\u7406\u534f\u8bae\u8f6c\u6362\u4e3a socks5 \u4ee3\u7406\u534f\u8bae\uff0c\u4e0e\u540e\u7aef\u7684 ss-local \u8fdb\u884c\u901a\u4fe1\uff0c\u4e0e\u6b64\u540c\u65f6\u6211\u4eec\u8fd8\u53ef\u4ee5\u8fdb\u884c gfwlist \u5206\u6d41\u64cd\u4f5c\u3002","title":"\u7b80\u4ecb"},{"location":"linux/fuwu/ss/#_2","text":"\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u8fd9\u91cc\u9009\u62e9\u5b89\u88c5 python \u7248 shadowsocks\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u4efb\u610f\u7248\u672c\uff08ss\u3001ssr\u3001ssh\u3001v2ray\uff0c\u53ea\u8981\u80fd\u63d0\u4f9b socks5 \u4ee3\u7406\uff09\u3002 # CentOS/RHEL yum -y install epel-release yum -y install python-pip pip install shadowsocks # ArchLinux pacman -S python-pip pip install shadowsocks","title":"\u5b89\u88c5"},{"location":"linux/fuwu/ss/#_3","text":"vim /etc/ss-local.json { \"server\": \"1.2.3.4\", \"server_port\": 8989, \"method\": \"aes-128-cfb\", \"password\": \"123456\", \"local_address\": \"127.0.0.1\", \"local_port\": 1080, \"fast_open\": true, \"workers\": 1 }","title":"\u914d\u7f6e"},{"location":"linux/fuwu/ss/#_4","text":"vim /etc/ss-local.json { server : 1.2.3.4 , server_port : 8989, method : aes-128-cfb , password : 123456 , local_address : 127.0.0.1 , local_port : 1080, fast_open : true, workers : 1 } ## \u914d\u7f6e\u8bf4\u660e\uff1a{ server : 1.2.3.4 , # \u670d\u52a1\u5668IP server_port : 8989, # \u670d\u52a1\u5668Port method : aes-128-cfb , # \u52a0\u5bc6\u65b9\u5f0f password : 123456 , # \u7aef\u53e3\u5bc6\u7801 local_address : 127.0.0.1 , # \u672c\u5730\u76d1\u542cIP local_port : 1080, # \u672c\u5730\u76d1\u542cPort fast_open : true, # TCP Fast Open workers : 1 # worker\u8fdb\u7a0b\u6570\u91cf}","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"linux/fuwu/ss/#_5","text":"nohup sslocal -c /etc/ss-local.json /dev/null /var/log/ss-local.log","title":"\u8fd0\u884c"},{"location":"python/python1/","text":"python\u57fa\u7840 \u7f16\u7a0b\u4e0e\u7f16\u7a0b\u8bed\u8a00 Python\u662f\u8bed\u8a00\uff0c\u800c\u5b66\u4e60\u8bed\u8a00\u7684\u5957\u8def\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4ee5\u82f1\u8bed\u5b66\u4e60\u4e3a\u4f8b\uff0c\u4f60\u9700\u8981\u5b66\u5355\u8bcd\uff0c\u7136\u540e\u5b66\u8bed\u6cd5\uff0c\u6700\u540e\u5199\u4f5c\u6587\u3002 \u82f1\u8bed\u7684\u5355\u8bcd---------- Python\u4e2d\u7684\u5173\u952e\u5b57 \u82f1\u8bed\u7684\u8bed\u6cd5---------- Python\u7684\u8bed\u6cd5 \u82f1\u8bed\u7684\u4f5c\u6587---------- \u7528Python\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f \u6b64\u65f6\u4f60\u5fc3\u91cc\u5e94\u8be5\u6709\u6570\u4e86\uff0c\u5b66Python\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5168\u90fd\u662f\u5728\u8bb0\u5fc6\u4e00\u4e9b\u56fa\u5b9a\u7684\u5957\u8def\u800c\u5df2\uff0c\u90a3\u4e3a\u4f55\u6709\u7684\u4eba\u4f1a\u89c9\u5f97Python\u96be\u5462\uff1f\u6765\u770b\u4e00\u4e2a\u666e\u904d\u7684\u95ee\u9898\uff0c\u95ee\u9898\u4e2d\u5305\u542b\u7b54\u6848\u3002\u3002\u3002\u3002\u3002\u3002 \u7ecf\u5e38\u6709\u5b66\u751f\u95ee\uff1a\u8001\u5e08\uff0c\u6211\u4e0a\u8bfe\u90fd\u80fd\u542c\u5f97\u61c2\uff0c\u4e3a\u5565\u6211\u5c31\u662f\u4e0d\u4f1a\u5199\u7a0b\u5e8f\u3002 \u6211\uff1a\u4f60\u8fd9\u4e0d\u5e9f\u8bdd\u4e48\uff01 \u4f60\u5b66\u5b8c\u4e86\u82f1\u8bed\u7684\u5355\u8bcd\u3001\u8bed\u6cd5\u3001\u8fd8\u6709\u5199\u4f5c\u6587\u7684\u65b9\u5f0f\uff0c\u4f60\u80fd\u7acb\u523b\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u4f5c\u6587\u5417\uff1f\u5f53\u7136\u4e0d\u80fd\uff0c\u90a3\u4e48\u95ee\u9898\u51fa\u5728\u54ea\u91cc\u5462\uff1f \u4f60\u60f3\u60f3\uff0c\u4f60\u73b0\u5728\u7528\u6c49\u8bed\u8ddf\u6211\u6c9f\u901a\uff0c\u8111\u5b50\u91cc\u4f1a\u4e0d\u4f1a\u5206\u795e\u53bb\u7422\u78e8\u67d0\u4e2a\u6c49\u5b57\u7684\u610f\u601d\uff0c\u6c49\u8bed\u7684\u8bed\u6cd5\u5e94\u8be5\u600e\u6837\uff1f\u4f60\u5f53\u7136\u4e0d\u4f1a\uff0c\u4f60\u8111\u5b50\u91cc\u60f3\u5230\u4ec0\u4e48\uff0c\u5c31\u4f1a\u5f88\u81ea\u7136\u5730\u5c06\u5b83\u8868\u8fbe\u51fa\u6765\uff0c\u56e0\u4e3a\u4f60\u5df2\u7ecf\u8db3\u591f\u719f\u7ec3\uff0c\u6c49\u8bed\u7684\u6587\u5b57\u3001\u5355\u8bcd\u3001\u8bed\u6cd5\u7b49\u5df2\u7ecf\u6df1\u6df1\u5730\u690d\u5165\u4e86\u4f60\u7684\u610f\u8bc6\u91cc\u3002\u5b66\u82f1\u8bed\uff0c\u5b66Python\u90fd\u662f\u4e00\u6837\u7684\u9053\u7406\uff0c\u4f60\u4ee5\u4e3a\u4f60\u4f1a\u4e86\uff0c\u4f60\u53ef\u80fd\u786e\u5b9e\u4f1a\u4e86\uff0c\u4f46\u4f60\u8fdc\u6ca1\u6709\u8fbe\u5230\u70c2\u719f\u4e8e\u5fc3\u7684\u5730\u6b65\uff0c\u56e0\u6b64\u4f60\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u7684\u662f\u5173\u952e\u5b57\u7684\u7528\u6cd5\u3001\u8bed\u6cd5\u7ed3\u6784\uff0c\u800c\u6211\u5219\u53ea\u9700\u8981\u8003\u8651\u6211\u8111\u5b50\u91cc\u7684\u903b\u8f91\u5982\u4f55\u5b89\u6392\uff0c\u903b\u8f91\u8d70\u901a\u4e86\u7a0b\u5e8f\u81ea\u7136\u5c31\u8868\u8fbe\u51fa\u6765\u4e86\uff0c\u6211\u5b8c\u5168\u4e0d\u4f1a\u8003\u8651\u5173\u952e\u5b57\u6216\u8bed\u6cd5\u4ec0\u4e48\u7684\uff0c\u5b83\u5c31\u50cf\u662f\u6211\u7684\u5668\u5b98\u4e00\u6837\uff0c\u6211\u4e0d\u4f1a\u5728\u60f3\u5403\u996d\u7684\u65f6\u5019\u8003\u8651\u5e94\u8be5\u7528\u952d\u773c\u5403\u8fd8\u662f\u7528\u5634\u5403\uff0c\u8fd9\u5c31\u662f\u4f60\u8ddf\u6211\u7684\u5dee\u522b\u3002 \u90a3\u6709\u4f55\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u5462\uff1f\u7b54\uff1a\u6ca1\u6709\u3002\u4e0d\u4e0b\u72e0\u5fc3\u7ffb\u6765\u8986\u53bb\u7ec3\u4e60\uff0c\u77e5\u8bc6\u662f\u65e0\u6cd5\u6839\u690d\u4e8e\u4f60\u7684\u6f5c\u610f\u8bc6\u7684\uff0c\u4f60\u4e5f\u6c38\u8fdc\u65e0\u6cd5\u81ea\u5df1\u5199\u7a0b\u5e8f\uff0c\u5c31\u8ddf\u5f53\u5e74\u90ed\u9756\u5b66\u964d\u9f99\u5341\u516b\u638c\u4e00\u6837\uff0c\u6d2a\u4e03\u516c\u8981\u4ed6\u6253200\u4e0b\uff0c\u4ed6\u80fd\u62531000\u4e0b\uff0c\u5c4c\u4e1d\u5230\u4e0d\u80fd\u518d\u5c4c\u4e1d\u7684\u4f60\uff0c\u6ca1\u6709\u8fd9\u70b9\u610f\u5fd7\u529b\uff0c\u5c31\u522b\u5984\u60f3\u54b8\u9c7c\u7ffb\u8eab\u4e86\u3002\u3002\u3002\u3002\u3002\u3002 \u9644\u4e00\u53e5\uff1a \u6211\u4e0d\u77e5\u9053\u6210\u529f\u6709\u6ca1\u6709\u6377\u5f84\uff0c\u4f46\u6211\u786e\u5b9a\u5b66Python\u6ca1\u6709\uff0c\u6ca1\u6709\u51e0\u4e07\u884c\u4ee3\u7801\u7684\u6d17\u793c\uff0c\u4f60\u4e0d\u53ef\u80fd\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u7a0b\u5e8f\u5458\uff0c\u8fd9\u5c31\u662f\u6211\u60f3\u5bf9\u4f60\u8bf4\u7684\u3002 \u7f16\u7a0b\u8bed\u8a00\u5206\u7c7b \u673a\u5668\u8bed\u8a00 \u6c47\u7f16\u8bed\u8a00 \u9ad8\u7ea7\u8bed\u8a00 \u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00 C\u8bed\u8a00: C\u8bed\u8a00\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u5b83\u65e2\u5177\u6709\u9ad8\u7ea7\u8bed\u8a00\u7684\u7279\u70b9\uff0c\u53c8\u5177\u6709\u6c47\u7f16\u8bed\u8a00\u7684\u7279\u70b9\u3002\u5b83\u7531\u7f8e\u56fd\u8d1d\u5c14\u7814\u7a76\u6240\u7684D.M.Ritchie\u4e8e1972\u5e74\u63a8\u51fa\uff0c1978\u5e74\u540e\uff0cC\u8bed\u8a00\u5df2\u5148\u540e\u88ab\u79fb\u690d\u5230\u5927\u3001\u4e2d\u3001\u5c0f\u53ca\u5fae\u578b\u673a\u4e0a\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u5de5\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7f16\u5199\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7f16\u5199\u4e0d\u4f9d\u8d56\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u7684\u5e94\u7528\u8303\u56f4\u5e7f\u6cdb\uff0c\u5177\u5907\u5f88\u5f3a\u7684\u6570\u636e\u5904\u7406\u80fd\u529b\uff0c\u4e0d\u4ec5\u4ec5\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e0a\uff0c\u800c\u4e14\u5404\u7c7b\u79d1\u7814\u90fd\u9700\u8981\u7528\u5230C\u8bed\u8a00\uff0c\u9002\u4e8e\u7f16\u5199\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u4e09\u7ef4\uff0c\u4e8c\u7ef4\u56fe\u5f62\u548c\u52a8\u753b\uff0c\u5177\u4f53\u5e94\u7528\u6bd4\u5982\u5355\u7247\u673a\u4ee5\u53ca\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u3002 C++\uff1a C++\u662fC\u8bed\u8a00\u7684\u7ee7\u627f\u7684\u6269\u5c55\uff0c\u5b83\u65e2\u53ef\u4ee5\u8fdb\u884cC\u8bed\u8a00\u7684\u8fc7\u7a0b\u5316\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u53c8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u4e3a\u7279\u70b9\u7684\u57fa\u4e8e\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u7ee7\u627f\u548c\u591a\u6001\u4e3a\u7279\u70b9\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3002C++\u64c5\u957f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u57fa\u4e8e\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u56e0\u800cC++\u5c31\u9002\u5e94\u7684\u95ee\u9898\u89c4\u6a21\u800c\u8bba\uff0c\u5927\u5c0f\u7531\u4e4b\u3002 C++\u4e0d\u4ec5\u62e5\u6709\u8ba1\u7b97\u673a\u9ad8\u6548\u8fd0\u884c\u7684\u5b9e\u7528\u6027\u7279\u5f81\uff0c\u540c\u65f6\u8fd8\u81f4\u529b\u4e8e\u63d0\u9ad8\u5927\u89c4\u6a21\u7a0b\u5e8f\u7684\u7f16\u7a0b\u8d28\u91cf\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u95ee\u9898\u63cf\u8ff0\u80fd\u529b\u3002 JAVA: Java\u662f\u4e00\u79cd\u53ef\u4ee5\u64b0\u5199\u8de8\u5e73\u53f0\u5e94\u7528\u8f6f\u4ef6\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u662f\u7531Sun Microsystems\u516c\u53f8\u4e8e1995\u5e745\u6708\u63a8\u51fa\u7684Java\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u548cJava\u5e73\u53f0\uff08\u5373JavaSE, JavaEE, JavaME\uff09\u7684\u603b\u79f0\u3002Java \u6280\u672f\u5177\u6709\u5353\u8d8a\u7684\u901a\u7528\u6027\u3001\u9ad8\u6548\u6027\u3001\u5e73\u53f0\u79fb\u690d\u6027\u548c\u5b89\u5168\u6027\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e2a\u4ebaPC\u3001\u6570\u636e\u4e2d\u5fc3\u3001\u6e38\u620f\u63a7\u5236\u53f0\u3001\u79d1\u5b66\u8d85\u7ea7\u8ba1\u7b97\u673a\u3001\u79fb\u52a8\u7535\u8bdd\u548c\u4e92\u8054\u7f51\uff0c\u540c\u65f6\u62e5\u6709\u5168\u7403\u6700\u5927\u7684\u5f00\u53d1\u8005\u4e13\u4e1a\u793e\u7fa4\u3002\u5728\u5168\u7403\u4e91\u8ba1\u7b97\u548c\u79fb\u52a8\u4e92\u8054\u7f51\u7684\u4ea7\u4e1a\u73af\u5883\u4e0b\uff0cJava\u66f4\u5177\u5907\u4e86\u663e\u8457\u4f18\u52bf\u548c\u5e7f\u9614\u524d\u666f\u3002 PHP: PHP\uff08\u5916\u6587\u540d:PHP: Hypertext Preprocessor\uff0c\u4e2d\u6587\u540d\uff1a\u201c\u8d85\u6587\u672c\u9884\u5904\u7406\u5668\u201d\uff09\u662f\u4e00\u79cd\u901a\u7528\u5f00\u6e90\u811a\u672c\u8bed\u8a00\u3002\u8bed\u6cd5\u5438\u6536\u4e86C\u8bed\u8a00\u3001Java\u548cPerl\u7684\u7279\u70b9\uff0c\u5229\u4e8e\u5b66\u4e60\uff0c\u4f7f\u7528\u5e7f\u6cdb\uff0c\u4e3b\u8981\u9002\u7528\u4e8eWeb\u5f00\u53d1\u9886\u57df Ruby: Ruby \u662f\u5f00\u6e90\u7684\uff0c\u5728Web \u4e0a\u514d\u8d39\u63d0\u4f9b\uff0c\u4f46\u9700\u8981\u4e00\u4e2a\u8bb8\u53ef\u8bc1\u3002[4] Ruby \u662f\u4e00\u79cd\u901a\u7528\u7684\u3001\u89e3\u91ca\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 Ruby \u662f\u4e00\u79cd\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u3002 Ruby \u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e Python \u548c Perl \u7684\u670d\u52a1\u5668\u7aef\u811a\u672c\u8bed\u8a00\u3002 Ruby \u53ef\u4ee5\u7528\u6765\u7f16\u5199\u901a\u7528\u7f51\u5173\u63a5\u53e3\uff08CGI\uff09\u811a\u672c\u3002 Ruby \u53ef\u4ee5\u88ab\u5d4c\u5165\u5230\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08HTML\uff09\u3002 Ruby \u8bed\u6cd5\u7b80\u5355\uff0c\u8fd9\u4f7f\u5f97\u65b0\u7684\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5feb\u901f\u8f7b\u677e\u5730\u5b66\u4e60 Ruby GO: Go \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u80fd\u8ba9\u6784\u9020\u7b80\u5355\u3001\u53ef\u9760\u4e14\u9ad8\u6548\u7684\u8f6f\u4ef6\u53d8\u5f97\u5bb9\u6613\u3002 Go\u662f\u4ece2007\u5e74\u672b\u7531Robert Griesemer, Rob Pike, Ken Thompson\u4e3b\u6301\u5f00\u53d1\uff0c\u540e\u6765\u8fd8\u52a0\u5165\u4e86Ian Lance Taylor, Russ Cox\u7b49\u4eba\uff0c\u5e76\u6700\u7ec8\u4e8e2009\u5e7411\u6708\u5f00\u6e90\uff0c\u57282012\u5e74\u65e9\u4e9b\u65f6\u5019\u53d1\u5e03\u4e86Go 1\u7a33\u5b9a\u7248\u672c\u3002\u73b0\u5728Go\u7684\u5f00\u53d1\u5df2\u7ecf\u662f\u5b8c\u5168\u5f00\u653e\u7684\uff0c\u5e76\u4e14\u62e5\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u793e\u533a\u3002 \u7531\u5176\u64c5\u957f\u5e76\u53d1\u7f16\u7a0b Python: Python\u662f\u4e00\u95e8\u4f18\u79c0\u7684\u7efc\u5408\u8bed\u8a00\uff0c Python\u7684\u5b97\u65e8\u662f\u7b80\u660e\u3001\u4f18\u96c5\u3001\u5f3a\u5927\uff0c\u5728\u4eba\u5de5\u667a\u80fd\u3001\u4e91\u8ba1\u7b97\u3001\u91d1\u878d\u5206\u6790\u3001\u5927\u6570\u636e\u5f00\u53d1\u3001WEB\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u8fd0\u7ef4\u3001\u6d4b\u8bd5\u7b49\u65b9\u5411\u5e94\u7528\u5e7f\u6cdb\uff0c\u5df2\u662f\u5168\u7403\u7b2c4\u5927\u6700\u6d41\u884c\u7684\u8bed\u8a00\u3002 python\u4ecb\u7ecd \u4ecb\u7ecd python\u7684\u521b\u59cb\u4eba\u4e3a\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido van Rossum\uff09\u30021989\u5e74\u7684\u5723\u8bde\u8282\u671f\u95f4\uff0cGuido\u5f00\u59cb\u5199\u80fd\u591f\u89e3\u91caPython\u8bed\u8a00\u8bed\u6cd5\u7684\u89e3\u91ca\u5668\u3002Python\u8fd9\u4e2a\u540d\u5b57\uff0c\u6765\u81eaGuido\u6240\u631a\u7231\u7684\u7535\u89c6\u5267Monty Python\u2019s Flying Circus\u3002\u4ed6\u5e0c\u671b\u8fd9\u4e2a\u65b0\u7684\u53eb\u505aPython\u7684\u8bed\u8a00\uff0c\u80fd\u7b26\u5408\u4ed6\u7684\u7406\u60f3\uff1a\u521b\u9020\u4e00\u79cdC\u548cshell\u4e4b\u95f4\uff0c\u529f\u80fd\u5168\u9762\uff0c\u6613\u5b66\u6613\u7528\uff0c\u53ef\u62d3\u5c55\u7684\u8bed\u8a00\u3002 \u6700\u65b0\u7684TIOBE\u6392\u884c\u699c\uff0cPython\u8d76\u8d85PHP\u5360\u636e\u7b2c4\uff0c Python\u5d07\u5c1a\u4f18\u7f8e\u3001\u6e05\u6670\u3001\u7b80\u5355\uff0c\u662f\u4e00\u4e2a\u4f18\u79c0\u5e76\u5e7f\u6cdb\u4f7f\u7528\u7684\u8bed\u8a00\u3002 Python\u53ef\u4ee5\u5e94\u7528\u4e8e\u4f17\u591a\u9886\u57df\uff0c\u5982\uff1a\u6570\u636e\u5206\u6790\u3001\u7ec4\u4ef6\u96c6\u6210\u3001\u7f51\u7edc\u670d\u52a1\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u503c\u8ba1\u7b97\u548c\u79d1\u5b66\u8ba1\u7b97\u7b49\u4f17\u591a\u9886\u57df\u3002\u76ee\u524d\u4e1a\u5185\u51e0\u4e4e\u6240\u6709\u5927\u4e2d\u578b\u4e92\u8054\u7f51\u4f01\u4e1a\u90fd\u5728\u4f7f\u7528Python\uff0c\u5982\uff1aYoutube\u3001Dropbox\u3001BT\u3001Quora\uff08\u4e2d\u56fd\u77e5\u4e4e\uff09\u3001\u8c46\u74e3\u3001\u77e5\u4e4e\u3001Google\u3001Yahoo!\u3001Facebook\u3001NASA\u3001\u767e\u5ea6\u3001\u817e\u8baf\u3001\u6c7d\u8f66\u4e4b\u5bb6\u3001\u7f8e\u56e2\u7b49 python\u7684\u5b89\u88c5 Python\u76ee\u524d\u5df2\u652f\u6301\u6240\u6709\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5728Linux,Unix,Mac\u7cfb\u7edf\u4e0a\u81ea\u5e26Python\u73af\u5883\uff0c\u5728Windows\u7cfb\u7edf\u4e0a\u9700\u8981\u5b89\u88c5\u4e00\u4e0b\uff0c\u8d85\u7b80\u5355 \u6253\u5f00\u5b98\u7f51 \u4e0b\u8f7d\u5373\u53ef\u3002 python\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f \u5199\u597d\u7a0b\u5e8f\u540e\u4ee5.py\u7ed3\u5c3e print ( hello world ) \u53d8\u91cf \u5982\u4f55\u5b9a\u4e49\u53d8\u91cf #\u53d8\u91cf\u540d(\u76f8\u5f53\u4e8e\u95e8\u724c\u53f7\uff0c\u6307\u5411\u503c\u6240\u5728\u7684\u7a7a\u95f4)\uff0c\u7b49\u53f7\uff0c\u53d8\u91cf\u503c name= Egon sex= male age=18 level=10 \u53d8\u91cf\u7684\u5b9a\u4e49\u89c4\u8303 #1. \u53d8\u91cf\u540d\u53ea\u80fd\u662f \u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u7684\u4efb\u610f\u7ec4\u5408 #2. \u53d8\u91cf\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f\u6570\u5b57 #3. \u5173\u952e\u5b57\u4e0d\u80fd\u58f0\u660e\u4e3a\u53d8\u91cf\u540d[ and , as , assert , break , class , continue , def , del , elif , else , except , exec , finally , for , from , global , if , import , in , is , lambda , not , or , pass , print , raise , return , try , while , with , yield ] \u4e00\u822c\u7684\u5b9a\u4e49\u65b9\u5f0f #\u9a7c\u5cf0\u4f53 AgeOfOldboy = 56 NumberOfStudents = 80 #\u4e0b\u5212\u7ebf(\u63a8\u8350\u4f7f\u7528) age_of_oldboy = 56 number_of_students = 80 \u5b9a\u4e49\u53d8\u91cf\u4f1a\u6709\uff1aid\uff0ctype\uff0cvalue #1 \u7b49\u53f7\u6bd4\u8f83\u7684\u662fvalue\uff0c #2 is\u6bd4\u8f83\u7684\u662fid #\u5f3a\u8c03\uff1a #1. id\u76f8\u540c\uff0c\u610f\u5473\u7740type\u548cvalue\u5fc5\u5b9a\u76f8\u540c #2. value\u76f8\u540ctype\u80af\u5b9a\u76f8\u540c\uff0c\u4f46id\u53ef\u80fd\u4e0d\u540c,\u5982\u4e0b x= Info Egon:18 y= Info Egon:18 id(x) 4376607152 id(y) 4376607408 x == y True x is y False \u5e38\u91cf \u5e38\u91cf\u5373\u6307\u4e0d\u53d8\u7684\u91cf\uff0c\u5982pai 3.141592653..., \u6216\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6539\u53d8\u7684\u91cf \u4e3e\u4f8b\uff0c\u5047\u5982\u8001\u7537\u5b69\u8001\u5e08\u7684\u5e74\u9f84\u4f1a\u53d8\uff0c\u90a3\u8fd9\u5c31\u662f\u4e2a\u53d8\u91cf\uff0c\u4f46\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4ed6\u7684\u5e74\u9f84\u4e0d\u4f1a\u53d8\u4e86\uff0c\u90a3\u5c31\u662f\u5e38\u91cf\u3002\u5728Python\u4e2d\u6ca1\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u8bed\u6cd5\u4ee3\u8868\u5e38\u91cf\uff0c\u7a0b\u5e8f\u5458\u7ea6\u5b9a\u4fd7\u6210\u7528\u53d8\u91cf\u540d\u5168\u90e8\u5927\u5199\u4ee3\u8868\u5e38\u91cf AGE_OF_OLDBOY = 56 \u7a0b\u5e8f\u4e0e\u7528\u6237\u4ea4\u4e92 python2\u4e0epython3\u4e2d\u6709\u4e00\u70b9\u533a\u522b #\u5728python3\u4e2d input\uff1a\u7528\u6237\u8f93\u5165\u4efb\u4f55\u503c\uff0c\u90fd\u5b58\u6210\u5b57\u7b26\u4e32\u7c7b\u578b #\u5728python2\u4e2d input\uff1a\u7528\u6237\u8f93\u5165\u4ec0\u4e48\u7c7b\u578b\uff0c\u5c31\u5b58\u6210\u4ec0\u4e48\u7c7b\u578b raw_input\uff1a\u7b49\u4e8epython3\u7684input \u6ce8\u91ca \u4ee3\u7801\u6ce8\u91ca\u5206\u5355\u884c\u548c\u591a\u884c\u6ce8\u91ca\uff0c \u5355\u884c\u6ce8\u91ca\u7528#\uff0c\u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u7528\u4e09\u5bf9\u53cc\u5f15\u53f7 #1. \u4e0d\u7528\u5168\u90e8\u52a0\u6ce8\u91ca\uff0c\u53ea\u9700\u8981\u5728\u81ea\u5df1\u89c9\u5f97\u91cd\u8981\u6216\u4e0d\u597d\u7406\u89e3\u7684\u90e8\u5206\u52a0\u6ce8\u91ca\u5373\u53ef #2. \u6ce8\u91ca\u53ef\u4ee5\u7528\u4e2d\u6587\u6216\u82f1\u6587\uff0c\u4f46\u4e0d\u8981\u7528\u62fc\u97f3 \u6587\u4ef6\u5934 #!/usr/bin/env python # -*- coding: utf-8 -*- \u57fa\u672c\u6570\u636e\u7c7b\u578b #int\u6574\u578b \u5b9a\u4e49\uff1aage=10 #age=int(10) \u7528\u4e8e\u6807\u8bc6\uff1a\u5e74\u9f84\uff0c\u7b49\u7ea7\uff0c\u8eab\u4efd\u8bc1\u53f7\uff0cqq\u53f7\uff0c\u4e2a\u6570 #float\u6d6e\u70b9\u578b \u5b9a\u4e49\uff1asalary=3.1 #salary=float(3.1) \u7528\u4e8e\u6807\u8bc6\uff1a\u5de5\u8d44\uff0c\u8eab\u9ad8\uff0c\u4f53\u91cd\uff0c \u6ce8\u610f\uff1a\u5728Python3\u91cc\u4e0d\u518d\u6709long\u7c7b\u578b\u4e86\uff0c\u5168\u90fd\u662fint py3---- a=2**65 print (type(a)) class int py2---- a=2**65 print (type(a)) class long \u5b57\u7b26\u4e32 \u52a0\u5f15\u53f7\u7684\u5b57\u7b26 \u5b9a\u4e49\uff1aname= egon #name=str( egon ) \u7528\u4e8e\u6807\u8bc6\uff1a\u63cf\u8ff0\u6027\u7684\u5185\u5bb9\uff0c\u5982\u59d3\u540d\uff0c\u6027\u522b\uff0c\u56fd\u7c4d\uff0c\u79cd\u65cf \u5b57\u7b26\u4e32\u7684\u7b80\u5355\u64cd\u4f5c #\u6570\u5b57\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u7b49\u8fd0\u7b97\uff0c\u5b57\u7b26\u4e32\u5462\uff1f\u8ba9\u6211\u5927\u58f0\u544a\u8bc9\u4f60\uff0c\u4e5f\u80fd\uff1fwhat ?\u662f\u7684\uff0c\u4f46\u53ea\u80fd\u8fdb\u884c \u76f8\u52a0 \u548c \u76f8\u4e58 \u8fd0\u7b97\u3002 name= egon age= 18 name+age #\u76f8\u52a0\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u62fc\u63a5 egon18 name*5 egonegonegonegonegon #\u6ce8\u610f1\uff1a\u5b57\u7b26\u4e32\u76f8\u52a0\u7684\u6548\u7387\u4e0d\u9ad8 \u5b57\u7b26\u4e321+\u5b57\u7b26\u4e323\uff0c\u5e76\u4e0d\u4f1a\u5728\u5b57\u7b26\u4e321\u7684\u57fa\u7840\u4e0a\u52a0\u5b57\u7b26\u4e322\uff0c\u800c\u662f\u7533\u8bf7\u4e00\u4e2a\u5168\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u5165\u5b57\u7b26\u4e321\u548c\u5b57\u7b26\u4e323\uff0c\u76f8\u5f53\u5b57\u7b26\u4e321\u4e0e\u5b57\u7b26\u4e323\u7684\u7a7a\u95f4\u88ab\u590d\u5236\u4e86\u4e00\u6b21\uff0c #\u6ce8\u610f2\uff1a==\u53ea\u80fd\u5b57\u7b26\u4e32\u52a0\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u5b57\u7b26\u4e32\u52a0\u5176\u4ed6\u7c7b\u578b== \u5217\u8868 #\u5728[]\u5185\u7528\u9017\u53f7\u5206\u9694\uff0c\u53ef\u4ee5\u5b58\u653en\u4e2a\u4efb\u610f\u7c7b\u578b\u7684\u503c \u5b9a\u4e49\uff1astudents=[ egon , alex , wupeiqi ,] #students=list([ egon , alex , wupeiqi ,]) \u7528\u4e8e\u6807\u8bc6\uff1a\u5b58\u50a8\u591a\u4e2a\u503c\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4e00\u4e2a\u4eba\u6709\u591a\u4e2a\u7231\u597d \u5b57\u5178 name={ name : zdk , age :19} \u5e03\u5c14\u503c #\u5e03\u5c14\u503c\uff0c\u4e00\u4e2aTrue\u4e00\u4e2aFalse #\u8ba1\u7b97\u673a\u4fd7\u79f0\u7535\u8111\uff0c\u5373\u6211\u4eec\u7f16\u5199\u7a0b\u5e8f\u8ba9\u8ba1\u7b97\u673a\u8fd0\u884c\u65f6\uff0c\u5e94\u8be5\u662f\u8ba9\u8ba1\u7b97\u673a\u65e0\u9650\u63a5\u8fd1\u4eba\u8111\uff0c\u6216\u8005\u8bf4\u4eba\u8111\u80fd\u5e72\u4ec0\u4e48\uff0c\u8ba1\u7b97\u673a\u5c31\u5e94\u8be5\u80fd\u5e72\u4ec0\u4e48\uff0c\u4eba\u8111\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6570\u636e\u8fd0\u884c\u4e0e\u903b\u8f91\u8fd0\u7b97\uff0c\u6b64\u5904\u7684\u5e03\u5c14\u7c7b\u578b\u5c31\u6a21\u62df\u4eba\u7684\u903b\u8f91\u8fd0\u884c\uff0c\u5373\u5224\u65ad\u4e00\u4e2a\u6761\u4ef6\u6210\u7acb\u65f6\uff0c\u7528True\u6807\u8bc6\uff0c\u4e0d\u6210\u7acb\u5219\u7528False\u6807\u8bc6 a=3 b=5 a b #\u4e0d\u6210\u7acb\u5c31\u662fFalse,\u5373\u5047 False a b #\u6210\u7acb\u5c31\u662fTrue, \u5373\u771f True \u5e03\u5c14\u7c7b\u578b \uff01\uff01\uff01\uff01\uff01\uff01 #\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u81ea\u5e26\u5e03\u5c14\u503c 1\u3001None\uff0c0\uff0c\u7a7a\uff08\u7a7a\u5b57\u7b26\u4e32\uff0c\u7a7a\u5217\u8868\uff0c\u7a7a\u5b57\u5178\u7b49\uff09\u4e09\u79cd\u60c5\u51b5\u4e0b\u5e03\u5c14\u503c\u4e3aFalse 2\u3001\u5176\u4f59\u5747\u4e3a\u771f \u683c\u5f0f\u5316\u8f93\u51fa #%s\u5b57\u7b26\u4e32\u5360\u4f4d\u7b26\uff1a\u53ef\u4ee5\u63a5\u6536\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u63a5\u6536\u6570\u5b57 print( My name is %s,my age is %s %( egon ,18)) #%d\u6570\u5b57\u5360\u4f4d\u7b26\uff1a\u53ea\u80fd\u63a5\u6536\u6570\u5b57 print( My name is %s,my age is %d %( egon ,18)) print( My name is %s,my age is %d %( egon , 18 )) #\u62a5\u9519 \u57fa\u672c\u8fd0\u7b97\u7b26 \u903b\u8f91\u8fd0\u7b97 #\u4e09\u8005\u7684\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u5206\u522b\u662f\uff1anot\uff0cor\uff0cand 3 4 and 4 3 or 1==3 and x == x or 3 3 False #\u6700\u597d\u4f7f\u7528\u62ec\u53f7\u6765\u533a\u522b\u4f18\u5148\u7ea7\uff0c\u5176\u5b9e\u610f\u4e49\u4e0e\u4e0a\u9762\u7684\u4e00\u6837 (3 4 and 4 3) or ((1==3 and x == x ) or 3 3) False \u8eab\u4efd\u8fd0\u7b97\u7b26 #is\u6bd4\u8f83\u7684\u662fid #\u800c==\u6bd4\u8f83\u7684\u662f\u503c \u6d41\u7a0b\u63a7\u5236\u4e4bif-else if else if elif else \u6d41\u7a0b\u63a7\u5236\u4e4bwhile break\u4e0econtinue #break\u7528\u4e8e\u9000\u51fa\u672c\u5c42\u5faa\u73af while True: print 123 break print 456 #continue\u7528\u4e8e\u9000\u51fa\u672c\u6b21\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af while True: print 123 continue print 456 while+else #\u4e0e\u5176\u5b83\u8bed\u8a00else \u4e00\u822c\u53ea\u4e0eif \u642d\u914d\u4e0d\u540c\uff0c\u5728Python \u4e2d\u8fd8\u6709\u4e2awhile ...else \u8bed\u53e5\uff0cwhile \u540e\u9762\u7684else \u4f5c\u7528\u662f\u6307\uff0c\u5f53while \u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\uff0c\u4e2d\u95f4\u6ca1\u6709\u88abbreak \u4e2d\u6b62\u7684\u8bdd\uff0c\u5c31\u4f1a\u6267\u884celse\u540e\u9762\u7684\u8bed\u53e5 count = 0 while count = 5 : count += 1 print( Loop ,count) else: print( \u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u5566 ) print( -----out of while loop ------ ) \u6d41\u7a0b\u63a7\u5236\u4e4bfor\u5faa\u73af for i in range(10): print (i)","title":"1. python\u57fa\u7840"},{"location":"python/python1/#python","text":"","title":"python\u57fa\u7840"},{"location":"python/python1/#_1","text":"Python\u662f\u8bed\u8a00\uff0c\u800c\u5b66\u4e60\u8bed\u8a00\u7684\u5957\u8def\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4ee5\u82f1\u8bed\u5b66\u4e60\u4e3a\u4f8b\uff0c\u4f60\u9700\u8981\u5b66\u5355\u8bcd\uff0c\u7136\u540e\u5b66\u8bed\u6cd5\uff0c\u6700\u540e\u5199\u4f5c\u6587\u3002 \u82f1\u8bed\u7684\u5355\u8bcd---------- Python\u4e2d\u7684\u5173\u952e\u5b57 \u82f1\u8bed\u7684\u8bed\u6cd5---------- Python\u7684\u8bed\u6cd5 \u82f1\u8bed\u7684\u4f5c\u6587---------- \u7528Python\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f \u6b64\u65f6\u4f60\u5fc3\u91cc\u5e94\u8be5\u6709\u6570\u4e86\uff0c\u5b66Python\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5168\u90fd\u662f\u5728\u8bb0\u5fc6\u4e00\u4e9b\u56fa\u5b9a\u7684\u5957\u8def\u800c\u5df2\uff0c\u90a3\u4e3a\u4f55\u6709\u7684\u4eba\u4f1a\u89c9\u5f97Python\u96be\u5462\uff1f\u6765\u770b\u4e00\u4e2a\u666e\u904d\u7684\u95ee\u9898\uff0c\u95ee\u9898\u4e2d\u5305\u542b\u7b54\u6848\u3002\u3002\u3002\u3002\u3002\u3002 \u7ecf\u5e38\u6709\u5b66\u751f\u95ee\uff1a\u8001\u5e08\uff0c\u6211\u4e0a\u8bfe\u90fd\u80fd\u542c\u5f97\u61c2\uff0c\u4e3a\u5565\u6211\u5c31\u662f\u4e0d\u4f1a\u5199\u7a0b\u5e8f\u3002 \u6211\uff1a\u4f60\u8fd9\u4e0d\u5e9f\u8bdd\u4e48\uff01 \u4f60\u5b66\u5b8c\u4e86\u82f1\u8bed\u7684\u5355\u8bcd\u3001\u8bed\u6cd5\u3001\u8fd8\u6709\u5199\u4f5c\u6587\u7684\u65b9\u5f0f\uff0c\u4f60\u80fd\u7acb\u523b\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u4f5c\u6587\u5417\uff1f\u5f53\u7136\u4e0d\u80fd\uff0c\u90a3\u4e48\u95ee\u9898\u51fa\u5728\u54ea\u91cc\u5462\uff1f \u4f60\u60f3\u60f3\uff0c\u4f60\u73b0\u5728\u7528\u6c49\u8bed\u8ddf\u6211\u6c9f\u901a\uff0c\u8111\u5b50\u91cc\u4f1a\u4e0d\u4f1a\u5206\u795e\u53bb\u7422\u78e8\u67d0\u4e2a\u6c49\u5b57\u7684\u610f\u601d\uff0c\u6c49\u8bed\u7684\u8bed\u6cd5\u5e94\u8be5\u600e\u6837\uff1f\u4f60\u5f53\u7136\u4e0d\u4f1a\uff0c\u4f60\u8111\u5b50\u91cc\u60f3\u5230\u4ec0\u4e48\uff0c\u5c31\u4f1a\u5f88\u81ea\u7136\u5730\u5c06\u5b83\u8868\u8fbe\u51fa\u6765\uff0c\u56e0\u4e3a\u4f60\u5df2\u7ecf\u8db3\u591f\u719f\u7ec3\uff0c\u6c49\u8bed\u7684\u6587\u5b57\u3001\u5355\u8bcd\u3001\u8bed\u6cd5\u7b49\u5df2\u7ecf\u6df1\u6df1\u5730\u690d\u5165\u4e86\u4f60\u7684\u610f\u8bc6\u91cc\u3002\u5b66\u82f1\u8bed\uff0c\u5b66Python\u90fd\u662f\u4e00\u6837\u7684\u9053\u7406\uff0c\u4f60\u4ee5\u4e3a\u4f60\u4f1a\u4e86\uff0c\u4f60\u53ef\u80fd\u786e\u5b9e\u4f1a\u4e86\uff0c\u4f46\u4f60\u8fdc\u6ca1\u6709\u8fbe\u5230\u70c2\u719f\u4e8e\u5fc3\u7684\u5730\u6b65\uff0c\u56e0\u6b64\u4f60\u5728\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u7684\u662f\u5173\u952e\u5b57\u7684\u7528\u6cd5\u3001\u8bed\u6cd5\u7ed3\u6784\uff0c\u800c\u6211\u5219\u53ea\u9700\u8981\u8003\u8651\u6211\u8111\u5b50\u91cc\u7684\u903b\u8f91\u5982\u4f55\u5b89\u6392\uff0c\u903b\u8f91\u8d70\u901a\u4e86\u7a0b\u5e8f\u81ea\u7136\u5c31\u8868\u8fbe\u51fa\u6765\u4e86\uff0c\u6211\u5b8c\u5168\u4e0d\u4f1a\u8003\u8651\u5173\u952e\u5b57\u6216\u8bed\u6cd5\u4ec0\u4e48\u7684\uff0c\u5b83\u5c31\u50cf\u662f\u6211\u7684\u5668\u5b98\u4e00\u6837\uff0c\u6211\u4e0d\u4f1a\u5728\u60f3\u5403\u996d\u7684\u65f6\u5019\u8003\u8651\u5e94\u8be5\u7528\u952d\u773c\u5403\u8fd8\u662f\u7528\u5634\u5403\uff0c\u8fd9\u5c31\u662f\u4f60\u8ddf\u6211\u7684\u5dee\u522b\u3002 \u90a3\u6709\u4f55\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u5462\uff1f\u7b54\uff1a\u6ca1\u6709\u3002\u4e0d\u4e0b\u72e0\u5fc3\u7ffb\u6765\u8986\u53bb\u7ec3\u4e60\uff0c\u77e5\u8bc6\u662f\u65e0\u6cd5\u6839\u690d\u4e8e\u4f60\u7684\u6f5c\u610f\u8bc6\u7684\uff0c\u4f60\u4e5f\u6c38\u8fdc\u65e0\u6cd5\u81ea\u5df1\u5199\u7a0b\u5e8f\uff0c\u5c31\u8ddf\u5f53\u5e74\u90ed\u9756\u5b66\u964d\u9f99\u5341\u516b\u638c\u4e00\u6837\uff0c\u6d2a\u4e03\u516c\u8981\u4ed6\u6253200\u4e0b\uff0c\u4ed6\u80fd\u62531000\u4e0b\uff0c\u5c4c\u4e1d\u5230\u4e0d\u80fd\u518d\u5c4c\u4e1d\u7684\u4f60\uff0c\u6ca1\u6709\u8fd9\u70b9\u610f\u5fd7\u529b\uff0c\u5c31\u522b\u5984\u60f3\u54b8\u9c7c\u7ffb\u8eab\u4e86\u3002\u3002\u3002\u3002\u3002\u3002 \u9644\u4e00\u53e5\uff1a \u6211\u4e0d\u77e5\u9053\u6210\u529f\u6709\u6ca1\u6709\u6377\u5f84\uff0c\u4f46\u6211\u786e\u5b9a\u5b66Python\u6ca1\u6709\uff0c\u6ca1\u6709\u51e0\u4e07\u884c\u4ee3\u7801\u7684\u6d17\u793c\uff0c\u4f60\u4e0d\u53ef\u80fd\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u7a0b\u5e8f\u5458\uff0c\u8fd9\u5c31\u662f\u6211\u60f3\u5bf9\u4f60\u8bf4\u7684\u3002","title":"\u7f16\u7a0b\u4e0e\u7f16\u7a0b\u8bed\u8a00"},{"location":"python/python1/#_2","text":"\u673a\u5668\u8bed\u8a00 \u6c47\u7f16\u8bed\u8a00 \u9ad8\u7ea7\u8bed\u8a00","title":"\u7f16\u7a0b\u8bed\u8a00\u5206\u7c7b"},{"location":"python/python1/#_3","text":"","title":"\u4e3b\u6d41\u7f16\u7a0b\u8bed\u8a00"},{"location":"python/python1/#c","text":"C\u8bed\u8a00\u662f\u4e00\u79cd\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u5b83\u65e2\u5177\u6709\u9ad8\u7ea7\u8bed\u8a00\u7684\u7279\u70b9\uff0c\u53c8\u5177\u6709\u6c47\u7f16\u8bed\u8a00\u7684\u7279\u70b9\u3002\u5b83\u7531\u7f8e\u56fd\u8d1d\u5c14\u7814\u7a76\u6240\u7684D.M.Ritchie\u4e8e1972\u5e74\u63a8\u51fa\uff0c1978\u5e74\u540e\uff0cC\u8bed\u8a00\u5df2\u5148\u540e\u88ab\u79fb\u690d\u5230\u5927\u3001\u4e2d\u3001\u5c0f\u53ca\u5fae\u578b\u673a\u4e0a\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u5de5\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7f16\u5199\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u7f16\u5199\u4e0d\u4f9d\u8d56\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u7684\u5e94\u7528\u8303\u56f4\u5e7f\u6cdb\uff0c\u5177\u5907\u5f88\u5f3a\u7684\u6570\u636e\u5904\u7406\u80fd\u529b\uff0c\u4e0d\u4ec5\u4ec5\u662f\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e0a\uff0c\u800c\u4e14\u5404\u7c7b\u79d1\u7814\u90fd\u9700\u8981\u7528\u5230C\u8bed\u8a00\uff0c\u9002\u4e8e\u7f16\u5199\u7cfb\u7edf\u8f6f\u4ef6\uff0c\u4e09\u7ef4\uff0c\u4e8c\u7ef4\u56fe\u5f62\u548c\u52a8\u753b\uff0c\u5177\u4f53\u5e94\u7528\u6bd4\u5982\u5355\u7247\u673a\u4ee5\u53ca\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u3002","title":"C\u8bed\u8a00:"},{"location":"python/python1/#c_1","text":"C++\u662fC\u8bed\u8a00\u7684\u7ee7\u627f\u7684\u6269\u5c55\uff0c\u5b83\u65e2\u53ef\u4ee5\u8fdb\u884cC\u8bed\u8a00\u7684\u8fc7\u7a0b\u5316\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u53c8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u4e3a\u7279\u70b9\u7684\u57fa\u4e8e\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4ee5\u7ee7\u627f\u548c\u591a\u6001\u4e3a\u7279\u70b9\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u3002C++\u64c5\u957f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u57fa\u4e8e\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u56e0\u800cC++\u5c31\u9002\u5e94\u7684\u95ee\u9898\u89c4\u6a21\u800c\u8bba\uff0c\u5927\u5c0f\u7531\u4e4b\u3002 C++\u4e0d\u4ec5\u62e5\u6709\u8ba1\u7b97\u673a\u9ad8\u6548\u8fd0\u884c\u7684\u5b9e\u7528\u6027\u7279\u5f81\uff0c\u540c\u65f6\u8fd8\u81f4\u529b\u4e8e\u63d0\u9ad8\u5927\u89c4\u6a21\u7a0b\u5e8f\u7684\u7f16\u7a0b\u8d28\u91cf\u4e0e\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u95ee\u9898\u63cf\u8ff0\u80fd\u529b\u3002","title":"C++\uff1a"},{"location":"python/python1/#java","text":"Java\u662f\u4e00\u79cd\u53ef\u4ee5\u64b0\u5199\u8de8\u5e73\u53f0\u5e94\u7528\u8f6f\u4ef6\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\uff0c\u662f\u7531Sun Microsystems\u516c\u53f8\u4e8e1995\u5e745\u6708\u63a8\u51fa\u7684Java\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u548cJava\u5e73\u53f0\uff08\u5373JavaSE, JavaEE, JavaME\uff09\u7684\u603b\u79f0\u3002Java \u6280\u672f\u5177\u6709\u5353\u8d8a\u7684\u901a\u7528\u6027\u3001\u9ad8\u6548\u6027\u3001\u5e73\u53f0\u79fb\u690d\u6027\u548c\u5b89\u5168\u6027\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e2a\u4ebaPC\u3001\u6570\u636e\u4e2d\u5fc3\u3001\u6e38\u620f\u63a7\u5236\u53f0\u3001\u79d1\u5b66\u8d85\u7ea7\u8ba1\u7b97\u673a\u3001\u79fb\u52a8\u7535\u8bdd\u548c\u4e92\u8054\u7f51\uff0c\u540c\u65f6\u62e5\u6709\u5168\u7403\u6700\u5927\u7684\u5f00\u53d1\u8005\u4e13\u4e1a\u793e\u7fa4\u3002\u5728\u5168\u7403\u4e91\u8ba1\u7b97\u548c\u79fb\u52a8\u4e92\u8054\u7f51\u7684\u4ea7\u4e1a\u73af\u5883\u4e0b\uff0cJava\u66f4\u5177\u5907\u4e86\u663e\u8457\u4f18\u52bf\u548c\u5e7f\u9614\u524d\u666f\u3002","title":"JAVA:"},{"location":"python/python1/#php","text":"PHP\uff08\u5916\u6587\u540d:PHP: Hypertext Preprocessor\uff0c\u4e2d\u6587\u540d\uff1a\u201c\u8d85\u6587\u672c\u9884\u5904\u7406\u5668\u201d\uff09\u662f\u4e00\u79cd\u901a\u7528\u5f00\u6e90\u811a\u672c\u8bed\u8a00\u3002\u8bed\u6cd5\u5438\u6536\u4e86C\u8bed\u8a00\u3001Java\u548cPerl\u7684\u7279\u70b9\uff0c\u5229\u4e8e\u5b66\u4e60\uff0c\u4f7f\u7528\u5e7f\u6cdb\uff0c\u4e3b\u8981\u9002\u7528\u4e8eWeb\u5f00\u53d1\u9886\u57df","title":"PHP:"},{"location":"python/python1/#ruby","text":"Ruby \u662f\u5f00\u6e90\u7684\uff0c\u5728Web \u4e0a\u514d\u8d39\u63d0\u4f9b\uff0c\u4f46\u9700\u8981\u4e00\u4e2a\u8bb8\u53ef\u8bc1\u3002[4] Ruby \u662f\u4e00\u79cd\u901a\u7528\u7684\u3001\u89e3\u91ca\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 Ruby \u662f\u4e00\u79cd\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\u3002 Ruby \u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e Python \u548c Perl \u7684\u670d\u52a1\u5668\u7aef\u811a\u672c\u8bed\u8a00\u3002 Ruby \u53ef\u4ee5\u7528\u6765\u7f16\u5199\u901a\u7528\u7f51\u5173\u63a5\u53e3\uff08CGI\uff09\u811a\u672c\u3002 Ruby \u53ef\u4ee5\u88ab\u5d4c\u5165\u5230\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08HTML\uff09\u3002 Ruby \u8bed\u6cd5\u7b80\u5355\uff0c\u8fd9\u4f7f\u5f97\u65b0\u7684\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u5feb\u901f\u8f7b\u677e\u5730\u5b66\u4e60 Ruby","title":"Ruby:"},{"location":"python/python1/#go","text":"Go \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u80fd\u8ba9\u6784\u9020\u7b80\u5355\u3001\u53ef\u9760\u4e14\u9ad8\u6548\u7684\u8f6f\u4ef6\u53d8\u5f97\u5bb9\u6613\u3002 Go\u662f\u4ece2007\u5e74\u672b\u7531Robert Griesemer, Rob Pike, Ken Thompson\u4e3b\u6301\u5f00\u53d1\uff0c\u540e\u6765\u8fd8\u52a0\u5165\u4e86Ian Lance Taylor, Russ Cox\u7b49\u4eba\uff0c\u5e76\u6700\u7ec8\u4e8e2009\u5e7411\u6708\u5f00\u6e90\uff0c\u57282012\u5e74\u65e9\u4e9b\u65f6\u5019\u53d1\u5e03\u4e86Go 1\u7a33\u5b9a\u7248\u672c\u3002\u73b0\u5728Go\u7684\u5f00\u53d1\u5df2\u7ecf\u662f\u5b8c\u5168\u5f00\u653e\u7684\uff0c\u5e76\u4e14\u62e5\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u793e\u533a\u3002 \u7531\u5176\u64c5\u957f\u5e76\u53d1\u7f16\u7a0b","title":"GO:"},{"location":"python/python1/#python_1","text":"Python\u662f\u4e00\u95e8\u4f18\u79c0\u7684\u7efc\u5408\u8bed\u8a00\uff0c Python\u7684\u5b97\u65e8\u662f\u7b80\u660e\u3001\u4f18\u96c5\u3001\u5f3a\u5927\uff0c\u5728\u4eba\u5de5\u667a\u80fd\u3001\u4e91\u8ba1\u7b97\u3001\u91d1\u878d\u5206\u6790\u3001\u5927\u6570\u636e\u5f00\u53d1\u3001WEB\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u8fd0\u7ef4\u3001\u6d4b\u8bd5\u7b49\u65b9\u5411\u5e94\u7528\u5e7f\u6cdb\uff0c\u5df2\u662f\u5168\u7403\u7b2c4\u5927\u6700\u6d41\u884c\u7684\u8bed\u8a00\u3002","title":"Python:"},{"location":"python/python1/#python_2","text":"\u4ecb\u7ecd python\u7684\u521b\u59cb\u4eba\u4e3a\u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff08Guido van Rossum\uff09\u30021989\u5e74\u7684\u5723\u8bde\u8282\u671f\u95f4\uff0cGuido\u5f00\u59cb\u5199\u80fd\u591f\u89e3\u91caPython\u8bed\u8a00\u8bed\u6cd5\u7684\u89e3\u91ca\u5668\u3002Python\u8fd9\u4e2a\u540d\u5b57\uff0c\u6765\u81eaGuido\u6240\u631a\u7231\u7684\u7535\u89c6\u5267Monty Python\u2019s Flying Circus\u3002\u4ed6\u5e0c\u671b\u8fd9\u4e2a\u65b0\u7684\u53eb\u505aPython\u7684\u8bed\u8a00\uff0c\u80fd\u7b26\u5408\u4ed6\u7684\u7406\u60f3\uff1a\u521b\u9020\u4e00\u79cdC\u548cshell\u4e4b\u95f4\uff0c\u529f\u80fd\u5168\u9762\uff0c\u6613\u5b66\u6613\u7528\uff0c\u53ef\u62d3\u5c55\u7684\u8bed\u8a00\u3002 \u6700\u65b0\u7684TIOBE\u6392\u884c\u699c\uff0cPython\u8d76\u8d85PHP\u5360\u636e\u7b2c4\uff0c Python\u5d07\u5c1a\u4f18\u7f8e\u3001\u6e05\u6670\u3001\u7b80\u5355\uff0c\u662f\u4e00\u4e2a\u4f18\u79c0\u5e76\u5e7f\u6cdb\u4f7f\u7528\u7684\u8bed\u8a00\u3002 Python\u53ef\u4ee5\u5e94\u7528\u4e8e\u4f17\u591a\u9886\u57df\uff0c\u5982\uff1a\u6570\u636e\u5206\u6790\u3001\u7ec4\u4ef6\u96c6\u6210\u3001\u7f51\u7edc\u670d\u52a1\u3001\u56fe\u50cf\u5904\u7406\u3001\u6570\u503c\u8ba1\u7b97\u548c\u79d1\u5b66\u8ba1\u7b97\u7b49\u4f17\u591a\u9886\u57df\u3002\u76ee\u524d\u4e1a\u5185\u51e0\u4e4e\u6240\u6709\u5927\u4e2d\u578b\u4e92\u8054\u7f51\u4f01\u4e1a\u90fd\u5728\u4f7f\u7528Python\uff0c\u5982\uff1aYoutube\u3001Dropbox\u3001BT\u3001Quora\uff08\u4e2d\u56fd\u77e5\u4e4e\uff09\u3001\u8c46\u74e3\u3001\u77e5\u4e4e\u3001Google\u3001Yahoo!\u3001Facebook\u3001NASA\u3001\u767e\u5ea6\u3001\u817e\u8baf\u3001\u6c7d\u8f66\u4e4b\u5bb6\u3001\u7f8e\u56e2\u7b49","title":"python\u4ecb\u7ecd"},{"location":"python/python1/#python_3","text":"Python\u76ee\u524d\u5df2\u652f\u6301\u6240\u6709\u4e3b\u6d41\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5728Linux,Unix,Mac\u7cfb\u7edf\u4e0a\u81ea\u5e26Python\u73af\u5883\uff0c\u5728Windows\u7cfb\u7edf\u4e0a\u9700\u8981\u5b89\u88c5\u4e00\u4e0b\uff0c\u8d85\u7b80\u5355 \u6253\u5f00\u5b98\u7f51 \u4e0b\u8f7d\u5373\u53ef\u3002","title":"python\u7684\u5b89\u88c5"},{"location":"python/python1/#python_4","text":"\u5199\u597d\u7a0b\u5e8f\u540e\u4ee5.py\u7ed3\u5c3e print ( hello world )","title":"python\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f"},{"location":"python/python1/#_4","text":"\u5982\u4f55\u5b9a\u4e49\u53d8\u91cf #\u53d8\u91cf\u540d(\u76f8\u5f53\u4e8e\u95e8\u724c\u53f7\uff0c\u6307\u5411\u503c\u6240\u5728\u7684\u7a7a\u95f4)\uff0c\u7b49\u53f7\uff0c\u53d8\u91cf\u503c name= Egon sex= male age=18 level=10 \u53d8\u91cf\u7684\u5b9a\u4e49\u89c4\u8303 #1. \u53d8\u91cf\u540d\u53ea\u80fd\u662f \u5b57\u6bcd\u3001\u6570\u5b57\u6216\u4e0b\u5212\u7ebf\u7684\u4efb\u610f\u7ec4\u5408 #2. \u53d8\u91cf\u540d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f\u6570\u5b57 #3. \u5173\u952e\u5b57\u4e0d\u80fd\u58f0\u660e\u4e3a\u53d8\u91cf\u540d[ and , as , assert , break , class , continue , def , del , elif , else , except , exec , finally , for , from , global , if , import , in , is , lambda , not , or , pass , print , raise , return , try , while , with , yield ] \u4e00\u822c\u7684\u5b9a\u4e49\u65b9\u5f0f #\u9a7c\u5cf0\u4f53 AgeOfOldboy = 56 NumberOfStudents = 80 #\u4e0b\u5212\u7ebf(\u63a8\u8350\u4f7f\u7528) age_of_oldboy = 56 number_of_students = 80 \u5b9a\u4e49\u53d8\u91cf\u4f1a\u6709\uff1aid\uff0ctype\uff0cvalue #1 \u7b49\u53f7\u6bd4\u8f83\u7684\u662fvalue\uff0c #2 is\u6bd4\u8f83\u7684\u662fid #\u5f3a\u8c03\uff1a #1. id\u76f8\u540c\uff0c\u610f\u5473\u7740type\u548cvalue\u5fc5\u5b9a\u76f8\u540c #2. value\u76f8\u540ctype\u80af\u5b9a\u76f8\u540c\uff0c\u4f46id\u53ef\u80fd\u4e0d\u540c,\u5982\u4e0b x= Info Egon:18 y= Info Egon:18 id(x) 4376607152 id(y) 4376607408 x == y True x is y False \u5e38\u91cf \u5e38\u91cf\u5373\u6307\u4e0d\u53d8\u7684\u91cf\uff0c\u5982pai 3.141592653..., \u6216\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6539\u53d8\u7684\u91cf \u4e3e\u4f8b\uff0c\u5047\u5982\u8001\u7537\u5b69\u8001\u5e08\u7684\u5e74\u9f84\u4f1a\u53d8\uff0c\u90a3\u8fd9\u5c31\u662f\u4e2a\u53d8\u91cf\uff0c\u4f46\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4ed6\u7684\u5e74\u9f84\u4e0d\u4f1a\u53d8\u4e86\uff0c\u90a3\u5c31\u662f\u5e38\u91cf\u3002\u5728Python\u4e2d\u6ca1\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u8bed\u6cd5\u4ee3\u8868\u5e38\u91cf\uff0c\u7a0b\u5e8f\u5458\u7ea6\u5b9a\u4fd7\u6210\u7528\u53d8\u91cf\u540d\u5168\u90e8\u5927\u5199\u4ee3\u8868\u5e38\u91cf AGE_OF_OLDBOY = 56","title":"\u53d8\u91cf"},{"location":"python/python1/#_5","text":"python2\u4e0epython3\u4e2d\u6709\u4e00\u70b9\u533a\u522b #\u5728python3\u4e2d input\uff1a\u7528\u6237\u8f93\u5165\u4efb\u4f55\u503c\uff0c\u90fd\u5b58\u6210\u5b57\u7b26\u4e32\u7c7b\u578b #\u5728python2\u4e2d input\uff1a\u7528\u6237\u8f93\u5165\u4ec0\u4e48\u7c7b\u578b\uff0c\u5c31\u5b58\u6210\u4ec0\u4e48\u7c7b\u578b raw_input\uff1a\u7b49\u4e8epython3\u7684input \u6ce8\u91ca \u4ee3\u7801\u6ce8\u91ca\u5206\u5355\u884c\u548c\u591a\u884c\u6ce8\u91ca\uff0c \u5355\u884c\u6ce8\u91ca\u7528#\uff0c\u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u7528\u4e09\u5bf9\u53cc\u5f15\u53f7 #1. \u4e0d\u7528\u5168\u90e8\u52a0\u6ce8\u91ca\uff0c\u53ea\u9700\u8981\u5728\u81ea\u5df1\u89c9\u5f97\u91cd\u8981\u6216\u4e0d\u597d\u7406\u89e3\u7684\u90e8\u5206\u52a0\u6ce8\u91ca\u5373\u53ef #2. \u6ce8\u91ca\u53ef\u4ee5\u7528\u4e2d\u6587\u6216\u82f1\u6587\uff0c\u4f46\u4e0d\u8981\u7528\u62fc\u97f3 \u6587\u4ef6\u5934 #!/usr/bin/env python # -*- coding: utf-8 -*-","title":"\u7a0b\u5e8f\u4e0e\u7528\u6237\u4ea4\u4e92"},{"location":"python/python1/#_6","text":"#int\u6574\u578b \u5b9a\u4e49\uff1aage=10 #age=int(10) \u7528\u4e8e\u6807\u8bc6\uff1a\u5e74\u9f84\uff0c\u7b49\u7ea7\uff0c\u8eab\u4efd\u8bc1\u53f7\uff0cqq\u53f7\uff0c\u4e2a\u6570 #float\u6d6e\u70b9\u578b \u5b9a\u4e49\uff1asalary=3.1 #salary=float(3.1) \u7528\u4e8e\u6807\u8bc6\uff1a\u5de5\u8d44\uff0c\u8eab\u9ad8\uff0c\u4f53\u91cd\uff0c \u6ce8\u610f\uff1a\u5728Python3\u91cc\u4e0d\u518d\u6709long\u7c7b\u578b\u4e86\uff0c\u5168\u90fd\u662fint py3---- a=2**65 print (type(a)) class int py2---- a=2**65 print (type(a)) class long \u5b57\u7b26\u4e32 \u52a0\u5f15\u53f7\u7684\u5b57\u7b26 \u5b9a\u4e49\uff1aname= egon #name=str( egon ) \u7528\u4e8e\u6807\u8bc6\uff1a\u63cf\u8ff0\u6027\u7684\u5185\u5bb9\uff0c\u5982\u59d3\u540d\uff0c\u6027\u522b\uff0c\u56fd\u7c4d\uff0c\u79cd\u65cf \u5b57\u7b26\u4e32\u7684\u7b80\u5355\u64cd\u4f5c #\u6570\u5b57\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u7b49\u8fd0\u7b97\uff0c\u5b57\u7b26\u4e32\u5462\uff1f\u8ba9\u6211\u5927\u58f0\u544a\u8bc9\u4f60\uff0c\u4e5f\u80fd\uff1fwhat ?\u662f\u7684\uff0c\u4f46\u53ea\u80fd\u8fdb\u884c \u76f8\u52a0 \u548c \u76f8\u4e58 \u8fd0\u7b97\u3002 name= egon age= 18 name+age #\u76f8\u52a0\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u62fc\u63a5 egon18 name*5 egonegonegonegonegon #\u6ce8\u610f1\uff1a\u5b57\u7b26\u4e32\u76f8\u52a0\u7684\u6548\u7387\u4e0d\u9ad8 \u5b57\u7b26\u4e321+\u5b57\u7b26\u4e323\uff0c\u5e76\u4e0d\u4f1a\u5728\u5b57\u7b26\u4e321\u7684\u57fa\u7840\u4e0a\u52a0\u5b57\u7b26\u4e322\uff0c\u800c\u662f\u7533\u8bf7\u4e00\u4e2a\u5168\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u5165\u5b57\u7b26\u4e321\u548c\u5b57\u7b26\u4e323\uff0c\u76f8\u5f53\u5b57\u7b26\u4e321\u4e0e\u5b57\u7b26\u4e323\u7684\u7a7a\u95f4\u88ab\u590d\u5236\u4e86\u4e00\u6b21\uff0c #\u6ce8\u610f2\uff1a==\u53ea\u80fd\u5b57\u7b26\u4e32\u52a0\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u5b57\u7b26\u4e32\u52a0\u5176\u4ed6\u7c7b\u578b==","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"python/python1/#_7","text":"#\u5728[]\u5185\u7528\u9017\u53f7\u5206\u9694\uff0c\u53ef\u4ee5\u5b58\u653en\u4e2a\u4efb\u610f\u7c7b\u578b\u7684\u503c \u5b9a\u4e49\uff1astudents=[ egon , alex , wupeiqi ,] #students=list([ egon , alex , wupeiqi ,]) \u7528\u4e8e\u6807\u8bc6\uff1a\u5b58\u50a8\u591a\u4e2a\u503c\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4e00\u4e2a\u4eba\u6709\u591a\u4e2a\u7231\u597d \u5b57\u5178 name={ name : zdk , age :19} \u5e03\u5c14\u503c #\u5e03\u5c14\u503c\uff0c\u4e00\u4e2aTrue\u4e00\u4e2aFalse #\u8ba1\u7b97\u673a\u4fd7\u79f0\u7535\u8111\uff0c\u5373\u6211\u4eec\u7f16\u5199\u7a0b\u5e8f\u8ba9\u8ba1\u7b97\u673a\u8fd0\u884c\u65f6\uff0c\u5e94\u8be5\u662f\u8ba9\u8ba1\u7b97\u673a\u65e0\u9650\u63a5\u8fd1\u4eba\u8111\uff0c\u6216\u8005\u8bf4\u4eba\u8111\u80fd\u5e72\u4ec0\u4e48\uff0c\u8ba1\u7b97\u673a\u5c31\u5e94\u8be5\u80fd\u5e72\u4ec0\u4e48\uff0c\u4eba\u8111\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u6570\u636e\u8fd0\u884c\u4e0e\u903b\u8f91\u8fd0\u7b97\uff0c\u6b64\u5904\u7684\u5e03\u5c14\u7c7b\u578b\u5c31\u6a21\u62df\u4eba\u7684\u903b\u8f91\u8fd0\u884c\uff0c\u5373\u5224\u65ad\u4e00\u4e2a\u6761\u4ef6\u6210\u7acb\u65f6\uff0c\u7528True\u6807\u8bc6\uff0c\u4e0d\u6210\u7acb\u5219\u7528False\u6807\u8bc6 a=3 b=5 a b #\u4e0d\u6210\u7acb\u5c31\u662fFalse,\u5373\u5047 False a b #\u6210\u7acb\u5c31\u662fTrue, \u5373\u771f True \u5e03\u5c14\u7c7b\u578b \uff01\uff01\uff01\uff01\uff01\uff01 #\u6240\u6709\u6570\u636e\u7c7b\u578b\u90fd\u81ea\u5e26\u5e03\u5c14\u503c 1\u3001None\uff0c0\uff0c\u7a7a\uff08\u7a7a\u5b57\u7b26\u4e32\uff0c\u7a7a\u5217\u8868\uff0c\u7a7a\u5b57\u5178\u7b49\uff09\u4e09\u79cd\u60c5\u51b5\u4e0b\u5e03\u5c14\u503c\u4e3aFalse 2\u3001\u5176\u4f59\u5747\u4e3a\u771f \u683c\u5f0f\u5316\u8f93\u51fa #%s\u5b57\u7b26\u4e32\u5360\u4f4d\u7b26\uff1a\u53ef\u4ee5\u63a5\u6536\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u63a5\u6536\u6570\u5b57 print( My name is %s,my age is %s %( egon ,18)) #%d\u6570\u5b57\u5360\u4f4d\u7b26\uff1a\u53ea\u80fd\u63a5\u6536\u6570\u5b57 print( My name is %s,my age is %d %( egon ,18)) print( My name is %s,my age is %d %( egon , 18 )) #\u62a5\u9519","title":"\u5217\u8868"},{"location":"python/python1/#_8","text":"\u903b\u8f91\u8fd0\u7b97 #\u4e09\u8005\u7684\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u5206\u522b\u662f\uff1anot\uff0cor\uff0cand 3 4 and 4 3 or 1==3 and x == x or 3 3 False #\u6700\u597d\u4f7f\u7528\u62ec\u53f7\u6765\u533a\u522b\u4f18\u5148\u7ea7\uff0c\u5176\u5b9e\u610f\u4e49\u4e0e\u4e0a\u9762\u7684\u4e00\u6837 (3 4 and 4 3) or ((1==3 and x == x ) or 3 3) False \u8eab\u4efd\u8fd0\u7b97\u7b26 #is\u6bd4\u8f83\u7684\u662fid #\u800c==\u6bd4\u8f83\u7684\u662f\u503c","title":"\u57fa\u672c\u8fd0\u7b97\u7b26"},{"location":"python/python1/#if-else","text":"if else if elif else","title":"\u6d41\u7a0b\u63a7\u5236\u4e4bif-else"},{"location":"python/python1/#while","text":"break\u4e0econtinue #break\u7528\u4e8e\u9000\u51fa\u672c\u5c42\u5faa\u73af while True: print 123 break print 456 #continue\u7528\u4e8e\u9000\u51fa\u672c\u6b21\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af while True: print 123 continue print 456 while+else #\u4e0e\u5176\u5b83\u8bed\u8a00else \u4e00\u822c\u53ea\u4e0eif \u642d\u914d\u4e0d\u540c\uff0c\u5728Python \u4e2d\u8fd8\u6709\u4e2awhile ...else \u8bed\u53e5\uff0cwhile \u540e\u9762\u7684else \u4f5c\u7528\u662f\u6307\uff0c\u5f53while \u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\uff0c\u4e2d\u95f4\u6ca1\u6709\u88abbreak \u4e2d\u6b62\u7684\u8bdd\uff0c\u5c31\u4f1a\u6267\u884celse\u540e\u9762\u7684\u8bed\u53e5 count = 0 while count = 5 : count += 1 print( Loop ,count) else: print( \u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u5566 ) print( -----out of while loop ------ )","title":"\u6d41\u7a0b\u63a7\u5236\u4e4bwhile"},{"location":"python/python1/#for","text":"for i in range(10): print (i)","title":"\u6d41\u7a0b\u63a7\u5236\u4e4bfor\u5faa\u73af"},{"location":"python/python2/","text":"python\u57fa\u7840\u4e4b\u6838\u5fc3\u98ce\u683c \u8bed\u53e5\u4e0e\u8bed\u6cd5 \uff03\uff1a\u6ce8\u91ca :\u8f6c\u8bd1\u56de\u8f66\uff0c\u7ee7\u7eed\u4e0a\u4e00\u884c\uff0c\u5728\u4e00\u884c\u8bed\u53e5\u8f83\u957f\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u5176\u6765\u5207\u5206\u6210\u591a\u884c\uff0c\u56e0\u5176\u53ef\u8bfb\u6027\u5dee\u6240\u4ee5\u4e0d\u5efa\u8bae\u4f7f\u7528 \uff1b\uff1a\u5c06\u4e24\u4e2a\u8bed\u53e5\u8fde\u63a5\u5230\u4e00\u884c\uff0c\u53ef\u8bfb\u6027\u5dee\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 \uff1a\uff1a\u5c06\u4ee3\u7801\u7684\u5934\u548c\u4f53\u5206\u5f00 \u8bed\u53e5\uff08\u4ee3\u7801\u5757\uff09\u7528\u7f29\u8fdb\u65b9\u5f0f\u4f53\u73b0\u4e0d\u540c\u7684\u4ee3\u7801\u7ea7\u522b\uff0c\u5efa\u8bae\u91c7\u75284\u4e2a\u7a7a\u683c\uff08\u4e0d\u8981\u4f7f\u7528tab\uff09 python\u6587\u4ef6\u4ee5\u6a21\u5757\u7684\u65b9\u5f0f\u7ec4\u7ec7\uff0c\u7f16\u5199\u4e00\u4e2a.py\u7ed3\u5c3e\u7684\u6587\u4ef6\u5b9e\u9645\u4e0a\u5c31\u5199\u4e86\u4e00\u4e2a\u6a21\u5757 \u53d8\u91cf\u5b9a\u4e49\u4e0e\u8d4b\u503c a\uff1d1\uff1a1\u4e3a\u5185\u5b58\u53d8\u91cf\u5b58\u653e\u4e8e\u5185\u5b58\u4e2d\uff0ca\u4e3a\u53d8\u91cf\u7684\u5f15\u7528\uff0cpython\u4e3a\u52a8\u6001\u8bed\u8a00\uff0c\u53d8\u91cf\u53ca\u5176\u7c7b\u578b\u5747\u65e0\u9700\u4e8b\u5148\u58f0\u660e\u7c7b\u578b \u4e0ec\u7684\u533a\u522b\uff1aa\uff1d1\u65e0\u8fd4\u56de\u503c \u6ce8\uff1a c\u8bed\u8a00\u53d8\u91cf\u58f0\u660e\u5fc5\u987b\u4f4d\u4e8e\u4ee3\u7801\u6700\u5f00\u59cb\uff0c\u800c\u4e14\u8981\u5728\u6240\u6709\u8bed\u53e5\u4e4b\u524d c\uff0b\uff0b,java\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u662f\u5fc5\u987b\u58f0\u660e\u53d8\u91cf\u540d\u5b57\u548c\u7c7b\u578b python\u4e5f\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u662f\u53d8\u91cf\u5728\u88ab\u5b9a\u4e49\u65f6\uff0c\u89e3\u91ca\u5668\u4f1a\u6839\u636e\u7b49\u5f0f\u53f3\u4fa7\u7684\u503c\u6765\u51b3\u5b9a\u5176\u7c7b\u578b \u53d8\u91cf\u5fc5\u987b\u5148\u8d4b\u503c\uff0c\u624d\u53ef\u4f7f\u7528 \u5185\u5b58\u7ba1\u7406 \u5185\u5b58\u7ba1\u7406 \u53d8\u91cf\u65e0\u987b\u6307\u5b9a\u7c7b\u578b \u7a0b\u5e8f\u5458\u65e0\u987b\u5173\u5fc3\u5185\u5b58\u7ba1\u7406 \u53d8\u91cf\u4f1a\u88ab\u81ea\u52a8\u56de\u6536 del\u80fd\u591f\u76f4\u63a5\u91ca\u653e\u5185\u5b58\u5bf9\u8c61(\u51cf\u5c11\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570) \u5f15\u7528\u8ba1\u6570 \u589e\u52a0\u5f15\u7528\u8ba1\u6570 \u5bf9\u8c61\u88ab\u521b\u5efa\u5e76\u5c06\u5176\u5f15\u7528\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8ba\uff1d1\uff09 \u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u53c8\u8d4b\u503c\u7ed9\u5176\u5b83\u53d8\u91cf\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8bb\uff1da\uff09 \u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u88ab\u51fd\u6570\u8c03\u7528\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8bint(a) \u5bf9\u8c61\u6210\u4e3a\u5bb9\u5668\u5bf9\u8c61\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8blist_test=['alex','z',a]\uff09 \u51cf\u5c11\u5f15\u7528\u8ba1\u6570 a\u4f5c\u4e3a\u88ab\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\uff0c\u5728\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u5305\u62eca\u5728\u5185\u7684\u6240\u6709\u5c40\u90e8\u53d8\u91cf\u5747\u4f1a\u88ab\u9500\u6bc1\uff0c\u5f15\u7528\u8ba1\u6570\u51cf1 \u53d8\u91cf\u88ab\u8d4b\u503c\u7ed9\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\uff0c\u539f\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u51cf1\uff08\u4f8bb\uff1d2\uff0c1\u8fd9\u4e00\u5185\u5b58\u5bf9\u8c61\u7684\u5f15\u7528\u53ea\u5269a\uff09 \u4f7f\u7528del\u5220\u9664\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5f15\u7528\u8ba1\u6570\u51cf1\uff08\u4f8bdel a\uff09 a\u4f5c\u4e3a\u5bb9\u5668list_test\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u88ab\u6e05\u9664,\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\uff08\u4f8blist_test.remove(a)\uff09 \u5bb9\u5668\u672c\u8eab\u88ab\u9500\u6bc1\uff08\u4f8bdel list_test\uff09 \u6ce8\u610f\uff1apython\u5185\u5b58\u56de\u6536\u4ea4\u7ed9\u4e00\u6bb5\u72ec\u7acb\u7684\u4ee3\u7801\u5373\u5783\u573e\u56de\u6536\u5668\uff08\u5305\u542b\u5f15\u7528\u8ba1\u6570\u5668\u548c\u5faa\u73af\u5783\u573e\u6536\u96c6\u5668\uff09\uff0c\u5f15\u7528\u8ba1\u6570\u5728\u5f52\u96f6\u65f6\u5e76\u4e0d\u4f1a\u7acb\u5373\u6e05\u9664\uff08\u53ef\u80fd\u6709\u5faa\u73af\u8c03\u7528\uff09 \u4e0d\u5fc5\u7ea0\u7ed3\u5faa\u73af\u5f15\u7528\u6536\u96c6\uff0c\u53ea\u9700\u8bb0\u4f4f\u5783\u573e\u56de\u6536\u5668\u5e2e\u4f60\u81ea\u52a8\u6e05\u7406\u5185\u5b58\u3002 \u7b80\u5355\u4f8b\u5b50 x\uff1d1 \uff03\u521b\u5efa\u5185\u5b58\u53d8\u91cf1\uff0c\u5c06\u53d8\u91cf1\u7684\u5f15\u7528\u4f20\u7ed9x\uff0c\u6b64\u523b1\u7684\u5f15\u7528\u8ba1\u6570\u4e3a1 y\uff1dx \uff031\u7684\u5f15\u7528\u8ba1\u6570\u589e\u52a0\u52302 y\uff1d2 \uff03\u521b\u5efa\u65b0\u7684\u5185\u5b58\u53d8\u91cf2\uff0c\u5c06\u53d8\u91cf2\u7684\u5f15\u7528\u4f20\u7ed9y\uff0c\u539f\u672c\u6307\u54111\u7684y\uff0c\u6b64\u523b\u7ed9\u4e862\uff0c\u6240\u4ee51\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\u5230\u4e861 del x \uff03\u5220\u9664\u4e86\u5185\u5b58\u5bf9\u8c611\u7684\u5f15\u7528x\uff0c\u6b64\u523b1\u518d\u65e0\u5f15\u7528\uff0c\u6b64\u523b\u5b83\u5c31\u6210\u4e86python\u89e3\u91ca\u5668\u56de\u6536\u7684\u76ee\u6807 python\u5bf9\u8c61 python\u4e2d\u4f7f\u7528\u5bf9\u8c61\u6a21\u578b\u6765\u5b58\u50a8\u6570\u636e\uff0c\u7528\u6765\u751f\u6210\u6570\u636e\u7c7b\u578b\u7684\u5de5\u5382\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u7c7b\uff0c\u65b0\u5efa\u6570\u636e\u7684\u7ed3\u679c\u672c\u8d28\u662f\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 \u5bf9\u8c61\u6709\u4e09\u79cd\u7279\u6027 \u8eab\u4efd\uff1a\u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u7528id()\u786e\u8ba4\uff0cid\u76f8\u540c\u7684\u5c31\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 \u7c7b\u578b\uff1a\u53ef\u4ee5\u7528type()\u67e5\u770b\uff0c\u8fd4\u56de\u503c\u7684type\u4e5f\u662f\u5bf9\u8c61 \u503c \u6807\u8bc6\u7b26 \u5b9a\u4e49\uff1a\u5141\u8bb8\u4f5c\u4e3a\u540d\u5b57\u7684\u6709\u6548\u5b57\u7b26\u4e32\u96c6\u5408 \u540d\u5b57\u5fc5\u987b\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u53ef\u8bfb\u6027\u597d \u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf(_) \u5269\u4e0b\u7684\u5b57\u7b26\u53ef\u4ee5\u662f\u5b57\u6bcd\u548c\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf \u5927\u5c0f\u5199\u654f\u611f \u4e24\u79cd\u98ce\u683c\uff1aconn_obj\u6216ConnObj \u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\uff0c\u4e0d\u80fd\u4f7f\u7528\u5185\u5efa \u4e00\u4e9b\u5173\u952e\u5b57\u5217\u8868 \u5173\u952e\u5b57\u5217\u8868 \u5185\u5efa\uff1a\u7531\u89e3\u91ca\u5668\u81ea\u52a8\u5bfc\u5165(\u63d0\u4f9b\u57fa\u672c\u529f\u80fd)\uff0c\u53ef\u4ee5\u770b\u4f5c\u5168\u5c40\u53d8\u91cf\uff0c \u4e13\u7528\u4e0b\u5212\u7ebf\u6807\u8bc6\u7b26 _xxx:\u4e0d\u80fd\u7528from module import *\u5bfc\u5165 xxx :\u7cfb\u7edf\u5b9a\u4e49\u540d\u5b57 __xxx:\u7c7b\u4e2d\u79c1\u6709\u53d8\u91cf \u4e0b\u5212\u7ebf\u5bf9\u4e8e\u89e3\u91ca\u5668\u6765\u8bf4\u6709\u7279\u6b8a\u610f\u4e49\uff0c\u800c\u4e14\u662f\u5185\u5efa\u6807\u8bc6\u7b26\u6240\u4f7f\u7528\u7b26\u53f7\uff0c\u4e0d\u5efa\u8bae\u81ea\u5b9a\u4e49\u53d8\u91cf\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934 \u4f46\u662f\u5982\u679c\u662f\u7c7b\u4e2d\u7684\u79c1\u6709\u53d8\u91cf\uff0c__xxx\u5c06\u4f1a\u662f\u4e00\u4e2a\u597d\u4e60\u60ef \u8865\u5145\uff1a \u7cfb\u7edf\u53d8\u91cf__name__\u4f1a\u6839\u636epython\u6587\u4ef6\u88ab\u52a0\u8f7d\u65b9\u5f0f\u7684\u4e0d\u540c\u5f97\u51fa\u4e0d\u540c\u7684\u503c python\u6587\u4ef6\u88ab\u5f53\u4f5c\u6a21\u5757\u5bfc\u5165\uff1a name =\u6a21\u5757\u540d\u6216\u8005\u6587\u4ef6\u540d python\u6587\u4ef6\u88ab\u6267\u884c: name =' main ' \u5728\u6211\u4eec\u4f7f\u7528python\u7f16\u5199\u4e00\u4e2a\u8f6f\u4ef6\u65f6\uff0c\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u4e2d\u5305\u542b\u5927\u91cf\u9876\u7ea7\u4ee3\u7801\uff08\u5c31\u662f\u6ca1\u6709\u7f29\u8fdb\u7684\u4ee3\u7801\uff0c python\u89e3\u91ca\u5668\u8bfb\u53d6\u5230\u9876\u7ea7\u4ee3\u7801\u4f1a\u7acb\u5373\u6267\u884c\uff09\uff0c\u5176\u4ed6.py\u6587\u4ef6\u5e94\u8be5\u53ea\u6709\u5c11\u91cf\u9876\u7ea7\u4ee3\u7801\uff0c\u6240\u6709\u529f\u80fd\u90fd\u5e94\u8be5\u5c01\u88c5 \u5728\u51fd\u6570\u6216\u7c7b\u4e2d \u901a\u5e38\u5728\u6587\u4ef6\u7ed3\u5c3e\u7ed3\u5408__name__\u53d8\u91cf\uff0c\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801 \u7f16\u5199\u6a21\u5757\u57fa\u672c\u98ce\u683c \u6807\u9898 \u6587\u6863\u6ce8\u91ca \u6a21\u5757\u5bfc\u5165 \u53d8\u91cf\u5b9a\u4e49 \u7c7b\u5b9a\u4e49\u8bed\u53e5 \u51fd\u6570\u5b9a\u4e49\u8bed\u53e5 \u4e3b\u7a0b\u5e8f \u6d4b\u8bd5\u4ee3\u7801","title":"2. python\u57fa\u7840\u4e4b\u6838\u5fc3\u98ce\u683c"},{"location":"python/python2/#python","text":"","title":"python\u57fa\u7840\u4e4b\u6838\u5fc3\u98ce\u683c"},{"location":"python/python2/#_1","text":"\uff03\uff1a\u6ce8\u91ca :\u8f6c\u8bd1\u56de\u8f66\uff0c\u7ee7\u7eed\u4e0a\u4e00\u884c\uff0c\u5728\u4e00\u884c\u8bed\u53e5\u8f83\u957f\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u5176\u6765\u5207\u5206\u6210\u591a\u884c\uff0c\u56e0\u5176\u53ef\u8bfb\u6027\u5dee\u6240\u4ee5\u4e0d\u5efa\u8bae\u4f7f\u7528 \uff1b\uff1a\u5c06\u4e24\u4e2a\u8bed\u53e5\u8fde\u63a5\u5230\u4e00\u884c\uff0c\u53ef\u8bfb\u6027\u5dee\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 \uff1a\uff1a\u5c06\u4ee3\u7801\u7684\u5934\u548c\u4f53\u5206\u5f00 \u8bed\u53e5\uff08\u4ee3\u7801\u5757\uff09\u7528\u7f29\u8fdb\u65b9\u5f0f\u4f53\u73b0\u4e0d\u540c\u7684\u4ee3\u7801\u7ea7\u522b\uff0c\u5efa\u8bae\u91c7\u75284\u4e2a\u7a7a\u683c\uff08\u4e0d\u8981\u4f7f\u7528tab\uff09 python\u6587\u4ef6\u4ee5\u6a21\u5757\u7684\u65b9\u5f0f\u7ec4\u7ec7\uff0c\u7f16\u5199\u4e00\u4e2a.py\u7ed3\u5c3e\u7684\u6587\u4ef6\u5b9e\u9645\u4e0a\u5c31\u5199\u4e86\u4e00\u4e2a\u6a21\u5757","title":"\u8bed\u53e5\u4e0e\u8bed\u6cd5"},{"location":"python/python2/#_2","text":"a\uff1d1\uff1a1\u4e3a\u5185\u5b58\u53d8\u91cf\u5b58\u653e\u4e8e\u5185\u5b58\u4e2d\uff0ca\u4e3a\u53d8\u91cf\u7684\u5f15\u7528\uff0cpython\u4e3a\u52a8\u6001\u8bed\u8a00\uff0c\u53d8\u91cf\u53ca\u5176\u7c7b\u578b\u5747\u65e0\u9700\u4e8b\u5148\u58f0\u660e\u7c7b\u578b \u4e0ec\u7684\u533a\u522b\uff1aa\uff1d1\u65e0\u8fd4\u56de\u503c \u6ce8\uff1a c\u8bed\u8a00\u53d8\u91cf\u58f0\u660e\u5fc5\u987b\u4f4d\u4e8e\u4ee3\u7801\u6700\u5f00\u59cb\uff0c\u800c\u4e14\u8981\u5728\u6240\u6709\u8bed\u53e5\u4e4b\u524d c\uff0b\uff0b,java\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u662f\u5fc5\u987b\u58f0\u660e\u53d8\u91cf\u540d\u5b57\u548c\u7c7b\u578b python\u4e5f\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u58f0\u660e\u53d8\u91cf\uff0c\u4f46\u662f\u53d8\u91cf\u5728\u88ab\u5b9a\u4e49\u65f6\uff0c\u89e3\u91ca\u5668\u4f1a\u6839\u636e\u7b49\u5f0f\u53f3\u4fa7\u7684\u503c\u6765\u51b3\u5b9a\u5176\u7c7b\u578b \u53d8\u91cf\u5fc5\u987b\u5148\u8d4b\u503c\uff0c\u624d\u53ef\u4f7f\u7528","title":"\u53d8\u91cf\u5b9a\u4e49\u4e0e\u8d4b\u503c"},{"location":"python/python2/#_3","text":"\u5185\u5b58\u7ba1\u7406 \u53d8\u91cf\u65e0\u987b\u6307\u5b9a\u7c7b\u578b \u7a0b\u5e8f\u5458\u65e0\u987b\u5173\u5fc3\u5185\u5b58\u7ba1\u7406 \u53d8\u91cf\u4f1a\u88ab\u81ea\u52a8\u56de\u6536 del\u80fd\u591f\u76f4\u63a5\u91ca\u653e\u5185\u5b58\u5bf9\u8c61(\u51cf\u5c11\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570) \u5f15\u7528\u8ba1\u6570 \u589e\u52a0\u5f15\u7528\u8ba1\u6570 \u5bf9\u8c61\u88ab\u521b\u5efa\u5e76\u5c06\u5176\u5f15\u7528\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8ba\uff1d1\uff09 \u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u53c8\u8d4b\u503c\u7ed9\u5176\u5b83\u53d8\u91cf\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8bb\uff1da\uff09 \u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u88ab\u51fd\u6570\u8c03\u7528\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8bint(a) \u5bf9\u8c61\u6210\u4e3a\u5bb9\u5668\u5bf9\u8c61\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5f15\u7528\u8ba1\u6570\u52a01\uff08\u4f8blist_test=['alex','z',a]\uff09 \u51cf\u5c11\u5f15\u7528\u8ba1\u6570 a\u4f5c\u4e3a\u88ab\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\uff0c\u5728\u51fd\u6570\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u5305\u62eca\u5728\u5185\u7684\u6240\u6709\u5c40\u90e8\u53d8\u91cf\u5747\u4f1a\u88ab\u9500\u6bc1\uff0c\u5f15\u7528\u8ba1\u6570\u51cf1 \u53d8\u91cf\u88ab\u8d4b\u503c\u7ed9\u53e6\u5916\u4e00\u4e2a\u5bf9\u8c61\uff0c\u539f\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u51cf1\uff08\u4f8bb\uff1d2\uff0c1\u8fd9\u4e00\u5185\u5b58\u5bf9\u8c61\u7684\u5f15\u7528\u53ea\u5269a\uff09 \u4f7f\u7528del\u5220\u9664\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5f15\u7528\u8ba1\u6570\u51cf1\uff08\u4f8bdel a\uff09 a\u4f5c\u4e3a\u5bb9\u5668list_test\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u88ab\u6e05\u9664,\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\uff08\u4f8blist_test.remove(a)\uff09 \u5bb9\u5668\u672c\u8eab\u88ab\u9500\u6bc1\uff08\u4f8bdel list_test\uff09 \u6ce8\u610f\uff1apython\u5185\u5b58\u56de\u6536\u4ea4\u7ed9\u4e00\u6bb5\u72ec\u7acb\u7684\u4ee3\u7801\u5373\u5783\u573e\u56de\u6536\u5668\uff08\u5305\u542b\u5f15\u7528\u8ba1\u6570\u5668\u548c\u5faa\u73af\u5783\u573e\u6536\u96c6\u5668\uff09\uff0c\u5f15\u7528\u8ba1\u6570\u5728\u5f52\u96f6\u65f6\u5e76\u4e0d\u4f1a\u7acb\u5373\u6e05\u9664\uff08\u53ef\u80fd\u6709\u5faa\u73af\u8c03\u7528\uff09 \u4e0d\u5fc5\u7ea0\u7ed3\u5faa\u73af\u5f15\u7528\u6536\u96c6\uff0c\u53ea\u9700\u8bb0\u4f4f\u5783\u573e\u56de\u6536\u5668\u5e2e\u4f60\u81ea\u52a8\u6e05\u7406\u5185\u5b58\u3002 \u7b80\u5355\u4f8b\u5b50 x\uff1d1 \uff03\u521b\u5efa\u5185\u5b58\u53d8\u91cf1\uff0c\u5c06\u53d8\u91cf1\u7684\u5f15\u7528\u4f20\u7ed9x\uff0c\u6b64\u523b1\u7684\u5f15\u7528\u8ba1\u6570\u4e3a1 y\uff1dx \uff031\u7684\u5f15\u7528\u8ba1\u6570\u589e\u52a0\u52302 y\uff1d2 \uff03\u521b\u5efa\u65b0\u7684\u5185\u5b58\u53d8\u91cf2\uff0c\u5c06\u53d8\u91cf2\u7684\u5f15\u7528\u4f20\u7ed9y\uff0c\u539f\u672c\u6307\u54111\u7684y\uff0c\u6b64\u523b\u7ed9\u4e862\uff0c\u6240\u4ee51\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\u5230\u4e861 del x \uff03\u5220\u9664\u4e86\u5185\u5b58\u5bf9\u8c611\u7684\u5f15\u7528x\uff0c\u6b64\u523b1\u518d\u65e0\u5f15\u7528\uff0c\u6b64\u523b\u5b83\u5c31\u6210\u4e86python\u89e3\u91ca\u5668\u56de\u6536\u7684\u76ee\u6807","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"python/python2/#python_1","text":"python\u4e2d\u4f7f\u7528\u5bf9\u8c61\u6a21\u578b\u6765\u5b58\u50a8\u6570\u636e\uff0c\u7528\u6765\u751f\u6210\u6570\u636e\u7c7b\u578b\u7684\u5de5\u5382\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u7c7b\uff0c\u65b0\u5efa\u6570\u636e\u7684\u7ed3\u679c\u672c\u8d28\u662f\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61 \u5bf9\u8c61\u6709\u4e09\u79cd\u7279\u6027 \u8eab\u4efd\uff1a\u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u7528id()\u786e\u8ba4\uff0cid\u76f8\u540c\u7684\u5c31\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 \u7c7b\u578b\uff1a\u53ef\u4ee5\u7528type()\u67e5\u770b\uff0c\u8fd4\u56de\u503c\u7684type\u4e5f\u662f\u5bf9\u8c61 \u503c","title":"python\u5bf9\u8c61"},{"location":"python/python2/#_4","text":"\u5b9a\u4e49\uff1a\u5141\u8bb8\u4f5c\u4e3a\u540d\u5b57\u7684\u6709\u6548\u5b57\u7b26\u4e32\u96c6\u5408 \u540d\u5b57\u5fc5\u987b\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u53ef\u8bfb\u6027\u597d \u9996\u5b57\u6bcd\u5fc5\u987b\u662f\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf(_) \u5269\u4e0b\u7684\u5b57\u7b26\u53ef\u4ee5\u662f\u5b57\u6bcd\u548c\u6570\u5b57\u6216\u8005\u4e0b\u5212\u7ebf \u5927\u5c0f\u5199\u654f\u611f \u4e24\u79cd\u98ce\u683c\uff1aconn_obj\u6216ConnObj \u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\uff0c\u4e0d\u80fd\u4f7f\u7528\u5185\u5efa \u4e00\u4e9b\u5173\u952e\u5b57\u5217\u8868 \u5173\u952e\u5b57\u5217\u8868 \u5185\u5efa\uff1a\u7531\u89e3\u91ca\u5668\u81ea\u52a8\u5bfc\u5165(\u63d0\u4f9b\u57fa\u672c\u529f\u80fd)\uff0c\u53ef\u4ee5\u770b\u4f5c\u5168\u5c40\u53d8\u91cf\uff0c","title":"\u6807\u8bc6\u7b26"},{"location":"python/python2/#_5","text":"_xxx:\u4e0d\u80fd\u7528from module import *\u5bfc\u5165 xxx :\u7cfb\u7edf\u5b9a\u4e49\u540d\u5b57 __xxx:\u7c7b\u4e2d\u79c1\u6709\u53d8\u91cf \u4e0b\u5212\u7ebf\u5bf9\u4e8e\u89e3\u91ca\u5668\u6765\u8bf4\u6709\u7279\u6b8a\u610f\u4e49\uff0c\u800c\u4e14\u662f\u5185\u5efa\u6807\u8bc6\u7b26\u6240\u4f7f\u7528\u7b26\u53f7\uff0c\u4e0d\u5efa\u8bae\u81ea\u5b9a\u4e49\u53d8\u91cf\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934 \u4f46\u662f\u5982\u679c\u662f\u7c7b\u4e2d\u7684\u79c1\u6709\u53d8\u91cf\uff0c__xxx\u5c06\u4f1a\u662f\u4e00\u4e2a\u597d\u4e60\u60ef \u8865\u5145\uff1a \u7cfb\u7edf\u53d8\u91cf__name__\u4f1a\u6839\u636epython\u6587\u4ef6\u88ab\u52a0\u8f7d\u65b9\u5f0f\u7684\u4e0d\u540c\u5f97\u51fa\u4e0d\u540c\u7684\u503c python\u6587\u4ef6\u88ab\u5f53\u4f5c\u6a21\u5757\u5bfc\u5165\uff1a name =\u6a21\u5757\u540d\u6216\u8005\u6587\u4ef6\u540d python\u6587\u4ef6\u88ab\u6267\u884c: name =' main ' \u5728\u6211\u4eec\u4f7f\u7528python\u7f16\u5199\u4e00\u4e2a\u8f6f\u4ef6\u65f6\uff0c\u5e94\u8be5\u53ea\u6709\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u4e2d\u5305\u542b\u5927\u91cf\u9876\u7ea7\u4ee3\u7801\uff08\u5c31\u662f\u6ca1\u6709\u7f29\u8fdb\u7684\u4ee3\u7801\uff0c python\u89e3\u91ca\u5668\u8bfb\u53d6\u5230\u9876\u7ea7\u4ee3\u7801\u4f1a\u7acb\u5373\u6267\u884c\uff09\uff0c\u5176\u4ed6.py\u6587\u4ef6\u5e94\u8be5\u53ea\u6709\u5c11\u91cf\u9876\u7ea7\u4ee3\u7801\uff0c\u6240\u6709\u529f\u80fd\u90fd\u5e94\u8be5\u5c01\u88c5 \u5728\u51fd\u6570\u6216\u7c7b\u4e2d \u901a\u5e38\u5728\u6587\u4ef6\u7ed3\u5c3e\u7ed3\u5408__name__\u53d8\u91cf\uff0c\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801","title":"\u4e13\u7528\u4e0b\u5212\u7ebf\u6807\u8bc6\u7b26"},{"location":"python/python2/#_6","text":"\u6807\u9898 \u6587\u6863\u6ce8\u91ca \u6a21\u5757\u5bfc\u5165 \u53d8\u91cf\u5b9a\u4e49 \u7c7b\u5b9a\u4e49\u8bed\u53e5 \u51fd\u6570\u5b9a\u4e49\u8bed\u53e5 \u4e3b\u7a0b\u5e8f \u6d4b\u8bd5\u4ee3\u7801","title":"\u7f16\u5199\u6a21\u5757\u57fa\u672c\u98ce\u683c"},{"location":"python/python3/","text":"python\u57fa\u7840\u4e4b\u6570\u636e\u7c7b\u578b\u4e0e\u53d8\u91cf \u53d8\u91cf 1 \u4ec0\u4e48\u662f\u53d8\u91cf\u4e4b\u58f0\u660e\u53d8\u91cf #\u53d8\u91cf\u540d=\u53d8\u91cf\u503c age=18 gender1= male gender2= female 2 \u4e3a\u4ec0\u4e48\u8981\u6709\u53d8\u91cf \u53d8\u91cf\u4f5c\u7528\uff1a\u201c\u53d8\u201d= \u53d8\u5316\uff0c\u201c\u91cf\u201d= \u8ba1\u91cf/\u4fdd\u5b58\u72b6\u6001 \u7a0b\u5e8f\u7684\u8fd0\u884c\u672c\u8d28\u662f\u4e00\u7cfb\u5217\u72b6\u6001\u7684\u53d8\u5316\uff0c\u53d8\u91cf\u7684\u76ee\u7684\u5c31\u662f\u7528\u6765\u4fdd\u5b58\u72b6\u6001\uff0c\u53d8\u91cf\u503c\u7684\u53d8\u5316\u5c31\u6784\u6210\u4e86\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e0d\u540c\u7ed3\u679c\u3002 3 \u53d8\u91cf\u503c\u4e4b\u6570\u636e\u7c7b\u578b\u4e0e\u5bf9\u8c61 \u7a0b\u5e8f\u4e2d\u9700\u8981\u5904\u7406\u7684\u72b6\u6001\u5f88\u591a\uff0c\u4e8e\u662f\u6709\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u503c\uff0cx='egon',\u53d8\u91cf\u503c'egon'\u5b58\u653e\u4e0e\u5185\u5b58\u4e2d\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u540d\u5b57x\uff0c\u53d8\u91cf\u503c\u5373\u6211\u4eec\u8981\u5b58\u50a8\u7684\u6570\u636e\u3002 \u5728python\u4e2d\u6240\u6709\u6570\u636e\u90fd\u662f\u56f4\u7ed5\u5bf9\u8c61\u8fd9\u4e2a\u6982\u5ff5\u6765\u6784\u5efa\u7684\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e9b\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff1a\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178\u7b49 \u7a0b\u5e8f\u4e2d\u5b58\u50a8\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u5bf9\u8c61\uff0c \u4e00\u4e2a\u5bf9\u8c61\uff08\u5982a=1\uff09\u6709\uff1a \u3000\u3000\u4e00\u4e2a\u8eab\u4efd\uff08id\uff09 \u3000\u3000\u4e00\u4e2a\u7c7b\u578b(type) \u3000\u3000\u4e00\u4e2a\u503c(\u901a\u8fc7\u53d8\u91cf\u540da\u6765\u67e5\u770b) 1 \u5bf9\u8c61\u7684\u7c7b\u578b\u4e5f\u79f0\u4e3a\u5bf9\u8c61\u7684\u7c7b\u522b\uff0cpython\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u90fd\u5b9a\u5236\u4e86\u5c5e\u4e8e\u8be5\u7c7b\u578b\u7279\u6709\u7684\u65b9\u6cd5\uff0c\u6781\u5927\u5730\u65b9\u4fbf\u4e86\u5f00\u53d1\u8005\u5bf9\u6570\u636e\u7684\u5904\u7406 2 \u521b\u5efa\u67d0\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\u4e5f\u79f0\u4e3a\u521b\u5efa\u4e86\u8be5\u7c7b\u578b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5de5\u5382\u51fd\u6570\u7684\u6982\u5ff5\u6765\u6e90\u4e8e\u6b64 4 \u53ef\u53d8\u5bf9\u8c61\u4e0e\u4e0d\u53ef\u53d8\u5bf9\u8c61 \u5b9e\u4f8b\u88ab\u521b\u5efa\u540e\uff0c\u8eab\u4efd\u548c\u7c7b\u578b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c \u5982\u679c\u503c\u662f\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u5219\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61 \u5982\u679c\u503c\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u5219\u662f\u53ef\u53d8\u5bf9\u8c61 5 \u5bb9\u5668\u5bf9\u8c61 \u67d0\u4e2a\u5bf9\u8c61\u5305\u542b\u5bf9\u5176\u4ed6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5219\u79f0\u4e3a\u5bb9\u5668\u6216\u96c6\u5408 6 \u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u5c5e\u6027\u5c31\u662f\u5bf9\u8c61\u7684\u503c\uff0c\u65b9\u6cd5\u5c31\u662f\u8c03\u7528\u65f6\u5c06\u5728\u5bf9\u8c61\u672c\u8eab\u4e0a\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u4f7f\u7528.\u8fd0\u7b97\u7b26\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5982 a=3+4j a.real b=[1,2,3] b.append(4) 7 \u8eab\u4efd\u6bd4\u8f83\uff0c\u7c7b\u578b\u6bd4\u8f83\uff0c\u503c\u6bd4\u8f83 x=1 y=1 x is y #x\u4e0ey\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0cis\u6bd4\u8f83\u7684\u662fid\uff0c\u5373\u8eab\u4efd type(x) is type(y) #\u5bf9\u8c61\u7684\u7c7b\u578b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528is\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b\u7684\u8eab\u4efd x == y #==\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u5bf9\u8c61\u7684\u503c\u662f\u5426\u76f8\u7b49 7 \u53d8\u91cf\u7684\u547d\u540d\u89c4\u8303 8 \u53d8\u91cf\u7684\u8d4b\u503c\u64cd\u4f5c \u4e0ec\u8bed\u8a00\u7684\u533a\u522b\u5728\u4e8e\u53d8\u91cf\u8d4b\u503c\u64cd\u4f5c\u65e0\u8fd4\u56de\u503c \u94fe\u5f0f\u8d4b\u503c\uff1ay\uff1dx\uff1da\uff1d1 \u591a\u5143\u8d4b\u503c\uff1ax,y=1,2 x,y=y,x \u589e\u91cf\u8d4b\u503c\uff1ax+=1 \u6570\u636e\u7c7b\u578b 1 \u4ec0\u4e48\u662f\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u6570\u636e\u7c7b\u578b\u5206\u7c7b python\u4e2d\u7684\u6570\u636e\u7c7b\u578b python\u4f7f\u7528\u5bf9\u8c61\u6a21\u578b\u6765\u5b58\u50a8\u6570\u636e\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u7c7b\uff0c\u6bcf\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\uff0c\u5b9e\u9645\u5c31\u662f\u5728\u521d\u59cb\u5316\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5373\u6240\u6709\u6570\u636e\u90fd\u662f\u5bf9\u8c61 \u5bf9\u8c61\u4e09\u4e2a\u7279\u6027 \u8eab\u4efd\uff1a\u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u7528id()\u83b7\u53d6 \u7c7b\u578b\uff1a\u51b3\u5b9a\u4e86\u8be5\u5bf9\u8c61\u53ef\u4ee5\u4fdd\u5b58\u4ec0\u4e48\u7c7b\u578b\u503c\uff0c\u53ef\u6267\u884c\u4f55\u79cd\u64cd\u4f5c\uff0c\u9700\u9075\u5faa\u4ec0\u4e48\u89c4\u5219\uff0c\u53ef\u7528type()\u83b7\u53d6 \u503c\uff1a\u5bf9\u8c61\u4fdd\u5b58\u7684\u771f\u5b9e\u6570\u636e \u6ce8\uff1a\u6211\u4eec\u5728\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u9700\u8fd9\u6837\uff1ax\uff1d1\uff0c\u5185\u90e8\u751f\u62101\u8fd9\u4e00\u5185\u5b58\u5bf9\u8c61\u4f1a\u81ea\u52a8\u89e6\u53d1\uff0c\u6211\u4eec\u65e0\u9700\u5173\u5fc3 \u8fd9\u91cc\u7684\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3001\u5217\u8868\u7b49\u90fd\u662f\u6570\u636e\u7c7b\u578b\uff08\u7528\u6765\u63cf\u8ff0\u67d0\u79cd\u72b6\u6001\u6216\u8005\u7279\u6027\uff09\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u6570\u636e\uff0c\u5904\u7406\u4e0d\u540c\u7684\u6570\u636e\u5c31\u9700\u8981\u5b9a\u4e49\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b \u6807\u51c6\u7c7b\u578b \u5176\u4ed6\u7c7b\u578b \u6570\u5b57 \u7c7b\u578btype \u5b57\u7b26\u4e32 NUll \u5217\u8868 \u6587\u4ef6 \u5143\u7956 \u96c6\u5408 \u5b57\u5178 \u51fd\u6570/\u65b9\u6cd5 x \u7c7b x \u6a21\u5757 \u6807\u51c6\u6570\u636e\u7c7b\u578b \u6570\u5b57 \u5b9a\u4e49\uff1aa\uff1d1 \u7279\u6027\uff1a 1.\u53ea\u80fd\u5b58\u653e\u4e00\u4e2a\u503c 2.\u4e00\u7ecf\u5b9a\u4e49\uff0c\u4e0d\u53ef\u66f4\u6539 3.\u76f4\u63a5\u8bbf\u95ee \u5206\u7c7b\uff1a\u6574\u578b\uff0c\u957f\u6574\u578b\uff0c\u5e03\u5c14\uff0c\u6d6e\u70b9\uff0c\u590d\u6570 \u6574\u5f62 Python\u7684\u6574\u578b\u76f8\u5f53\u4e8eC\u4e2d\u7684long\u578b,Python\u4e2d\u7684\u6574\u6570\u53ef\u4ee5\u7528\u5341\u8fdb\u5236,\u516b\u8fdb\u5236,\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002 python2.*\u4e0epython3.*\u5173\u4e8e\u6574\u578b\u7684\u533a\u522b python2.* \u572832\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a32\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**31\uff5e2**31-1\uff0c\u5373-2147483648\uff5e2147483647 \u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a64\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**63\uff5e2**63-1\uff0c\u5373-9223372036854775808\uff5e9223372036854775807 python3.*\u6574\u5f62\u957f\u5ea6\u65e0\u9650\u5236 \u957f\u6574\u578blong python2.*\uff1a \u8ddfC\u8bed\u8a00\u4e0d\u540c\uff0cPython\u7684\u957f\u6574\u578b\u6ca1\u6709\u6307\u5b9a\u4f4d\u5bbd\uff0c\u4e5f\u5c31\u662f\u8bf4Python\u6ca1\u6709\u9650\u5236\u957f\u6574\u578b\u6570\u503c\u7684\u5927\u5c0f\uff0c \u4f46\u662f\u5b9e\u9645\u4e0a\u7531\u4e8e\u673a\u5668\u5185\u5b58\u6709\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7684\u957f\u6574\u578b\u6570\u503c\u4e0d\u53ef\u80fd\u65e0\u9650\u5927\u3002 \u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5982\u4f55\u533a\u5206\u957f\u6574\u578b\u548c\u6574\u578b\u6570\u503c\u5462\uff1f \u901a\u5e38\u7684\u505a\u6cd5\u662f\u5728\u6570\u5b57\u5c3e\u90e8\u52a0\u4e0a\u4e00\u4e2a\u5927\u5199\u5b57\u6bcdL\u6216\u5c0f\u5199\u5b57\u6bcdl\u4ee5\u8868\u793a\u8be5\u6574\u6570\u662f\u957f\u6574\u578b\u7684\uff0c\u4f8b\u5982\uff1a a = 9223372036854775808L \u6ce8\u610f\uff0c\u81ea\u4ecePython2\u8d77\uff0c\u5982\u679c\u53d1\u751f\u6ea2\u51fa\uff0cPython\u4f1a\u81ea\u52a8\u5c06\u6574\u578b\u6570\u636e\u8f6c\u6362\u4e3a\u957f\u6574\u578b\uff0c \u6240\u4ee5\u5982\u4eca\u5728\u957f\u6574\u578b\u6570\u636e\u540e\u9762\u4e0d\u52a0\u5b57\u6bcdL\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u4e25\u91cd\u540e\u679c\u4e86\u3002 python3.* \u957f\u6574\u578b\uff0c\u6574\u578b\u7edf\u4e00\u5f52\u4e3a\u6574\u578b python2.7 a=9223372036854775807 a 9223372036854775807 a+=1 a 9223372036854775808L python3.5 a=9223372036854775807 a 9223372036854775807 a+=1 a 9223372036854775808 \u5e03\u5c14\u503cbool True \u548cFalse 1\u548c0 \u6d6e\u70b9\u6570float Python\u7684\u6d6e\u70b9\u6570\u5c31\u662f\u6570\u5b66\u4e2d\u7684\u5c0f\u6570\uff0c\u7c7b\u4f3cC\u8bed\u8a00\u4e2d\u7684double\u3002 \u5728\u8fd0\u7b97\u4e2d\uff0c\u6574\u6570\u4e0e\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\u662f\u6d6e\u70b9\u6570 \u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c \u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6bd4\u5982\uff0c1.23*109\u548c12.3*108\u662f\u76f8\u7b49\u7684\u3002 \u6d6e\u70b9\u6570\u53ef\u4ee5\u7528\u6570\u5b66\u5199\u6cd5\uff0c\u59821.23\uff0c3.14\uff0c-9.01\uff0c\u7b49\u7b49\u3002\u4f46\u662f\u5bf9\u4e8e\u5f88\u5927\u6216\u5f88\u5c0f\u7684\u6d6e\u70b9\u6570\uff0c \u5c31\u5fc5\u987b\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\uff0c\u628a10\u7528e\u66ff\u4ee3\uff0c1.23*109\u5c31\u662f1.23e9\uff0c\u6216\u800512.3e8\uff0c0.000012 \u53ef\u4ee5\u5199\u62101.2e-5\uff0c\u7b49\u7b49\u3002 \u6574\u6570\u548c\u6d6e\u70b9\u6570\u5728\u8ba1\u7b97\u673a\u5185\u90e8\u5b58\u50a8\u7684\u65b9\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u6574\u6570\u8fd0\u7b97\u6c38\u8fdc\u662f\u7cbe\u786e\u7684\u800c\u6d6e\u70b9\u6570\u8fd0\u7b97\u5219\u53ef\u80fd\u4f1a\u6709 \u56db\u820d\u4e94\u5165\u7684\u8bef\u5dee\u3002 \u590d\u6570 \u6570\u5b57\u76f8\u5173\u5185\u5efa\u51fd\u6570 \u5185\u5efa\u51fd\u6570\u76f8\u5173 \u5b57\u7b26\u4e32 \u5b9a\u4e49\uff1a\u5b83\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u5b57\u7b26\u7684\u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u8868\u793a\u57fa\u672c\u7684\u6587\u672c\u4fe1\u606f\uff0c\u2018\u2019\u6216\u201c\u201d\u6216\u2018\u2019\u2018 \u2019\u2018\u2019\u4e2d\u95f4\u5305\u542b\u7684\u5185\u5bb9\u79f0\u4e4b\u4e3a\u5b57\u7b26\u4e32 \u7279\u6027\uff1a 1.\u53ea\u80fd\u5b58\u653e\u4e00\u4e2a\u503c 2.\u4e0d\u53ef\u53d8 3.\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5b9a\u4e49\u5b57\u7b26\u96c6\u5408\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u5e8f \u8865\u5145\uff1a \u3000\u30001.\u5b57\u7b26\u4e32\u7684\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u90fd\u65e0\u6cd5\u53d6\u6d88\u7279\u6b8a\u5b57\u7b26\u7684\u542b\u4e49\uff0c\u5982\u679c\u60f3\u8ba9\u5f15\u53f7\u5185\u6240\u6709\u5b57\u7b26\u5747\u53d6\u6d88\u7279\u6b8a\u610f\u4e49\uff0c\u5728\u5f15\u53f7\u524d\u9762\u52a0r\uff0c\u5982name\uff1dr l\\thf \u3000\u30002.unicode\u5b57\u7b26\u4e32\u4e0er\u8fde\u7528\u5fc5\u9700\u5728r\u524d\u9762\uff0c\u5982name\uff1dur l\\thf \u5b57\u7b26\u4e32\u521b\u5efa a= hello world \u5e38\u7528\u64cd\u4f5c \u79fb\u9664\u7a7a\u767d \u5206\u5272 \u957f\u5ea6 \u7d22\u5f15 \u5207\u7247 \u5b57\u7b26\u5de5\u7a0b\u51fd\u6570str class str(object): str(object= ) - str str(bytes_or_buffer[, encoding[, errors]]) - str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.__str__() (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to strict . def capitalize(self): # real signature unknown; restored from __doc__ \u9996\u5b57\u6bcd\u53d8\u5927\u5199 S.capitalize() - str Return a capitalized version of S, i.e. make the first character have upper case and the rest lower case. return def casefold(self): # real signature unknown; restored from __doc__ S.casefold() - str Return a version of S suitable for caseless comparisons. return def center(self, width, fillchar=None): # real signature unknown; restored from __doc__ \u539f\u6765\u5b57\u7b26\u5c45\u4e2d\uff0c\u4e0d\u591f\u7528\u7a7a\u683c\u8865\u5168 S.center(width[, fillchar]) - str Return S centered in a string of length width. Padding is done using the specified fill character (default is a space) return def count(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ \u4ece\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u7edf\u8ba1\u67d0str\u51fa\u73b0\u6b21\u6570 S.count(sub[, start[, end]]) - int Return the number of non-overlapping occurrences of substring sub in string S[start:end]. Optional arguments start and end are interpreted as in slice notation. return 0 def encode(self, encoding= utf-8 , errors= strict ): # real signature unknown; restored from __doc__ encode(encoding= utf-8 ,errors= strict ) \u4ee5encoding\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\u7f16\u7801\uff0c\u5982\u679c\u51fa\u9519\u9ed8\u8ba4\u62a5\u4e00\u4e2aValueError\uff0c\u9664\u975eerrors\u6307\u5b9a\u7684\u662f ignore\u6216replace S.encode(encoding= utf-8 , errors= strict ) - bytes Encode S using the codec registered for encoding. Default encoding is utf-8 . errors may be given to set a different error handling scheme. Default is strict meaning that encoding errors raise a UnicodeEncodeError. Other possible values are ignore , replace and xmlcharrefreplace as well as any other name registered with codecs.register_error that can handle UnicodeEncodeErrors. return b def endswith(self, suffix, start=None, end=None): # real signature unknown; restored from __doc__ S.endswith(suffix[, start[, end]]) - bool Return True if S ends with the specified suffix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. suffix can also be a tuple of strings to try. return False def expandtabs(self, tabsize=8): # real signature unknown; restored from __doc__ \u5c06\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u7684\\t\u8f6c\u6362\u6210tabsize\u4e2a\u7a7a\u683c S.expandtabs(tabsize=8) - str Return a copy of S where all tab characters are expanded using spaces. If tabsize is not given, a tab size of 8 characters is assumed. return def find(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.find(sub[, start[, end]]) - int Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation. Return -1 on failure. return 0 def format(self, *args, **kwargs): # known special case of str.format \u683c\u5f0f\u5316\u8f93\u51fa \u4e09\u79cd\u5f62\u5f0f\uff1a \u5f62\u5f0f\u4e00. print( {0}{1}{0} .format( a , b )) aba \u5f62\u5f0f\u4e8c\uff1a\uff08\u5fc5\u987b\u4e00\u4e00\u5bf9\u5e94\uff09 print( {}{}{} .format( a , b )) Traceback (most recent call last): File input , line 1, in module IndexError: tuple index out of range print( {}{} .format( a , b )) ab \u5f62\u5f0f\u4e09\uff1a print( {name} {age} .format(age=12,name= lhf )) lhf 12 S.format(*args, **kwargs) - str Return a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces ( { and } ). pass def format_map(self, mapping): # real signature unknown; restored from __doc__ \u4e0eformat\u533a\u522b {name} .format(**dict(name= alex )) {name} .format_map(dict(name= alex )) S.format_map(mapping) - str Return a formatted version of S, using substitutions from mapping. The substitutions are identified by braces ( { and } ). return def index(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.index(sub[, start[, end]]) - int Like S.find() but raise ValueError when the substring is not found. return 0 def isalnum(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u5b57\u6bcd\u6216\u6570\u5b57\u624d\u8fd4\u56deTrue S.isalnum() - bool Return True if all characters in S are alphanumeric and there is at least one character in S, False otherwise. return False def isalpha(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u5b57\u6bcd\u624d\u8fd4\u56deTrue S.isalpha() - bool Return True if all characters in S are alphabetic and there is at least one character in S, False otherwise. return False def isdecimal(self): # real signature unknown; restored from __doc__ S.isdecimal() - bool Return True if there are only decimal characters in S, False otherwise. return False def isdigit(self): # real signature unknown; restored from __doc__ S.isdigit() - bool Return True if all characters in S are digits and there is at least one character in S, False otherwise. return False def isidentifier(self): # real signature unknown; restored from __doc__ \u5b57\u7b26\u4e32\u4e3a\u5173\u952e\u5b57\u8fd4\u56deTrue S.isidentifier() - bool Return True if S is a valid identifier according to the language definition. Use keyword.iskeyword() to test for reserved identifiers such as def and class . return False def islower(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u624d\u8fd4\u56deTrue S.islower() - bool Return True if all cased characters in S are lowercase and there is at least one cased character in S, False otherwise. return False def isnumeric(self): # real signature unknown; restored from __doc__ S.isnumeric() - bool Return True if there are only numeric characters in S, False otherwise. return False def isprintable(self): # real signature unknown; restored from __doc__ S.isprintable() - bool Return True if all characters in S are considered printable in repr() or S is empty, False otherwise. return False def isspace(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u7a7a\u683c\u624d\u8fd4\u56deTrue S.isspace() - bool Return True if all characters in S are whitespace and there is at least one character in S, False otherwise. return False def istitle(self): # real signature unknown; restored from __doc__ a= Hello a.istitle() True a= HellP a.istitle() False S.istitle() - bool Return True if S is a titlecased string and there is at least one character in S, i.e. upper- and titlecase characters may only follow uncased characters and lowercase characters only cased ones. Return False otherwise. return False def isupper(self): # real signature unknown; restored from __doc__ S.isupper() - bool Return True if all cased characters in S are uppercase and there is at least one cased character in S, False otherwise. return False def join(self, iterable): # real signature unknown; restored from __doc__ #\u5bf9\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\uff08\u5206\u522b\u4f7f\u7528 \u4e0e : \u4f5c\u4e3a\u5206\u9694\u7b26\uff09 seq1 = [ hello , good , boy , doiido ] print .join(seq1) hello good boy doiido print : .join(seq1) hello:good:boy:doiido #\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c seq2 = hello good boy doiido print : .join(seq2) h:e:l:l:o: :g:o:o:d: :b:o:y: :d:o:i:i:d:o #\u5bf9\u5143\u7ec4\u8fdb\u884c\u64cd\u4f5c seq3 = ( hello , good , boy , doiido ) print : .join(seq3) hello:good:boy:doiido #\u5bf9\u5b57\u5178\u8fdb\u884c\u64cd\u4f5c seq4 = { hello :1, good :2, boy :3, doiido :4} print : .join(seq4) boy:good:doiido:hello #\u5408\u5e76\u76ee\u5f55 import os os.path.join( /hello/ , good/boy/ , doiido ) /hello/good/boy/doiido S.join(iterable) - str Return a string which is the concatenation of the strings in the iterable. The separator between elements is S. return def ljust(self, width, fillchar=None): # real signature unknown; restored from __doc__ S.ljust(width[, fillchar]) - str Return S left-justified in a Unicode string of length width. Padding is done using the specified fill character (default is a space). return def lower(self): # real signature unknown; restored from __doc__ S.lower() - str Return a copy of the string S converted to lowercase. return def lstrip(self, chars=None): # real signature unknown; restored from __doc__ S.lstrip([chars]) - str Return a copy of the string S with leading whitespace removed. If chars is given and not None, remove characters in chars instead. return def maketrans(self, *args, **kwargs): # real signature unknown Return a translation table usable for str.translate(). If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result. pass def partition(self, sep): # real signature unknown; restored from __doc__ \u4ee5sep\u4e3a\u5206\u5272\uff0c\u5c06S\u5206\u6210head,sep,tail\u4e09\u90e8\u5206 S.partition(sep) - (head, sep, tail) Search for the separator sep in S, and return the part before it, the separator itself, and the part after it. If the separator is not found, return S and two empty strings. pass def replace(self, old, new, count=None): # real signature unknown; restored from __doc__ S.replace(old, new[, count]) - str Return a copy of S with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced. return def rfind(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.rfind(sub[, start[, end]]) - int Return the highest index in S where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation. Return -1 on failure. return 0 def rindex(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.rindex(sub[, start[, end]]) - int Like S.rfind() but raise ValueError when the substring is not found. return 0 def rjust(self, width, fillchar=None): # real signature unknown; restored from __doc__ S.rjust(width[, fillchar]) - str Return S right-justified in a string of length width. Padding is done using the specified fill character (default is a space). return def rpartition(self, sep): # real signature unknown; restored from __doc__ S.rpartition(sep) - (head, sep, tail) Search for the separator sep in S, starting at the end of S, and return the part before it, the separator itself, and the part after it. If the separator is not found, return two empty strings and S. pass def rsplit(self, sep=None, maxsplit=-1): # real signature unknown; restored from __doc__ S.rsplit(sep=None, maxsplit=-1) - list of strings Return a list of the words in S, using sep as the delimiter string, starting at the end of the string and working to the front. If maxsplit is given, at most maxsplit splits are done. If sep is not specified, any whitespace string is a separator. return [] def rstrip(self, chars=None): # real signature unknown; restored from __doc__ S.rstrip([chars]) - str Return a copy of the string S with trailing whitespace removed. If chars is given and not None, remove characters in chars instead. return def split(self, sep=None, maxsplit=-1): # real signature unknown; restored from __doc__ \u4ee5sep\u4e3a\u5206\u5272\uff0c\u5c06S\u5207\u5206\u6210\u5217\u8868\uff0c\u4e0epartition\u7684\u533a\u522b\u5728\u4e8e\u5207\u5206\u7ed3\u679c\u4e0d\u5305\u542bsep\uff0c \u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u591a\u4e2asep\u90a3\u4e48maxsplit\u4e3a\u6700\u591a\u5207\u5206\u6210\u51e0\u90e8\u5206 a= a,b c\\nd\\te a.split() [ a,b , c , d , e ] S.split(sep=None, maxsplit=-1) - list of strings Return a list of the words in S, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done. If sep is not specified or is None, any whitespace string is a separator and empty strings are removed from the result. return [] def splitlines(self, keepends=None): # real signature unknown; restored from __doc__ Python splitlines() \u6309\u7167\u884c( \\r , \\r\\n , \\n )\u5206\u9694\uff0c \u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5404\u884c\u4f5c\u4e3a\u5143\u7d20\u7684\u5217\u8868\uff0c\u5982\u679c\u53c2\u6570 keepends \u4e3a False\uff0c\u4e0d\u5305\u542b\u6362\u884c\u7b26\uff0c\u5982 \u679c\u4e3a True\uff0c\u5219\u4fdd\u7559\u6362\u884c\u7b26\u3002 x adsfasdf\\nsadf\\nasdf\\nadf x.splitlines() [ adsfasdf , sadf , asdf , adf ] x.splitlines(True) [ adsfasdf\\n , sadf\\n , asdf\\n , adf ] S.splitlines([keepends]) - list of strings Return a list of the lines in S, breaking at line boundaries. Line breaks are not included in the resulting list unless keepends is given and true. return [] def startswith(self, prefix, start=None, end=None): # real signature unknown; restored from __doc__ S.startswith(prefix[, start[, end]]) - bool Return True if S starts with the specified prefix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. prefix can also be a tuple of strings to try. return False def strip(self, chars=None): # real signature unknown; restored from __doc__ S.strip([chars]) - str Return a copy of the string S with leading and trailing whitespace removed. If chars is given and not None, remove characters in chars instead. return def swapcase(self): # real signature unknown; restored from __doc__ \u5927\u5c0f\u5199\u53cd\u8f6c S.swapcase() - str Return a copy of S with uppercase characters converted to lowercase and vice versa. return def title(self): # real signature unknown; restored from __doc__ S.title() - str Return a titlecased version of S, i.e. words start with title case characters, all remaining cased characters have lower case. return def translate(self, table): # real signature unknown; restored from __doc__ maketrans() \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u5b57\u7b26\u6620\u5c04\u7684\u8f6c\u6362\u8868\uff0c\u5bf9\u4e8e\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u6700\u7b80\u5355\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u9700\u8981\u8f6c\u6362\u7684\u5b57\u7b26\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e5f\u662f\u5b57\u7b26\u4e32\u8868\u793a\u8f6c\u6362\u7684\u76ee\u6807\u3002 \u6ce8\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5fc5\u987b\u76f8\u540c\uff0c\u4e3a\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u7136\u540e\u4f7f\u7528translate\u8fdb\u884c\u6309\u7167\u89c4\u5219\u8f6c\u6362 table=str.maketrans( alex , big SB ) a= hello abc print(a.translate(table)) S.translate(table) - str Return a copy of the string S in which each character has been mapped through the given translation table. The table must implement lookup/indexing via __getitem__, for instance a dictionary or list, mapping Unicode ordinals to Unicode ordinals, strings, or None. If this operation raises LookupError, the character is left untouched. Characters mapped to None are deleted. return def upper(self): # real signature unknown; restored from __doc__ S.upper() - str Return a copy of S converted to uppercase. return def zfill(self, width): # real signature unknown; restored from __doc__ \u539f\u6765\u5b57\u7b26\u53f3\u5bf9\u9f50\uff0c\u4e0d\u591f\u75280\u8865\u9f50 S.zfill(width) - str Pad a numeric string S with zeros on the left, to fill a field of the specified width. The string S is never truncated. return def __add__(self, *args, **kwargs): # real signature unknown Return self+value. pass def __contains__(self, *args, **kwargs): # real signature unknown Return key in self. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __format__(self, format_spec): # real signature unknown; restored from __doc__ S.__format__(format_spec) - str Return a formatted version of S as described by format_spec. return def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, *args, **kwargs): # real signature unknown Return self[key]. pass def __getnewargs__(self, *args, **kwargs): # real signature unknown pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __hash__(self, *args, **kwargs): # real signature unknown Return hash(self). pass def __init__(self, value= , encoding=None, errors= strict ): # known special case of str.__init__ str(object= ) - str str(bytes_or_buffer[, encoding[, errors]]) - str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.__str__() (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to strict . # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __mod__(self, *args, **kwargs): # real signature unknown Return self%value. pass def __mul__(self, *args, **kwargs): # real signature unknown Return self*value.n pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __rmod__(self, *args, **kwargs): # real signature unknown Return value%self. pass def __rmul__(self, *args, **kwargs): # real signature unknown Return self*value. pass def __sizeof__(self): # real signature unknown; restored from __doc__ S.__sizeof__() - size of S in memory, in bytes pass def __str__(self, *args, **kwargs): # real signature unknown Return str(self). pass \u5217\u8868 \u5b9a\u4e49\uff1a[]\u5185\u4ee5\u9017\u53f7\u5206\u9694\uff0c\u6309\u7167\u7d22\u5f15\uff0c\u5b58\u653e\u5404\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u4ee3\u8868\u4e00\u4e2a\u5143\u7d20 \u7279\u6027\uff1a 1.\u53ef\u5b58\u653e\u591a\u4e2a\u503c 2.\u53ef\u4fee\u6539\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u5bf9\u5e94\u7684\u503c\uff0c\u53ef\u53d8 3.\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5b9a\u4e49\u5217\u8868\u5143\u7d20\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u5e8f \u5217\u8868\u7684\u521b\u5efa \u4e09\u79cd\u65b9\u5f0f list_test=[ jjj ,12, ok ] \u6216 list_test=list( abc ) \u6216 list_test=list([ jjj ,12, ok ]) \u5e38\u89c1\u64cd\u4f5c \u7d22\u5f15 \u5207\u7247 \u8ffd\u52a0 \u5220\u9664 \u957f\u5ea6 \u5207\u7247 \u5faa\u73af \u5305\u542b \u5e38\u7528\u65b9\u6cd5 class list(object): list() - new empty list list(iterable) - new list initialized from iterable s items def append(self, p_object): # real signature unknown; restored from __doc__ L.append(object) - None -- append object to end pass def clear(self): # real signature unknown; restored from __doc__ L.clear() - None -- remove all items from L pass def copy(self): # real signature unknown; restored from __doc__ L.copy() - list -- a shallow copy of L return [] def count(self, value): # real signature unknown; restored from __doc__ L.count(value) - integer -- return number of occurrences of value return 0 def extend(self, iterable): # real signature unknown; restored from __doc__ L.extend(iterable) - None -- extend list by appending elements from the iterable pass def index(self, value, start=None, stop=None): # real signature unknown; restored from __doc__ L.index(value, [start, [stop]]) - integer -- return first index of value. Raises ValueError if the value is not present. return 0 def insert(self, index, p_object): # real signature unknown; restored from __doc__ L.insert(index, object) -- insert object before index pass def pop(self, index=None): # real signature unknown; restored from __doc__ L.pop([index]) - item -- remove and return item at index (default last). Raises IndexError if list is empty or index is out of range. pass def remove(self, value): # real signature unknown; restored from __doc__ L.remove(value) - None -- remove first occurrence of value. Raises ValueError if the value is not present. pass def reverse(self): # real signature unknown; restored from __doc__ L.reverse() -- reverse *IN PLACE* pass def sort(self, key=None, reverse=False): # real signature unknown; restored from __doc__ L.sort(key=None, reverse=False) - None -- stable sort *IN PLACE* pass def __add__(self, *args, **kwargs): # real signature unknown Return self+value. pass def __contains__(self, *args, **kwargs): # real signature unknown Return key in self. pass def __delitem__(self, *args, **kwargs): # real signature unknown Delete self[key]. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, y): # real signature unknown; restored from __doc__ x.__getitem__(y) == x[y] pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __iadd__(self, *args, **kwargs): # real signature unknown Implement self+=value. pass def __imul__(self, *args, **kwargs): # real signature unknown Implement self*=value. pass def __init__(self, seq=()): # known special case of list.__init__ list() - new empty list list(iterable) - new list initialized from iterable s items # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __mul__(self, *args, **kwargs): # real signature unknown Return self*value.n pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __reversed__(self): # real signature unknown; restored from __doc__ L.__reversed__() -- return a reverse iterator over the list pass def __rmul__(self, *args, **kwargs): # real signature unknown Return self*value. pass def __setitem__(self, *args, **kwargs): # real signature unknown Set self[key] to value. pass def __sizeof__(self): # real signature unknown; restored from __doc__ L.__sizeof__() -- size of L in memory, in bytes pass __hash__ = None \u67e5\u770b \u5143\u7956 \u5b9a\u4e49\uff1a\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\uff3b\uff3d\u6539\u6210\uff08\uff09 \u7279\u6027\uff1a 1.\u53ef\u5b58\u653e\u591a\u4e2a\u503c 2.\u4e0d\u53ef\u53d8 3.\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5b9a\u4e49\u5143\u7ec4\u5143\u7d20\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u5e8f \u521b\u5efa\u5143\u7956 ages = (11, 22, 33, 44, 55) \u6216 ages = tuple((11, 22, 33, 44, 55)) \u5e38\u7528\u64cd\u4f5c \u7d22\u5f15 \u5207\u7247 \u5faa\u73af \u957f\u5ea6 \u5305\u542b \u5e38\u7528\u65b9\u6cd5 class tuple(object): tuple() - empty tuple tuple(iterable) - tuple initialized from iterable s items If the argument is a tuple, the return value is the same object. def count(self, value): # real signature unknown; restored from __doc__ T.count(value) - integer -- return number of occurrences of value return 0 def index(self, value, start=None, stop=None): # real signature unknown; restored from __doc__ T.index(value, [start, [stop]]) - integer -- return first index of value. Raises ValueError if the value is not present. return 0 def __add__(self, *args, **kwargs): # real signature unknown Return self+value. pass def __contains__(self, *args, **kwargs): # real signature unknown Return key in self. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, *args, **kwargs): # real signature unknown Return self[key]. pass def __getnewargs__(self, *args, **kwargs): # real signature unknown pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __hash__(self, *args, **kwargs): # real signature unknown Return hash(self). pass def __init__(self, seq=()): # known special case of tuple.__init__ tuple() - empty tuple tuple(iterable) - tuple initialized from iterable s items If the argument is a tuple, the return value is the same object. # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __mul__(self, *args, **kwargs): # real signature unknown Return self*value.n pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __rmul__(self, *args, **kwargs): # real signature unknown Return self*value. pass \u5b57\u5178 \u5b9a\u4e49\uff1a\uff5bkey1:value1,key2:value2\uff5d,key-value\u7ed3\u6784\uff0ckey\u5fc5\u987b\u53efhash \u7279\u6027\uff1a 1.\u53ef\u5b58\u653e\u591a\u4e2a\u503c 2.\u53ef\u4fee\u6539\u6307\u5b9akey\u5bf9\u5e94\u7684\u503c\uff0c\u53ef\u53d8 3.\u65e0\u5e8f \u5b57\u5178\u7684\u521b\u5efa person = { name : sb , age : 18} \u6216 person = dict(name= sb , age=18) person = dict({ name : sb , age : 18}) person = dict(([ name , sb ],[ age ,18])) {}.fromkeys(seq,100) #\u4e0d\u6307\u5b9a100\u9ed8\u8ba4\u4e3aNone \u6ce8\u610f\uff1a dic={}.fromkeys([ k1 , k2 ],[]) dic { k1 : [], k2 : []} dic[ k1 ].append(1) dic { k1 : [1], k2 : [1]} \u5b57\u5178\u5e38\u7528\u64cd\u4f5c \u7d22\u5f15 \u65b0\u589e \u5220\u9664 \u952e\u3001\u503c\u3001\u952e\u503c\u5bf9 \u5faa\u73af \u957f\u5ea6 \u5b57\u5178\u5de5\u5382\u51fd\u6570dict() class dict(object): dict() - new empty dictionary dict(mapping) - new dictionary initialized from a mapping object s (key, value) pairs dict(iterable) - new dictionary initialized as if via: d = {} for k, v in iterable: d[k] = v dict(**kwargs) - new dictionary initialized with the name=value pairs in the keyword argument list. For example: dict(one=1, two=2) def clear(self): # real signature unknown; restored from __doc__ D.clear() - None. Remove all items from D. pass def copy(self): # real signature unknown; restored from __doc__ D.copy() - a shallow copy of D pass @staticmethod # known case def fromkeys(*args, **kwargs): # real signature unknown Returns a new dict with keys from iterable and values equal to value. pass def get(self, k, d=None): # real signature unknown; restored from __doc__ D.get(k[,d]) - D[k] if k in D, else d. d defaults to None. pass def items(self): # real signature unknown; restored from __doc__ D.items() - a set-like object providing a view on D s items pass def keys(self): # real signature unknown; restored from __doc__ D.keys() - a set-like object providing a view on D s keys pass def pop(self, k, d=None): # real signature unknown; restored from __doc__ D.pop(k[,d]) - v, remove specified key and return the corresponding value. If key is not found, d is returned if given, otherwise KeyError is raised pass def popitem(self): # real signature unknown; restored from __doc__ D.popitem() - (k, v), remove and return some (key, value) pair as a 2-tuple; but raise KeyError if D is empty. pass def setdefault(self, k, d=None): # real signature unknown; restored from __doc__ D.setdefault(k[,d]) - D.get(k,d), also set D[k]=d if k not in D pass def update(self, E=None, **F): # known special case of dict.update D.update([E, ]**F) - None. Update D from dict/iterable E and F. If E is present and has a .keys() method, then does: for k in E: D[k] = E[k] If E is present and lacks a .keys() method, then does: for k, v in E: D[k] = v In either case, this is followed by: for k in F: D[k] = F[k] pass def values(self): # real signature unknown; restored from __doc__ D.values() - an object providing a view on D s values pass def __contains__(self, *args, **kwargs): # real signature unknown True if D has a key k, else False. pass def __delitem__(self, *args, **kwargs): # real signature unknown Delete self[key]. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, y): # real signature unknown; restored from __doc__ x.__getitem__(y) == x[y] pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __init__(self, seq=None, **kwargs): # known special case of dict.__init__ dict() - new empty dictionary dict(mapping) - new dictionary initialized from a mapping object s (key, value) pairs dict(iterable) - new dictionary initialized as if via: d = {} for k, v in iterable: d[k] = v dict(**kwargs) - new dictionary initialized with the name=value pairs in the keyword argument list. For example: dict(one=1, two=2) # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __setitem__(self, *args, **kwargs): # real signature unknown Set self[key] to value. pass def __sizeof__(self): # real signature unknown; restored from __doc__ D.__sizeof__() - size of D in memory, in bytes pass __hash__ = None \u96c6\u5408 {1,2,3,1} \u6216 \u5b9a\u4e49\u53ef\u53d8\u96c6\u5408set set_test=set( hello ) set_test { l , o , e , h } \u6539\u4e3a\u4e0d\u53ef\u53d8\u96c6\u5408frozenset f_set_test=frozenset(set_test) f_set_test frozenset({ l , e , h , o }) \u5e38\u7528\u64cd\u4f5c \u3000 in not in \uff1d\uff1d \uff01\uff1d , = , = |,|=:\u5408\u96c6 . =:\u4ea4\u96c6 \uff0d,\uff0d=:\u5dee\u96c6 ^,^=:\u5bf9\u79f0\u5dee\u5206 \u65b9\u6cd5\u5982\u4e0b class set(object): set() - new empty set object set(iterable) - new set object Build an unordered collection of unique elements. def add(self, *args, **kwargs): # real signature unknown Add an element to a set. This has no effect if the element is already present. pass def clear(self, *args, **kwargs): # real signature unknown Remove all elements from this set. pass def copy(self, *args, **kwargs): # real signature unknown Return a shallow copy of a set. pass def difference(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1-s2 Return the difference of two or more sets as a new set. (i.e. all elements that are in this set but not the others.) pass def difference_update(self, *args, **kwargs): # real signature unknown Remove all elements of another set from this set. pass def discard(self, *args, **kwargs): # real signature unknown \u4e0eremove\u529f\u80fd\u76f8\u540c\uff0c\u5220\u9664\u5143\u7d20\u4e0d\u5b58\u5728\u65f6\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38 Remove an element from a set if it is a member. If the element is not a member, do nothing. pass def intersection(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1 s2 Return the intersection of two sets as a new set. (i.e. all elements that are in both sets.) pass def intersection_update(self, *args, **kwargs): # real signature unknown Update a set with the intersection of itself and another. pass def isdisjoint(self, *args, **kwargs): # real signature unknown Return True if two sets have a null intersection. pass def issubset(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1 =s2 Report whether another set contains this set. pass def issuperset(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1 =s2 Report whether this set contains another set. pass def pop(self, *args, **kwargs): # real signature unknown Remove and return an arbitrary set element. Raises KeyError if the set is empty. pass def remove(self, *args, **kwargs): # real signature unknown Remove an element from a set; it must be a member. If the element is not a member, raise a KeyError. pass def symmetric_difference(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1^s2 Return the symmetric difference of two sets as a new set. (i.e. all elements that are in exactly one of the sets.) pass def symmetric_difference_update(self, *args, **kwargs): # real signature unknown Update a set with the symmetric difference of itself and another. pass def union(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1|s2 Return the union of sets as a new set. (i.e. all elements that are in either set.) pass def update(self, *args, **kwargs): # real signature unknown Update a set with the union of itself and others. pass def __and__(self, *args, **kwargs): # real signature unknown Return self value. pass def __contains__(self, y): # real signature unknown; restored from __doc__ x.__contains__(y) == y in x. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __iand__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __init__(self, seq=()): # known special case of set.__init__ set() - new empty set object set(iterable) - new set object Build an unordered collection of unique elements. # (copied from class doc) pass def __ior__(self, *args, **kwargs): # real signature unknown Return self|=value. pass def __isub__(self, *args, **kwargs): # real signature unknown Return self-=value. pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __ixor__(self, *args, **kwargs): # real signature unknown Return self^=value. pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __or__(self, *args, **kwargs): # real signature unknown Return self|value. pass def __rand__(self, *args, **kwargs): # real signature unknown Return value self. pass def __reduce__(self, *args, **kwargs): # real signature unknown Return state information for pickling. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __ror__(self, *args, **kwargs): # real signature unknown Return value|self. pass def __rsub__(self, *args, **kwargs): # real signature unknown Return value-self. pass def __rxor__(self, *args, **kwargs): # real signature unknown Return value^self. pass def __sizeof__(self): # real signature unknown; restored from __doc__ S.__sizeof__() - size of S in memory, in bytes pass def __sub__(self, *args, **kwargs): # real signature unknown Return self-value. pass def __xor__(self, *args, **kwargs): # real signature unknown Return self^value. pass __hash__ = None byte\u7c7b\u578b \u5b9a\u4e49\uff1a\u5b588bit\u6574\u6570\uff0c\u6570\u636e\u57fa\u4e8e\u7f51\u7edc\u4f20\u8f93\u6216\u5185\u5b58\u53d8\u91cf\u5b58\u50a8\u5230\u786c\u76d8\u65f6\u9700\u8981\u8f6c\u6210bytes\u7c7b\u578b,\u5b57\u7b26\u4e32\u524d\u7f6eb\u4ee3\u8868\u4e3abytes\u7c7b\u578b x hello sb x.encode( gb2312 ) b hello sb \u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5185\u7f6e\u8868 \u5185\u7f6e\u8f6c\u6362\u8868 \u8fd0\u7b97\u7b26","title":"3. python\u57fa\u7840\u4e4b\u6570\u636e\u7c7b\u578b\u4e0e\u53d8\u91cf"},{"location":"python/python3/#python","text":"","title":"python\u57fa\u7840\u4e4b\u6570\u636e\u7c7b\u578b\u4e0e\u53d8\u91cf"},{"location":"python/python3/#_1","text":"1 \u4ec0\u4e48\u662f\u53d8\u91cf\u4e4b\u58f0\u660e\u53d8\u91cf #\u53d8\u91cf\u540d=\u53d8\u91cf\u503c age=18 gender1= male gender2= female 2 \u4e3a\u4ec0\u4e48\u8981\u6709\u53d8\u91cf \u53d8\u91cf\u4f5c\u7528\uff1a\u201c\u53d8\u201d= \u53d8\u5316\uff0c\u201c\u91cf\u201d= \u8ba1\u91cf/\u4fdd\u5b58\u72b6\u6001 \u7a0b\u5e8f\u7684\u8fd0\u884c\u672c\u8d28\u662f\u4e00\u7cfb\u5217\u72b6\u6001\u7684\u53d8\u5316\uff0c\u53d8\u91cf\u7684\u76ee\u7684\u5c31\u662f\u7528\u6765\u4fdd\u5b58\u72b6\u6001\uff0c\u53d8\u91cf\u503c\u7684\u53d8\u5316\u5c31\u6784\u6210\u4e86\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e0d\u540c\u7ed3\u679c\u3002 3 \u53d8\u91cf\u503c\u4e4b\u6570\u636e\u7c7b\u578b\u4e0e\u5bf9\u8c61 \u7a0b\u5e8f\u4e2d\u9700\u8981\u5904\u7406\u7684\u72b6\u6001\u5f88\u591a\uff0c\u4e8e\u662f\u6709\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u503c\uff0cx='egon',\u53d8\u91cf\u503c'egon'\u5b58\u653e\u4e0e\u5185\u5b58\u4e2d\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u540d\u5b57x\uff0c\u53d8\u91cf\u503c\u5373\u6211\u4eec\u8981\u5b58\u50a8\u7684\u6570\u636e\u3002 \u5728python\u4e2d\u6240\u6709\u6570\u636e\u90fd\u662f\u56f4\u7ed5\u5bf9\u8c61\u8fd9\u4e2a\u6982\u5ff5\u6765\u6784\u5efa\u7684\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e9b\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff1a\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178\u7b49 \u7a0b\u5e8f\u4e2d\u5b58\u50a8\u7684\u6240\u6709\u6570\u636e\u90fd\u662f\u5bf9\u8c61\uff0c \u4e00\u4e2a\u5bf9\u8c61\uff08\u5982a=1\uff09\u6709\uff1a \u3000\u3000\u4e00\u4e2a\u8eab\u4efd\uff08id\uff09 \u3000\u3000\u4e00\u4e2a\u7c7b\u578b(type) \u3000\u3000\u4e00\u4e2a\u503c(\u901a\u8fc7\u53d8\u91cf\u540da\u6765\u67e5\u770b) 1 \u5bf9\u8c61\u7684\u7c7b\u578b\u4e5f\u79f0\u4e3a\u5bf9\u8c61\u7684\u7c7b\u522b\uff0cpython\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u90fd\u5b9a\u5236\u4e86\u5c5e\u4e8e\u8be5\u7c7b\u578b\u7279\u6709\u7684\u65b9\u6cd5\uff0c\u6781\u5927\u5730\u65b9\u4fbf\u4e86\u5f00\u53d1\u8005\u5bf9\u6570\u636e\u7684\u5904\u7406 2 \u521b\u5efa\u67d0\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\u4e5f\u79f0\u4e3a\u521b\u5efa\u4e86\u8be5\u7c7b\u578b\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5de5\u5382\u51fd\u6570\u7684\u6982\u5ff5\u6765\u6e90\u4e8e\u6b64 4 \u53ef\u53d8\u5bf9\u8c61\u4e0e\u4e0d\u53ef\u53d8\u5bf9\u8c61 \u5b9e\u4f8b\u88ab\u521b\u5efa\u540e\uff0c\u8eab\u4efd\u548c\u7c7b\u578b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c \u5982\u679c\u503c\u662f\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u5219\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61 \u5982\u679c\u503c\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u5219\u662f\u53ef\u53d8\u5bf9\u8c61 5 \u5bb9\u5668\u5bf9\u8c61 \u67d0\u4e2a\u5bf9\u8c61\u5305\u542b\u5bf9\u5176\u4ed6\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5219\u79f0\u4e3a\u5bb9\u5668\u6216\u96c6\u5408 6 \u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u5c5e\u6027\u5c31\u662f\u5bf9\u8c61\u7684\u503c\uff0c\u65b9\u6cd5\u5c31\u662f\u8c03\u7528\u65f6\u5c06\u5728\u5bf9\u8c61\u672c\u8eab\u4e0a\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u4f7f\u7528.\u8fd0\u7b97\u7b26\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5982 a=3+4j a.real b=[1,2,3] b.append(4) 7 \u8eab\u4efd\u6bd4\u8f83\uff0c\u7c7b\u578b\u6bd4\u8f83\uff0c\u503c\u6bd4\u8f83 x=1 y=1 x is y #x\u4e0ey\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0cis\u6bd4\u8f83\u7684\u662fid\uff0c\u5373\u8eab\u4efd type(x) is type(y) #\u5bf9\u8c61\u7684\u7c7b\u578b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528is\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u7c7b\u578b\u7684\u8eab\u4efd x == y #==\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u5bf9\u8c61\u7684\u503c\u662f\u5426\u76f8\u7b49 7 \u53d8\u91cf\u7684\u547d\u540d\u89c4\u8303 8 \u53d8\u91cf\u7684\u8d4b\u503c\u64cd\u4f5c \u4e0ec\u8bed\u8a00\u7684\u533a\u522b\u5728\u4e8e\u53d8\u91cf\u8d4b\u503c\u64cd\u4f5c\u65e0\u8fd4\u56de\u503c \u94fe\u5f0f\u8d4b\u503c\uff1ay\uff1dx\uff1da\uff1d1 \u591a\u5143\u8d4b\u503c\uff1ax,y=1,2 x,y=y,x \u589e\u91cf\u8d4b\u503c\uff1ax+=1","title":"\u53d8\u91cf"},{"location":"python/python3/#_2","text":"1 \u4ec0\u4e48\u662f\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u6570\u636e\u7c7b\u578b\u5206\u7c7b python\u4e2d\u7684\u6570\u636e\u7c7b\u578b python\u4f7f\u7528\u5bf9\u8c61\u6a21\u578b\u6765\u5b58\u50a8\u6570\u636e\uff0c\u6bcf\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u5185\u7f6e\u7684\u7c7b\uff0c\u6bcf\u65b0\u5efa\u4e00\u4e2a\u6570\u636e\uff0c\u5b9e\u9645\u5c31\u662f\u5728\u521d\u59cb\u5316\u751f\u6210\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5373\u6240\u6709\u6570\u636e\u90fd\u662f\u5bf9\u8c61 \u5bf9\u8c61\u4e09\u4e2a\u7279\u6027 \u8eab\u4efd\uff1a\u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u7528id()\u83b7\u53d6 \u7c7b\u578b\uff1a\u51b3\u5b9a\u4e86\u8be5\u5bf9\u8c61\u53ef\u4ee5\u4fdd\u5b58\u4ec0\u4e48\u7c7b\u578b\u503c\uff0c\u53ef\u6267\u884c\u4f55\u79cd\u64cd\u4f5c\uff0c\u9700\u9075\u5faa\u4ec0\u4e48\u89c4\u5219\uff0c\u53ef\u7528type()\u83b7\u53d6 \u503c\uff1a\u5bf9\u8c61\u4fdd\u5b58\u7684\u771f\u5b9e\u6570\u636e \u6ce8\uff1a\u6211\u4eec\u5728\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u9700\u8fd9\u6837\uff1ax\uff1d1\uff0c\u5185\u90e8\u751f\u62101\u8fd9\u4e00\u5185\u5b58\u5bf9\u8c61\u4f1a\u81ea\u52a8\u89e6\u53d1\uff0c\u6211\u4eec\u65e0\u9700\u5173\u5fc3 \u8fd9\u91cc\u7684\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3001\u5217\u8868\u7b49\u90fd\u662f\u6570\u636e\u7c7b\u578b\uff08\u7528\u6765\u63cf\u8ff0\u67d0\u79cd\u72b6\u6001\u6216\u8005\u7279\u6027\uff09\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u6570\u636e\uff0c\u5904\u7406\u4e0d\u540c\u7684\u6570\u636e\u5c31\u9700\u8981\u5b9a\u4e49\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b \u6807\u51c6\u7c7b\u578b \u5176\u4ed6\u7c7b\u578b \u6570\u5b57 \u7c7b\u578btype \u5b57\u7b26\u4e32 NUll \u5217\u8868 \u6587\u4ef6 \u5143\u7956 \u96c6\u5408 \u5b57\u5178 \u51fd\u6570/\u65b9\u6cd5 x \u7c7b x \u6a21\u5757","title":"\u6570\u636e\u7c7b\u578b"},{"location":"python/python3/#_3","text":"\u6570\u5b57 \u5b9a\u4e49\uff1aa\uff1d1 \u7279\u6027\uff1a 1.\u53ea\u80fd\u5b58\u653e\u4e00\u4e2a\u503c 2.\u4e00\u7ecf\u5b9a\u4e49\uff0c\u4e0d\u53ef\u66f4\u6539 3.\u76f4\u63a5\u8bbf\u95ee \u5206\u7c7b\uff1a\u6574\u578b\uff0c\u957f\u6574\u578b\uff0c\u5e03\u5c14\uff0c\u6d6e\u70b9\uff0c\u590d\u6570","title":"\u6807\u51c6\u6570\u636e\u7c7b\u578b"},{"location":"python/python3/#_4","text":"Python\u7684\u6574\u578b\u76f8\u5f53\u4e8eC\u4e2d\u7684long\u578b,Python\u4e2d\u7684\u6574\u6570\u53ef\u4ee5\u7528\u5341\u8fdb\u5236,\u516b\u8fdb\u5236,\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002 python2.*\u4e0epython3.*\u5173\u4e8e\u6574\u578b\u7684\u533a\u522b python2.* \u572832\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a32\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**31\uff5e2**31-1\uff0c\u5373-2147483648\uff5e2147483647 \u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a64\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**63\uff5e2**63-1\uff0c\u5373-9223372036854775808\uff5e9223372036854775807 python3.*\u6574\u5f62\u957f\u5ea6\u65e0\u9650\u5236 \u957f\u6574\u578blong python2.*\uff1a \u8ddfC\u8bed\u8a00\u4e0d\u540c\uff0cPython\u7684\u957f\u6574\u578b\u6ca1\u6709\u6307\u5b9a\u4f4d\u5bbd\uff0c\u4e5f\u5c31\u662f\u8bf4Python\u6ca1\u6709\u9650\u5236\u957f\u6574\u578b\u6570\u503c\u7684\u5927\u5c0f\uff0c \u4f46\u662f\u5b9e\u9645\u4e0a\u7531\u4e8e\u673a\u5668\u5185\u5b58\u6709\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7684\u957f\u6574\u578b\u6570\u503c\u4e0d\u53ef\u80fd\u65e0\u9650\u5927\u3002 \u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5982\u4f55\u533a\u5206\u957f\u6574\u578b\u548c\u6574\u578b\u6570\u503c\u5462\uff1f \u901a\u5e38\u7684\u505a\u6cd5\u662f\u5728\u6570\u5b57\u5c3e\u90e8\u52a0\u4e0a\u4e00\u4e2a\u5927\u5199\u5b57\u6bcdL\u6216\u5c0f\u5199\u5b57\u6bcdl\u4ee5\u8868\u793a\u8be5\u6574\u6570\u662f\u957f\u6574\u578b\u7684\uff0c\u4f8b\u5982\uff1a a = 9223372036854775808L \u6ce8\u610f\uff0c\u81ea\u4ecePython2\u8d77\uff0c\u5982\u679c\u53d1\u751f\u6ea2\u51fa\uff0cPython\u4f1a\u81ea\u52a8\u5c06\u6574\u578b\u6570\u636e\u8f6c\u6362\u4e3a\u957f\u6574\u578b\uff0c \u6240\u4ee5\u5982\u4eca\u5728\u957f\u6574\u578b\u6570\u636e\u540e\u9762\u4e0d\u52a0\u5b57\u6bcdL\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u4e25\u91cd\u540e\u679c\u4e86\u3002 python3.* \u957f\u6574\u578b\uff0c\u6574\u578b\u7edf\u4e00\u5f52\u4e3a\u6574\u578b python2.7 a=9223372036854775807 a 9223372036854775807 a+=1 a 9223372036854775808L python3.5 a=9223372036854775807 a 9223372036854775807 a+=1 a 9223372036854775808 \u5e03\u5c14\u503cbool True \u548cFalse 1\u548c0 \u6d6e\u70b9\u6570float Python\u7684\u6d6e\u70b9\u6570\u5c31\u662f\u6570\u5b66\u4e2d\u7684\u5c0f\u6570\uff0c\u7c7b\u4f3cC\u8bed\u8a00\u4e2d\u7684double\u3002 \u5728\u8fd0\u7b97\u4e2d\uff0c\u6574\u6570\u4e0e\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\u662f\u6d6e\u70b9\u6570 \u6d6e\u70b9\u6570\u4e5f\u5c31\u662f\u5c0f\u6570\uff0c\u4e4b\u6240\u4ee5\u79f0\u4e3a\u6d6e\u70b9\u6570\uff0c\u662f\u56e0\u4e3a\u6309\u7167\u79d1\u5b66\u8bb0\u6570\u6cd5\u8868\u793a\u65f6\uff0c \u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u662f\u53ef\u53d8\u7684\uff0c\u6bd4\u5982\uff0c1.23*109\u548c12.3*108\u662f\u76f8\u7b49\u7684\u3002 \u6d6e\u70b9\u6570\u53ef\u4ee5\u7528\u6570\u5b66\u5199\u6cd5\uff0c\u59821.23\uff0c3.14\uff0c-9.01\uff0c\u7b49\u7b49\u3002\u4f46\u662f\u5bf9\u4e8e\u5f88\u5927\u6216\u5f88\u5c0f\u7684\u6d6e\u70b9\u6570\uff0c \u5c31\u5fc5\u987b\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\uff0c\u628a10\u7528e\u66ff\u4ee3\uff0c1.23*109\u5c31\u662f1.23e9\uff0c\u6216\u800512.3e8\uff0c0.000012 \u53ef\u4ee5\u5199\u62101.2e-5\uff0c\u7b49\u7b49\u3002 \u6574\u6570\u548c\u6d6e\u70b9\u6570\u5728\u8ba1\u7b97\u673a\u5185\u90e8\u5b58\u50a8\u7684\u65b9\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u6574\u6570\u8fd0\u7b97\u6c38\u8fdc\u662f\u7cbe\u786e\u7684\u800c\u6d6e\u70b9\u6570\u8fd0\u7b97\u5219\u53ef\u80fd\u4f1a\u6709 \u56db\u820d\u4e94\u5165\u7684\u8bef\u5dee\u3002 \u590d\u6570 \u6570\u5b57\u76f8\u5173\u5185\u5efa\u51fd\u6570 \u5185\u5efa\u51fd\u6570\u76f8\u5173","title":"\u6574\u5f62"},{"location":"python/python3/#_5","text":"\u5b9a\u4e49\uff1a\u5b83\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u5b57\u7b26\u7684\u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u548c\u8868\u793a\u57fa\u672c\u7684\u6587\u672c\u4fe1\u606f\uff0c\u2018\u2019\u6216\u201c\u201d\u6216\u2018\u2019\u2018 \u2019\u2018\u2019\u4e2d\u95f4\u5305\u542b\u7684\u5185\u5bb9\u79f0\u4e4b\u4e3a\u5b57\u7b26\u4e32 \u7279\u6027\uff1a 1.\u53ea\u80fd\u5b58\u653e\u4e00\u4e2a\u503c 2.\u4e0d\u53ef\u53d8 3.\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5b9a\u4e49\u5b57\u7b26\u96c6\u5408\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u5e8f \u8865\u5145\uff1a \u3000\u30001.\u5b57\u7b26\u4e32\u7684\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u90fd\u65e0\u6cd5\u53d6\u6d88\u7279\u6b8a\u5b57\u7b26\u7684\u542b\u4e49\uff0c\u5982\u679c\u60f3\u8ba9\u5f15\u53f7\u5185\u6240\u6709\u5b57\u7b26\u5747\u53d6\u6d88\u7279\u6b8a\u610f\u4e49\uff0c\u5728\u5f15\u53f7\u524d\u9762\u52a0r\uff0c\u5982name\uff1dr l\\thf \u3000\u30002.unicode\u5b57\u7b26\u4e32\u4e0er\u8fde\u7528\u5fc5\u9700\u5728r\u524d\u9762\uff0c\u5982name\uff1dur l\\thf \u5b57\u7b26\u4e32\u521b\u5efa a= hello world \u5e38\u7528\u64cd\u4f5c \u79fb\u9664\u7a7a\u767d \u5206\u5272 \u957f\u5ea6 \u7d22\u5f15 \u5207\u7247 \u5b57\u7b26\u5de5\u7a0b\u51fd\u6570str class str(object): str(object= ) - str str(bytes_or_buffer[, encoding[, errors]]) - str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.__str__() (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to strict . def capitalize(self): # real signature unknown; restored from __doc__ \u9996\u5b57\u6bcd\u53d8\u5927\u5199 S.capitalize() - str Return a capitalized version of S, i.e. make the first character have upper case and the rest lower case. return def casefold(self): # real signature unknown; restored from __doc__ S.casefold() - str Return a version of S suitable for caseless comparisons. return def center(self, width, fillchar=None): # real signature unknown; restored from __doc__ \u539f\u6765\u5b57\u7b26\u5c45\u4e2d\uff0c\u4e0d\u591f\u7528\u7a7a\u683c\u8865\u5168 S.center(width[, fillchar]) - str Return S centered in a string of length width. Padding is done using the specified fill character (default is a space) return def count(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ \u4ece\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u7edf\u8ba1\u67d0str\u51fa\u73b0\u6b21\u6570 S.count(sub[, start[, end]]) - int Return the number of non-overlapping occurrences of substring sub in string S[start:end]. Optional arguments start and end are interpreted as in slice notation. return 0 def encode(self, encoding= utf-8 , errors= strict ): # real signature unknown; restored from __doc__ encode(encoding= utf-8 ,errors= strict ) \u4ee5encoding\u6307\u5b9a\u7f16\u7801\u683c\u5f0f\u7f16\u7801\uff0c\u5982\u679c\u51fa\u9519\u9ed8\u8ba4\u62a5\u4e00\u4e2aValueError\uff0c\u9664\u975eerrors\u6307\u5b9a\u7684\u662f ignore\u6216replace S.encode(encoding= utf-8 , errors= strict ) - bytes Encode S using the codec registered for encoding. Default encoding is utf-8 . errors may be given to set a different error handling scheme. Default is strict meaning that encoding errors raise a UnicodeEncodeError. Other possible values are ignore , replace and xmlcharrefreplace as well as any other name registered with codecs.register_error that can handle UnicodeEncodeErrors. return b def endswith(self, suffix, start=None, end=None): # real signature unknown; restored from __doc__ S.endswith(suffix[, start[, end]]) - bool Return True if S ends with the specified suffix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. suffix can also be a tuple of strings to try. return False def expandtabs(self, tabsize=8): # real signature unknown; restored from __doc__ \u5c06\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u7684\\t\u8f6c\u6362\u6210tabsize\u4e2a\u7a7a\u683c S.expandtabs(tabsize=8) - str Return a copy of S where all tab characters are expanded using spaces. If tabsize is not given, a tab size of 8 characters is assumed. return def find(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.find(sub[, start[, end]]) - int Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation. Return -1 on failure. return 0 def format(self, *args, **kwargs): # known special case of str.format \u683c\u5f0f\u5316\u8f93\u51fa \u4e09\u79cd\u5f62\u5f0f\uff1a \u5f62\u5f0f\u4e00. print( {0}{1}{0} .format( a , b )) aba \u5f62\u5f0f\u4e8c\uff1a\uff08\u5fc5\u987b\u4e00\u4e00\u5bf9\u5e94\uff09 print( {}{}{} .format( a , b )) Traceback (most recent call last): File input , line 1, in module IndexError: tuple index out of range print( {}{} .format( a , b )) ab \u5f62\u5f0f\u4e09\uff1a print( {name} {age} .format(age=12,name= lhf )) lhf 12 S.format(*args, **kwargs) - str Return a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces ( { and } ). pass def format_map(self, mapping): # real signature unknown; restored from __doc__ \u4e0eformat\u533a\u522b {name} .format(**dict(name= alex )) {name} .format_map(dict(name= alex )) S.format_map(mapping) - str Return a formatted version of S, using substitutions from mapping. The substitutions are identified by braces ( { and } ). return def index(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.index(sub[, start[, end]]) - int Like S.find() but raise ValueError when the substring is not found. return 0 def isalnum(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u5b57\u6bcd\u6216\u6570\u5b57\u624d\u8fd4\u56deTrue S.isalnum() - bool Return True if all characters in S are alphanumeric and there is at least one character in S, False otherwise. return False def isalpha(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u5b57\u6bcd\u624d\u8fd4\u56deTrue S.isalpha() - bool Return True if all characters in S are alphabetic and there is at least one character in S, False otherwise. return False def isdecimal(self): # real signature unknown; restored from __doc__ S.isdecimal() - bool Return True if there are only decimal characters in S, False otherwise. return False def isdigit(self): # real signature unknown; restored from __doc__ S.isdigit() - bool Return True if all characters in S are digits and there is at least one character in S, False otherwise. return False def isidentifier(self): # real signature unknown; restored from __doc__ \u5b57\u7b26\u4e32\u4e3a\u5173\u952e\u5b57\u8fd4\u56deTrue S.isidentifier() - bool Return True if S is a valid identifier according to the language definition. Use keyword.iskeyword() to test for reserved identifiers such as def and class . return False def islower(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u5c0f\u5199\u5b57\u6bcd\u624d\u8fd4\u56deTrue S.islower() - bool Return True if all cased characters in S are lowercase and there is at least one cased character in S, False otherwise. return False def isnumeric(self): # real signature unknown; restored from __doc__ S.isnumeric() - bool Return True if there are only numeric characters in S, False otherwise. return False def isprintable(self): # real signature unknown; restored from __doc__ S.isprintable() - bool Return True if all characters in S are considered printable in repr() or S is empty, False otherwise. return False def isspace(self): # real signature unknown; restored from __doc__ \u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e14\u90fd\u662f\u7a7a\u683c\u624d\u8fd4\u56deTrue S.isspace() - bool Return True if all characters in S are whitespace and there is at least one character in S, False otherwise. return False def istitle(self): # real signature unknown; restored from __doc__ a= Hello a.istitle() True a= HellP a.istitle() False S.istitle() - bool Return True if S is a titlecased string and there is at least one character in S, i.e. upper- and titlecase characters may only follow uncased characters and lowercase characters only cased ones. Return False otherwise. return False def isupper(self): # real signature unknown; restored from __doc__ S.isupper() - bool Return True if all cased characters in S are uppercase and there is at least one cased character in S, False otherwise. return False def join(self, iterable): # real signature unknown; restored from __doc__ #\u5bf9\u5e8f\u5217\u8fdb\u884c\u64cd\u4f5c\uff08\u5206\u522b\u4f7f\u7528 \u4e0e : \u4f5c\u4e3a\u5206\u9694\u7b26\uff09 seq1 = [ hello , good , boy , doiido ] print .join(seq1) hello good boy doiido print : .join(seq1) hello:good:boy:doiido #\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c seq2 = hello good boy doiido print : .join(seq2) h:e:l:l:o: :g:o:o:d: :b:o:y: :d:o:i:i:d:o #\u5bf9\u5143\u7ec4\u8fdb\u884c\u64cd\u4f5c seq3 = ( hello , good , boy , doiido ) print : .join(seq3) hello:good:boy:doiido #\u5bf9\u5b57\u5178\u8fdb\u884c\u64cd\u4f5c seq4 = { hello :1, good :2, boy :3, doiido :4} print : .join(seq4) boy:good:doiido:hello #\u5408\u5e76\u76ee\u5f55 import os os.path.join( /hello/ , good/boy/ , doiido ) /hello/good/boy/doiido S.join(iterable) - str Return a string which is the concatenation of the strings in the iterable. The separator between elements is S. return def ljust(self, width, fillchar=None): # real signature unknown; restored from __doc__ S.ljust(width[, fillchar]) - str Return S left-justified in a Unicode string of length width. Padding is done using the specified fill character (default is a space). return def lower(self): # real signature unknown; restored from __doc__ S.lower() - str Return a copy of the string S converted to lowercase. return def lstrip(self, chars=None): # real signature unknown; restored from __doc__ S.lstrip([chars]) - str Return a copy of the string S with leading whitespace removed. If chars is given and not None, remove characters in chars instead. return def maketrans(self, *args, **kwargs): # real signature unknown Return a translation table usable for str.translate(). If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result. pass def partition(self, sep): # real signature unknown; restored from __doc__ \u4ee5sep\u4e3a\u5206\u5272\uff0c\u5c06S\u5206\u6210head,sep,tail\u4e09\u90e8\u5206 S.partition(sep) - (head, sep, tail) Search for the separator sep in S, and return the part before it, the separator itself, and the part after it. If the separator is not found, return S and two empty strings. pass def replace(self, old, new, count=None): # real signature unknown; restored from __doc__ S.replace(old, new[, count]) - str Return a copy of S with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced. return def rfind(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.rfind(sub[, start[, end]]) - int Return the highest index in S where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation. Return -1 on failure. return 0 def rindex(self, sub, start=None, end=None): # real signature unknown; restored from __doc__ S.rindex(sub[, start[, end]]) - int Like S.rfind() but raise ValueError when the substring is not found. return 0 def rjust(self, width, fillchar=None): # real signature unknown; restored from __doc__ S.rjust(width[, fillchar]) - str Return S right-justified in a string of length width. Padding is done using the specified fill character (default is a space). return def rpartition(self, sep): # real signature unknown; restored from __doc__ S.rpartition(sep) - (head, sep, tail) Search for the separator sep in S, starting at the end of S, and return the part before it, the separator itself, and the part after it. If the separator is not found, return two empty strings and S. pass def rsplit(self, sep=None, maxsplit=-1): # real signature unknown; restored from __doc__ S.rsplit(sep=None, maxsplit=-1) - list of strings Return a list of the words in S, using sep as the delimiter string, starting at the end of the string and working to the front. If maxsplit is given, at most maxsplit splits are done. If sep is not specified, any whitespace string is a separator. return [] def rstrip(self, chars=None): # real signature unknown; restored from __doc__ S.rstrip([chars]) - str Return a copy of the string S with trailing whitespace removed. If chars is given and not None, remove characters in chars instead. return def split(self, sep=None, maxsplit=-1): # real signature unknown; restored from __doc__ \u4ee5sep\u4e3a\u5206\u5272\uff0c\u5c06S\u5207\u5206\u6210\u5217\u8868\uff0c\u4e0epartition\u7684\u533a\u522b\u5728\u4e8e\u5207\u5206\u7ed3\u679c\u4e0d\u5305\u542bsep\uff0c \u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u591a\u4e2asep\u90a3\u4e48maxsplit\u4e3a\u6700\u591a\u5207\u5206\u6210\u51e0\u90e8\u5206 a= a,b c\\nd\\te a.split() [ a,b , c , d , e ] S.split(sep=None, maxsplit=-1) - list of strings Return a list of the words in S, using sep as the delimiter string. If maxsplit is given, at most maxsplit splits are done. If sep is not specified or is None, any whitespace string is a separator and empty strings are removed from the result. return [] def splitlines(self, keepends=None): # real signature unknown; restored from __doc__ Python splitlines() \u6309\u7167\u884c( \\r , \\r\\n , \\n )\u5206\u9694\uff0c \u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5404\u884c\u4f5c\u4e3a\u5143\u7d20\u7684\u5217\u8868\uff0c\u5982\u679c\u53c2\u6570 keepends \u4e3a False\uff0c\u4e0d\u5305\u542b\u6362\u884c\u7b26\uff0c\u5982 \u679c\u4e3a True\uff0c\u5219\u4fdd\u7559\u6362\u884c\u7b26\u3002 x adsfasdf\\nsadf\\nasdf\\nadf x.splitlines() [ adsfasdf , sadf , asdf , adf ] x.splitlines(True) [ adsfasdf\\n , sadf\\n , asdf\\n , adf ] S.splitlines([keepends]) - list of strings Return a list of the lines in S, breaking at line boundaries. Line breaks are not included in the resulting list unless keepends is given and true. return [] def startswith(self, prefix, start=None, end=None): # real signature unknown; restored from __doc__ S.startswith(prefix[, start[, end]]) - bool Return True if S starts with the specified prefix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. prefix can also be a tuple of strings to try. return False def strip(self, chars=None): # real signature unknown; restored from __doc__ S.strip([chars]) - str Return a copy of the string S with leading and trailing whitespace removed. If chars is given and not None, remove characters in chars instead. return def swapcase(self): # real signature unknown; restored from __doc__ \u5927\u5c0f\u5199\u53cd\u8f6c S.swapcase() - str Return a copy of S with uppercase characters converted to lowercase and vice versa. return def title(self): # real signature unknown; restored from __doc__ S.title() - str Return a titlecased version of S, i.e. words start with title case characters, all remaining cased characters have lower case. return def translate(self, table): # real signature unknown; restored from __doc__ maketrans() \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u5b57\u7b26\u6620\u5c04\u7684\u8f6c\u6362\u8868\uff0c\u5bf9\u4e8e\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u6700\u7b80\u5355\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u9700\u8981\u8f6c\u6362\u7684\u5b57\u7b26\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e5f\u662f\u5b57\u7b26\u4e32\u8868\u793a\u8f6c\u6362\u7684\u76ee\u6807\u3002 \u6ce8\uff1a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5fc5\u987b\u76f8\u540c\uff0c\u4e3a\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u7136\u540e\u4f7f\u7528translate\u8fdb\u884c\u6309\u7167\u89c4\u5219\u8f6c\u6362 table=str.maketrans( alex , big SB ) a= hello abc print(a.translate(table)) S.translate(table) - str Return a copy of the string S in which each character has been mapped through the given translation table. The table must implement lookup/indexing via __getitem__, for instance a dictionary or list, mapping Unicode ordinals to Unicode ordinals, strings, or None. If this operation raises LookupError, the character is left untouched. Characters mapped to None are deleted. return def upper(self): # real signature unknown; restored from __doc__ S.upper() - str Return a copy of S converted to uppercase. return def zfill(self, width): # real signature unknown; restored from __doc__ \u539f\u6765\u5b57\u7b26\u53f3\u5bf9\u9f50\uff0c\u4e0d\u591f\u75280\u8865\u9f50 S.zfill(width) - str Pad a numeric string S with zeros on the left, to fill a field of the specified width. The string S is never truncated. return def __add__(self, *args, **kwargs): # real signature unknown Return self+value. pass def __contains__(self, *args, **kwargs): # real signature unknown Return key in self. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __format__(self, format_spec): # real signature unknown; restored from __doc__ S.__format__(format_spec) - str Return a formatted version of S as described by format_spec. return def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, *args, **kwargs): # real signature unknown Return self[key]. pass def __getnewargs__(self, *args, **kwargs): # real signature unknown pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __hash__(self, *args, **kwargs): # real signature unknown Return hash(self). pass def __init__(self, value= , encoding=None, errors= strict ): # known special case of str.__init__ str(object= ) - str str(bytes_or_buffer[, encoding[, errors]]) - str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.__str__() (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to strict . # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __mod__(self, *args, **kwargs): # real signature unknown Return self%value. pass def __mul__(self, *args, **kwargs): # real signature unknown Return self*value.n pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __rmod__(self, *args, **kwargs): # real signature unknown Return value%self. pass def __rmul__(self, *args, **kwargs): # real signature unknown Return self*value. pass def __sizeof__(self): # real signature unknown; restored from __doc__ S.__sizeof__() - size of S in memory, in bytes pass def __str__(self, *args, **kwargs): # real signature unknown Return str(self). pass","title":"\u5b57\u7b26\u4e32"},{"location":"python/python3/#_6","text":"\u5b9a\u4e49\uff1a[]\u5185\u4ee5\u9017\u53f7\u5206\u9694\uff0c\u6309\u7167\u7d22\u5f15\uff0c\u5b58\u653e\u5404\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u4ee3\u8868\u4e00\u4e2a\u5143\u7d20 \u7279\u6027\uff1a 1.\u53ef\u5b58\u653e\u591a\u4e2a\u503c 2.\u53ef\u4fee\u6539\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u5bf9\u5e94\u7684\u503c\uff0c\u53ef\u53d8 3.\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5b9a\u4e49\u5217\u8868\u5143\u7d20\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u5e8f \u5217\u8868\u7684\u521b\u5efa \u4e09\u79cd\u65b9\u5f0f list_test=[ jjj ,12, ok ] \u6216 list_test=list( abc ) \u6216 list_test=list([ jjj ,12, ok ]) \u5e38\u89c1\u64cd\u4f5c \u7d22\u5f15 \u5207\u7247 \u8ffd\u52a0 \u5220\u9664 \u957f\u5ea6 \u5207\u7247 \u5faa\u73af \u5305\u542b \u5e38\u7528\u65b9\u6cd5 class list(object): list() - new empty list list(iterable) - new list initialized from iterable s items def append(self, p_object): # real signature unknown; restored from __doc__ L.append(object) - None -- append object to end pass def clear(self): # real signature unknown; restored from __doc__ L.clear() - None -- remove all items from L pass def copy(self): # real signature unknown; restored from __doc__ L.copy() - list -- a shallow copy of L return [] def count(self, value): # real signature unknown; restored from __doc__ L.count(value) - integer -- return number of occurrences of value return 0 def extend(self, iterable): # real signature unknown; restored from __doc__ L.extend(iterable) - None -- extend list by appending elements from the iterable pass def index(self, value, start=None, stop=None): # real signature unknown; restored from __doc__ L.index(value, [start, [stop]]) - integer -- return first index of value. Raises ValueError if the value is not present. return 0 def insert(self, index, p_object): # real signature unknown; restored from __doc__ L.insert(index, object) -- insert object before index pass def pop(self, index=None): # real signature unknown; restored from __doc__ L.pop([index]) - item -- remove and return item at index (default last). Raises IndexError if list is empty or index is out of range. pass def remove(self, value): # real signature unknown; restored from __doc__ L.remove(value) - None -- remove first occurrence of value. Raises ValueError if the value is not present. pass def reverse(self): # real signature unknown; restored from __doc__ L.reverse() -- reverse *IN PLACE* pass def sort(self, key=None, reverse=False): # real signature unknown; restored from __doc__ L.sort(key=None, reverse=False) - None -- stable sort *IN PLACE* pass def __add__(self, *args, **kwargs): # real signature unknown Return self+value. pass def __contains__(self, *args, **kwargs): # real signature unknown Return key in self. pass def __delitem__(self, *args, **kwargs): # real signature unknown Delete self[key]. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, y): # real signature unknown; restored from __doc__ x.__getitem__(y) == x[y] pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __iadd__(self, *args, **kwargs): # real signature unknown Implement self+=value. pass def __imul__(self, *args, **kwargs): # real signature unknown Implement self*=value. pass def __init__(self, seq=()): # known special case of list.__init__ list() - new empty list list(iterable) - new list initialized from iterable s items # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __mul__(self, *args, **kwargs): # real signature unknown Return self*value.n pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __reversed__(self): # real signature unknown; restored from __doc__ L.__reversed__() -- return a reverse iterator over the list pass def __rmul__(self, *args, **kwargs): # real signature unknown Return self*value. pass def __setitem__(self, *args, **kwargs): # real signature unknown Set self[key] to value. pass def __sizeof__(self): # real signature unknown; restored from __doc__ L.__sizeof__() -- size of L in memory, in bytes pass __hash__ = None \u67e5\u770b","title":"\u5217\u8868"},{"location":"python/python3/#_7","text":"\u5b9a\u4e49\uff1a\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\uff3b\uff3d\u6539\u6210\uff08\uff09 \u7279\u6027\uff1a 1.\u53ef\u5b58\u653e\u591a\u4e2a\u503c 2.\u4e0d\u53ef\u53d8 3.\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5b9a\u4e49\u5143\u7ec4\u5143\u7d20\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\u987a\u5e8f\u8bbf\u95ee\uff0c\u6709\u5e8f \u521b\u5efa\u5143\u7956 ages = (11, 22, 33, 44, 55) \u6216 ages = tuple((11, 22, 33, 44, 55)) \u5e38\u7528\u64cd\u4f5c \u7d22\u5f15 \u5207\u7247 \u5faa\u73af \u957f\u5ea6 \u5305\u542b \u5e38\u7528\u65b9\u6cd5 class tuple(object): tuple() - empty tuple tuple(iterable) - tuple initialized from iterable s items If the argument is a tuple, the return value is the same object. def count(self, value): # real signature unknown; restored from __doc__ T.count(value) - integer -- return number of occurrences of value return 0 def index(self, value, start=None, stop=None): # real signature unknown; restored from __doc__ T.index(value, [start, [stop]]) - integer -- return first index of value. Raises ValueError if the value is not present. return 0 def __add__(self, *args, **kwargs): # real signature unknown Return self+value. pass def __contains__(self, *args, **kwargs): # real signature unknown Return key in self. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, *args, **kwargs): # real signature unknown Return self[key]. pass def __getnewargs__(self, *args, **kwargs): # real signature unknown pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __hash__(self, *args, **kwargs): # real signature unknown Return hash(self). pass def __init__(self, seq=()): # known special case of tuple.__init__ tuple() - empty tuple tuple(iterable) - tuple initialized from iterable s items If the argument is a tuple, the return value is the same object. # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __mul__(self, *args, **kwargs): # real signature unknown Return self*value.n pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __rmul__(self, *args, **kwargs): # real signature unknown Return self*value. pass","title":"\u5143\u7956"},{"location":"python/python3/#_8","text":"\u5b9a\u4e49\uff1a\uff5bkey1:value1,key2:value2\uff5d,key-value\u7ed3\u6784\uff0ckey\u5fc5\u987b\u53efhash \u7279\u6027\uff1a 1.\u53ef\u5b58\u653e\u591a\u4e2a\u503c 2.\u53ef\u4fee\u6539\u6307\u5b9akey\u5bf9\u5e94\u7684\u503c\uff0c\u53ef\u53d8 3.\u65e0\u5e8f \u5b57\u5178\u7684\u521b\u5efa person = { name : sb , age : 18} \u6216 person = dict(name= sb , age=18) person = dict({ name : sb , age : 18}) person = dict(([ name , sb ],[ age ,18])) {}.fromkeys(seq,100) #\u4e0d\u6307\u5b9a100\u9ed8\u8ba4\u4e3aNone \u6ce8\u610f\uff1a dic={}.fromkeys([ k1 , k2 ],[]) dic { k1 : [], k2 : []} dic[ k1 ].append(1) dic { k1 : [1], k2 : [1]} \u5b57\u5178\u5e38\u7528\u64cd\u4f5c \u7d22\u5f15 \u65b0\u589e \u5220\u9664 \u952e\u3001\u503c\u3001\u952e\u503c\u5bf9 \u5faa\u73af \u957f\u5ea6 \u5b57\u5178\u5de5\u5382\u51fd\u6570dict() class dict(object): dict() - new empty dictionary dict(mapping) - new dictionary initialized from a mapping object s (key, value) pairs dict(iterable) - new dictionary initialized as if via: d = {} for k, v in iterable: d[k] = v dict(**kwargs) - new dictionary initialized with the name=value pairs in the keyword argument list. For example: dict(one=1, two=2) def clear(self): # real signature unknown; restored from __doc__ D.clear() - None. Remove all items from D. pass def copy(self): # real signature unknown; restored from __doc__ D.copy() - a shallow copy of D pass @staticmethod # known case def fromkeys(*args, **kwargs): # real signature unknown Returns a new dict with keys from iterable and values equal to value. pass def get(self, k, d=None): # real signature unknown; restored from __doc__ D.get(k[,d]) - D[k] if k in D, else d. d defaults to None. pass def items(self): # real signature unknown; restored from __doc__ D.items() - a set-like object providing a view on D s items pass def keys(self): # real signature unknown; restored from __doc__ D.keys() - a set-like object providing a view on D s keys pass def pop(self, k, d=None): # real signature unknown; restored from __doc__ D.pop(k[,d]) - v, remove specified key and return the corresponding value. If key is not found, d is returned if given, otherwise KeyError is raised pass def popitem(self): # real signature unknown; restored from __doc__ D.popitem() - (k, v), remove and return some (key, value) pair as a 2-tuple; but raise KeyError if D is empty. pass def setdefault(self, k, d=None): # real signature unknown; restored from __doc__ D.setdefault(k[,d]) - D.get(k,d), also set D[k]=d if k not in D pass def update(self, E=None, **F): # known special case of dict.update D.update([E, ]**F) - None. Update D from dict/iterable E and F. If E is present and has a .keys() method, then does: for k in E: D[k] = E[k] If E is present and lacks a .keys() method, then does: for k, v in E: D[k] = v In either case, this is followed by: for k in F: D[k] = F[k] pass def values(self): # real signature unknown; restored from __doc__ D.values() - an object providing a view on D s values pass def __contains__(self, *args, **kwargs): # real signature unknown True if D has a key k, else False. pass def __delitem__(self, *args, **kwargs): # real signature unknown Delete self[key]. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __getitem__(self, y): # real signature unknown; restored from __doc__ x.__getitem__(y) == x[y] pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __init__(self, seq=None, **kwargs): # known special case of dict.__init__ dict() - new empty dictionary dict(mapping) - new dictionary initialized from a mapping object s (key, value) pairs dict(iterable) - new dictionary initialized as if via: d = {} for k, v in iterable: d[k] = v dict(**kwargs) - new dictionary initialized with the name=value pairs in the keyword argument list. For example: dict(one=1, two=2) # (copied from class doc) pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __setitem__(self, *args, **kwargs): # real signature unknown Set self[key] to value. pass def __sizeof__(self): # real signature unknown; restored from __doc__ D.__sizeof__() - size of D in memory, in bytes pass __hash__ = None","title":"\u5b57\u5178"},{"location":"python/python3/#_9","text":"{1,2,3,1} \u6216 \u5b9a\u4e49\u53ef\u53d8\u96c6\u5408set set_test=set( hello ) set_test { l , o , e , h } \u6539\u4e3a\u4e0d\u53ef\u53d8\u96c6\u5408frozenset f_set_test=frozenset(set_test) f_set_test frozenset({ l , e , h , o }) \u5e38\u7528\u64cd\u4f5c \u3000 in not in \uff1d\uff1d \uff01\uff1d , = , = |,|=:\u5408\u96c6 . =:\u4ea4\u96c6 \uff0d,\uff0d=:\u5dee\u96c6 ^,^=:\u5bf9\u79f0\u5dee\u5206 \u65b9\u6cd5\u5982\u4e0b class set(object): set() - new empty set object set(iterable) - new set object Build an unordered collection of unique elements. def add(self, *args, **kwargs): # real signature unknown Add an element to a set. This has no effect if the element is already present. pass def clear(self, *args, **kwargs): # real signature unknown Remove all elements from this set. pass def copy(self, *args, **kwargs): # real signature unknown Return a shallow copy of a set. pass def difference(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1-s2 Return the difference of two or more sets as a new set. (i.e. all elements that are in this set but not the others.) pass def difference_update(self, *args, **kwargs): # real signature unknown Remove all elements of another set from this set. pass def discard(self, *args, **kwargs): # real signature unknown \u4e0eremove\u529f\u80fd\u76f8\u540c\uff0c\u5220\u9664\u5143\u7d20\u4e0d\u5b58\u5728\u65f6\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38 Remove an element from a set if it is a member. If the element is not a member, do nothing. pass def intersection(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1 s2 Return the intersection of two sets as a new set. (i.e. all elements that are in both sets.) pass def intersection_update(self, *args, **kwargs): # real signature unknown Update a set with the intersection of itself and another. pass def isdisjoint(self, *args, **kwargs): # real signature unknown Return True if two sets have a null intersection. pass def issubset(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1 =s2 Report whether another set contains this set. pass def issuperset(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1 =s2 Report whether this set contains another set. pass def pop(self, *args, **kwargs): # real signature unknown Remove and return an arbitrary set element. Raises KeyError if the set is empty. pass def remove(self, *args, **kwargs): # real signature unknown Remove an element from a set; it must be a member. If the element is not a member, raise a KeyError. pass def symmetric_difference(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1^s2 Return the symmetric difference of two sets as a new set. (i.e. all elements that are in exactly one of the sets.) pass def symmetric_difference_update(self, *args, **kwargs): # real signature unknown Update a set with the symmetric difference of itself and another. pass def union(self, *args, **kwargs): # real signature unknown \u76f8\u5f53\u4e8es1|s2 Return the union of sets as a new set. (i.e. all elements that are in either set.) pass def update(self, *args, **kwargs): # real signature unknown Update a set with the union of itself and others. pass def __and__(self, *args, **kwargs): # real signature unknown Return self value. pass def __contains__(self, y): # real signature unknown; restored from __doc__ x.__contains__(y) == y in x. pass def __eq__(self, *args, **kwargs): # real signature unknown Return self==value. pass def __getattribute__(self, *args, **kwargs): # real signature unknown Return getattr(self, name). pass def __ge__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __gt__(self, *args, **kwargs): # real signature unknown Return self value. pass def __iand__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __init__(self, seq=()): # known special case of set.__init__ set() - new empty set object set(iterable) - new set object Build an unordered collection of unique elements. # (copied from class doc) pass def __ior__(self, *args, **kwargs): # real signature unknown Return self|=value. pass def __isub__(self, *args, **kwargs): # real signature unknown Return self-=value. pass def __iter__(self, *args, **kwargs): # real signature unknown Implement iter(self). pass def __ixor__(self, *args, **kwargs): # real signature unknown Return self^=value. pass def __len__(self, *args, **kwargs): # real signature unknown Return len(self). pass def __le__(self, *args, **kwargs): # real signature unknown Return self =value. pass def __lt__(self, *args, **kwargs): # real signature unknown Return self value. pass @staticmethod # known case of __new__ def __new__(*args, **kwargs): # real signature unknown Create and return a new object. See help(type) for accurate signature. pass def __ne__(self, *args, **kwargs): # real signature unknown Return self!=value. pass def __or__(self, *args, **kwargs): # real signature unknown Return self|value. pass def __rand__(self, *args, **kwargs): # real signature unknown Return value self. pass def __reduce__(self, *args, **kwargs): # real signature unknown Return state information for pickling. pass def __repr__(self, *args, **kwargs): # real signature unknown Return repr(self). pass def __ror__(self, *args, **kwargs): # real signature unknown Return value|self. pass def __rsub__(self, *args, **kwargs): # real signature unknown Return value-self. pass def __rxor__(self, *args, **kwargs): # real signature unknown Return value^self. pass def __sizeof__(self): # real signature unknown; restored from __doc__ S.__sizeof__() - size of S in memory, in bytes pass def __sub__(self, *args, **kwargs): # real signature unknown Return self-value. pass def __xor__(self, *args, **kwargs): # real signature unknown Return self^value. pass __hash__ = None","title":"\u96c6\u5408"},{"location":"python/python3/#byte","text":"\u5b9a\u4e49\uff1a\u5b588bit\u6574\u6570\uff0c\u6570\u636e\u57fa\u4e8e\u7f51\u7edc\u4f20\u8f93\u6216\u5185\u5b58\u53d8\u91cf\u5b58\u50a8\u5230\u786c\u76d8\u65f6\u9700\u8981\u8f6c\u6210bytes\u7c7b\u578b,\u5b57\u7b26\u4e32\u524d\u7f6eb\u4ee3\u8868\u4e3abytes\u7c7b\u578b x hello sb x.encode( gb2312 ) b hello sb","title":"byte\u7c7b\u578b"},{"location":"python/python3/#_10","text":"\u5185\u7f6e\u8f6c\u6362\u8868","title":"\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u5185\u7f6e\u8868"},{"location":"python/python3/#_11","text":"","title":"\u8fd0\u7b97\u7b26"},{"location":"syntax/code_block/","text":"4\u4e2a\u7a7a\u683c \u5728\u6bcf\u884c\u524d\u9762\u52a0\u4e0a4\u4e2a\u7a7a\u683c text = Hello, world! print text \u6548\u679c text = Hello, world! print text 3\u4e2a ` ```text text = Hello, world! print text ``` \u6548\u679c text = Hello, world! print text \u6ce81: \u652f\u6301\u4ee3\u7801\u9ad8\u4eae \uff0c\u8be6\u89c1\" \u533a\u5757\u4ee3\u7801\u9ad8\u4eae \" \u6ce82: \u5982\u679c\u4ee3\u7801\u533a\u5757\u4e0a\u65b9\u662f\u5217\u8868\uff0c\u5982 \u65e0\u5e8f\u5217\u8868 \u6216 \u6709\u5e8f\u5217\u8868 \uff0c\u90a3\u4e484\u4e2a\u7a7a\u683c\u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a\u4ee3\u7801\u533a\u5757\uff0c\u800c\u662f\u88ab\u89e3\u6790\u4e3a\u4e00\u4e2a\u666e\u901a\u7f29\u8fdb","title":"6.2. \u533a\u5757"},{"location":"syntax/code_block/#4","text":"\u5728\u6bcf\u884c\u524d\u9762\u52a0\u4e0a4\u4e2a\u7a7a\u683c text = Hello, world! print text \u6548\u679c text = Hello, world! print text","title":"4\u4e2a\u7a7a\u683c"},{"location":"syntax/code_block/#3","text":"```text text = Hello, world! print text ``` \u6548\u679c text = Hello, world! print text \u6ce81: \u652f\u6301\u4ee3\u7801\u9ad8\u4eae \uff0c\u8be6\u89c1\" \u533a\u5757\u4ee3\u7801\u9ad8\u4eae \" \u6ce82: \u5982\u679c\u4ee3\u7801\u533a\u5757\u4e0a\u65b9\u662f\u5217\u8868\uff0c\u5982 \u65e0\u5e8f\u5217\u8868 \u6216 \u6709\u5e8f\u5217\u8868 \uff0c\u90a3\u4e484\u4e2a\u7a7a\u683c\u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a\u4ee3\u7801\u533a\u5757\uff0c\u800c\u662f\u88ab\u89e3\u6790\u4e3a\u4e00\u4e2a\u666e\u901a\u7f29\u8fdb","title":"3\u4e2a `"},{"location":"syntax/code_highlight/","text":"\u9ad8\u4eae\u90e8\u5206\u8be6\u89c1 \u4ee3\u7801\u9ad8\u4eae \u7ae0\u8282","title":"6.3. \u9ad8\u4eae"},{"location":"syntax/code_inline/","text":"\u5728\u4e00\u884c\u5185\u8981\u6807\u8bb0\u7684\u6587\u672c\u524d\u540e\u5404\u52a0\u4e00\u4e2a ` AAA`BBB`CCC \u6548\u679c\uff1a AAA BBB CCC \u6ce8: \u652f\u6301\u4ee3\u7801\u9ad8\u4eae \uff0c\u8be6\u89c1\" \u884c\u5185\u4ee3\u7801\u9ad8\u4eae \"","title":"6.1. \u884c\u5185"},{"location":"syntax/cutline/","text":"\u5206\u5272\u7ebf\u4f7f\u7528\u4e09\u4e2a\u6216\u4ee5\u4e0a * \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 - \u548c _ \uff0c\u4e0b\u9762\u4ec5\u4ee5 - \u4f5c\u4e3a\u793a\u4f8b --- \u6548\u679c","title":"9. \u5206\u5272\u7ebf"},{"location":"syntax/emoji_main/","text":"\u4ec0\u4e48\u662femoji emoji\u662f\u65e5\u672c\u5728\u65e0\u7ebf\u901a\u4fe1\u4e2d\u6240\u4f7f\u7528\u7684\u89c6\u89c9\u60c5\u611f\u7b26\u53f7\uff0c\u5df2\u88abunicode\u91c7\u7eb3\uff0c\u5f53\u524dunicode\u5305\u542b\u4e86\u975e\u5e38\u591a\u7684emoji\u56fe\u6807\uff0c\u6bcf\u4e00\u6b21unicode\u66f4\u65b0\u90fd\u4f1a\u53d1\u5e03\u65b0\u7684emoji\u56fe\u6807\u3002\u53ea\u8981\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301unicode\uff0c\u5c31\u80fd\u5728\u4efb\u610f\u4f7f\u7528unicode\u7f16\u7801\u7684\u5730\u65b9\u770b\u5230\u6f02\u4eae\u7684\u5f69\u8272\u56fe\u6807\uff0c\u6bd4\u5982\u6587\u672c\u3001mysql\u8868\u91cc\u3001\u7f51\u9875\u3002 emoji\u73b0\u72b6 \u867d\u7136unicode\u5b98\u7f51\u53ef\u4ee5\u67e5\u5230\u6240\u6709emoji\u56fe\u6807\uff0c\u4f46\u5e76\u672a\u63d0\u4f9b\u4e00\u4e2a\u4fbf\u5229\u7684\u56fe\u6807\u5206\u7c7b\u67e5\u8be2\u548c\u4f7f\u7528\u65b9\u6cd5\u3002\u56e0\u6b64\u5c31\u6709\u4e00\u4e9b\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5c06\u90e8\u5206emoji\u56fe\u6807\uff0c\u5236\u4f5c\u6210\u4e0d\u540c\u683c\u5f0f\u3001\u4e0d\u540c\u5c3a\u5bf8(\u4f8b\u598264x64 PNG\u3001128x128 PNG\u6216SVG\u7b49\u683c\u5f0f)\u7684\u56fe\u7247\u653e\u5165\u81ea\u5df1\u7684CDN\u5e93\u3002\u7136\u540e\u5c06\u8fd9\u4e9bCDN\u56fe\u7247\u4ee5\u514d\u8d39\u6216\u4ed8\u8d39\u65b9\u5f0f\u5bf9\u5916\u63d0\u4f9b\u3002 \u5982\u4f55\u83b7\u5f97emoji \u6839\u636e\u4f7f\u7528\u9700\u6c42\u5206\u4e3a2\u79cd: \u4e0d\u6ee1\u8db3\u4e8eunicode\u7684emoji\u56fe\u6807\uff0c\u5e0c\u671b\u66f4\u597d\u770b\uff0c\u5e76\u4e14\u5c3a\u5bf8\u53ef\u9009\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5e93\uff0c\u63a8\u8350\u4f7f\u7528EmojiOne\u7684png\u56fe\u5e93\uff0c\u5206\u4e3a\u514d\u8d39\u548c\u4ed8\u8d39\uff0c\u5176\u4e2d\u514d\u8d39\u7684\u56fe\u5e93\u5df2\u8db3\u591f\u6ee1\u8db3\u4e00\u822c\u6027\u4f7f\u7528\u9700\u6c42\uff0c\u5982\u679c\u60f3\u4f7f\u7528svg\uff0c\u514d\u8d39\u7684\u53ea\u6709EmojiOne-2.2.7\u4ee5\u5185\u7248\u672c\uff0c\u6700\u65b0\u7684svg\u90fd\u662f\u8981\u4ed8\u8d39\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\u662f\u5728\u6587\u6863\u91cc\u7528 :\u77ed\u540d \u6765\u8ba9mkdocs\u81ea\u52a8\u5339\u914d\u5e76\u6e32\u67d3\u4e3a \u6807\u7b7e \u4e3e\u4f8b\u8bf4\u660e2.2.7\u4e0e\u9ad8\u7248\u672c\u533a\u522b \u5982\u679c\u7528\u7684 :\u77ed\u540d: \u662f2.2.7\u5305\u542b\u7684\uff0c\u90a3\u4e48\u56fe\u6807\u80fd\u6b63\u5e38\u663e\u793a\uff0c\u5426\u5219\u663e\u793a\u4e0d\u51fa\u6765 \u6bd4\u5982\uff1a https://cdn.jsdelivr.net/emojione/assets/svg/1f600.svg \u8fd9\u4e2a\u662f2.2.7\u5c31\u6709\u7684\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 https://cdn.jsdelivr.net/emojione/assets/svg/1f92e.svg \u8fd9\u4e2a\u662f2.2.7\u4e4b\u540e\u624d\u6709\u7684\uff0c\u9700\u8981\u4ed8\u8d39\u624d\u80fd\u83b7\u5f97\u56fe\u6807\uff0c\u672a\u4ed8\u8d39\u76f4\u63a5\u8bbf\u95ee\u4f1a\u5f97\u5230\u62a5\u9519\uff1a https://cdn.jsdelivr.net/emojione/assets/3.1/png/64/1f92e.png \u8fd9\u4e2a\u662fpng\uff0c\u4e0d\u5c5e\u4e8e\u4ed8\u8d39\u90e8\u5206\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 \u56e0\u6b64\u63a8\u8350\u7684\u6700\u4f73\u5165\u95e8\u5b9e\u8df5\u5e94\u5f53\u662f\u9996\u9009png\u3002 \u80fd\u591f\u63a5\u53d7unicode\u7684emoji\u56fe\u6807\uff0c\u5c31\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u5c06\u56fe\u6807\u590d\u5236\u7c98\u8d34\u5230\u6587\u672c\u91cc\u5373\u53ef \u8fd92\u79cd\u65b9\u6cd5\u5e76\u4e0d\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2amarkdown\u6587\u672c\u91cc\u6df7\u5408\u4f7f\u7528","title":"18.1. \u4ecb\u7ecd"},{"location":"syntax/emoji_main/#emoji","text":"emoji\u662f\u65e5\u672c\u5728\u65e0\u7ebf\u901a\u4fe1\u4e2d\u6240\u4f7f\u7528\u7684\u89c6\u89c9\u60c5\u611f\u7b26\u53f7\uff0c\u5df2\u88abunicode\u91c7\u7eb3\uff0c\u5f53\u524dunicode\u5305\u542b\u4e86\u975e\u5e38\u591a\u7684emoji\u56fe\u6807\uff0c\u6bcf\u4e00\u6b21unicode\u66f4\u65b0\u90fd\u4f1a\u53d1\u5e03\u65b0\u7684emoji\u56fe\u6807\u3002\u53ea\u8981\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301unicode\uff0c\u5c31\u80fd\u5728\u4efb\u610f\u4f7f\u7528unicode\u7f16\u7801\u7684\u5730\u65b9\u770b\u5230\u6f02\u4eae\u7684\u5f69\u8272\u56fe\u6807\uff0c\u6bd4\u5982\u6587\u672c\u3001mysql\u8868\u91cc\u3001\u7f51\u9875\u3002","title":"\u4ec0\u4e48\u662femoji"},{"location":"syntax/emoji_main/#emoji_1","text":"\u867d\u7136unicode\u5b98\u7f51\u53ef\u4ee5\u67e5\u5230\u6240\u6709emoji\u56fe\u6807\uff0c\u4f46\u5e76\u672a\u63d0\u4f9b\u4e00\u4e2a\u4fbf\u5229\u7684\u56fe\u6807\u5206\u7c7b\u67e5\u8be2\u548c\u4f7f\u7528\u65b9\u6cd5\u3002\u56e0\u6b64\u5c31\u6709\u4e00\u4e9b\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5c06\u90e8\u5206emoji\u56fe\u6807\uff0c\u5236\u4f5c\u6210\u4e0d\u540c\u683c\u5f0f\u3001\u4e0d\u540c\u5c3a\u5bf8(\u4f8b\u598264x64 PNG\u3001128x128 PNG\u6216SVG\u7b49\u683c\u5f0f)\u7684\u56fe\u7247\u653e\u5165\u81ea\u5df1\u7684CDN\u5e93\u3002\u7136\u540e\u5c06\u8fd9\u4e9bCDN\u56fe\u7247\u4ee5\u514d\u8d39\u6216\u4ed8\u8d39\u65b9\u5f0f\u5bf9\u5916\u63d0\u4f9b\u3002","title":"emoji\u73b0\u72b6"},{"location":"syntax/emoji_main/#emoji_2","text":"\u6839\u636e\u4f7f\u7528\u9700\u6c42\u5206\u4e3a2\u79cd: \u4e0d\u6ee1\u8db3\u4e8eunicode\u7684emoji\u56fe\u6807\uff0c\u5e0c\u671b\u66f4\u597d\u770b\uff0c\u5e76\u4e14\u5c3a\u5bf8\u53ef\u9009\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u7b2c\u4e09\u65b9emoji\u5382\u5546\u5e93\uff0c\u63a8\u8350\u4f7f\u7528EmojiOne\u7684png\u56fe\u5e93\uff0c\u5206\u4e3a\u514d\u8d39\u548c\u4ed8\u8d39\uff0c\u5176\u4e2d\u514d\u8d39\u7684\u56fe\u5e93\u5df2\u8db3\u591f\u6ee1\u8db3\u4e00\u822c\u6027\u4f7f\u7528\u9700\u6c42\uff0c\u5982\u679c\u60f3\u4f7f\u7528svg\uff0c\u514d\u8d39\u7684\u53ea\u6709EmojiOne-2.2.7\u4ee5\u5185\u7248\u672c\uff0c\u6700\u65b0\u7684svg\u90fd\u662f\u8981\u4ed8\u8d39\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\u662f\u5728\u6587\u6863\u91cc\u7528 :\u77ed\u540d \u6765\u8ba9mkdocs\u81ea\u52a8\u5339\u914d\u5e76\u6e32\u67d3\u4e3a \u6807\u7b7e \u4e3e\u4f8b\u8bf4\u660e2.2.7\u4e0e\u9ad8\u7248\u672c\u533a\u522b \u5982\u679c\u7528\u7684 :\u77ed\u540d: \u662f2.2.7\u5305\u542b\u7684\uff0c\u90a3\u4e48\u56fe\u6807\u80fd\u6b63\u5e38\u663e\u793a\uff0c\u5426\u5219\u663e\u793a\u4e0d\u51fa\u6765 \u6bd4\u5982\uff1a https://cdn.jsdelivr.net/emojione/assets/svg/1f600.svg \u8fd9\u4e2a\u662f2.2.7\u5c31\u6709\u7684\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 https://cdn.jsdelivr.net/emojione/assets/svg/1f92e.svg \u8fd9\u4e2a\u662f2.2.7\u4e4b\u540e\u624d\u6709\u7684\uff0c\u9700\u8981\u4ed8\u8d39\u624d\u80fd\u83b7\u5f97\u56fe\u6807\uff0c\u672a\u4ed8\u8d39\u76f4\u63a5\u8bbf\u95ee\u4f1a\u5f97\u5230\u62a5\u9519\uff1a https://cdn.jsdelivr.net/emojione/assets/3.1/png/64/1f92e.png \u8fd9\u4e2a\u662fpng\uff0c\u4e0d\u5c5e\u4e8e\u4ed8\u8d39\u90e8\u5206\uff0c\u8bbf\u95ee\u8fd9\u4e2aurl\u53ef\u4ee5\u770b\u5230\u56fe\u6807 \u56e0\u6b64\u63a8\u8350\u7684\u6700\u4f73\u5165\u95e8\u5b9e\u8df5\u5e94\u5f53\u662f\u9996\u9009png\u3002 \u80fd\u591f\u63a5\u53d7unicode\u7684emoji\u56fe\u6807\uff0c\u5c31\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u5c06\u56fe\u6807\u590d\u5236\u7c98\u8d34\u5230\u6587\u672c\u91cc\u5373\u53ef \u8fd92\u79cd\u65b9\u6cd5\u5e76\u4e0d\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2amarkdown\u6587\u672c\u91cc\u6df7\u5408\u4f7f\u7528","title":"\u5982\u4f55\u83b7\u5f97emoji"},{"location":"syntax/emoji_principle/","text":"\u672c\u6587\u4e2d\u4e3b\u8981\u4ecb\u7ecdmkdocs\u4f9d\u8d56pymdownx.emoji\u8fdb\u884c\u5339\u914d\u3001\u6e32\u67d3\uff0c\u56e0\u6b64\u4e0b\u9762\u7684\u8bf4\u660e\u5747\u662f\u5173\u4e8epymdownx.emoji\u3002 pymdownx\u652f\u63013\u4e2a\u4e3b\u6d41\u7684emoji\u5382\u5546\uff1aGemoji\uff08github.com\u505a\u7684\uff09\u3001EmojiOne\uff08\u7b2c\u4e09\u65b9\u7684\uff0c\u5206\u4e3a\u514d\u8d39\u7248\u3001\u4ed8\u8d39\u7248\u3001\u6218\u7565\u5408\u4f5c\u7248\uff09\u3001Twemoji\uff08twitter\u505a\u7684\uff09\uff0cpymdownx\u5b98\u65b9\u63a8\u8350\u7528EmojiOne\uff0c\u9ed8\u8ba4\u4e5f\u662fEmojiOne \u67092\u4e2a\u5173\u952e\u53c2\u6570 emoji_index\uff0c\u9009\u62e9emoji\u5382\u5546\uff0c\u9ed8\u8ba4\u4e3aEmojiOne emoji_generator\uff0c\u9009\u62e9\u5382\u5546\u5bf9\u5e94\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u9ed8\u8ba4\u4e3ato_png generator\u67093\u7c7b to_png/to_svg : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 unicode\u7801\u88ab\u8f6c\u4e3aemoji_index\u5bf9\u5e94\u7684\u56fe\u7247CDN\u5730\u5740(Gemoji/EmojiOne/Twemoji\u90fd\u6709\u5404\u81ea\u7684CDN) \u6e32\u67d3\u6210html\u65f6\u5019\u56fe\u7247\u5730\u5740\u88ab\u5199\u5165 \u6807\u7b7e to_png_sprite/to_svg_sprite : \u6682\u4e0d\u4e86\u89e3 to_alt : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 \u6e32\u67d3\u6210html\u65f6\u5019unicode\u7801\u88ab\u76f4\u63a5\u5199\u5165 \u6807\u7b7e to_alt\u6548\u679c\u7b49\u540c\u4e8e\u76f4\u63a5\u5c06emoji\u56fe\u6807\u590d\u5236\u5230markdown\u6587\u6863\u4e2d","title":"18.2. \u5de5\u4f5c\u539f\u7406"},{"location":"syntax/emoji_principle/#2","text":"emoji_index\uff0c\u9009\u62e9emoji\u5382\u5546\uff0c\u9ed8\u8ba4\u4e3aEmojiOne emoji_generator\uff0c\u9009\u62e9\u5382\u5546\u5bf9\u5e94\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u9ed8\u8ba4\u4e3ato_png","title":"\u67092\u4e2a\u5173\u952e\u53c2\u6570"},{"location":"syntax/emoji_principle/#generator3","text":"to_png/to_svg : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 unicode\u7801\u88ab\u8f6c\u4e3aemoji_index\u5bf9\u5e94\u7684\u56fe\u7247CDN\u5730\u5740(Gemoji/EmojiOne/Twemoji\u90fd\u6709\u5404\u81ea\u7684CDN) \u6e32\u67d3\u6210html\u65f6\u5019\u56fe\u7247\u5730\u5740\u88ab\u5199\u5165 \u6807\u7b7e to_png_sprite/to_svg_sprite : \u6682\u4e0d\u4e86\u89e3 to_alt : markdown\u5728\u6e32\u67d3\u65f6\u5019\uff0c\u5176\u4e2d\u7684 :\u77ed\u540d: \u6839\u636eemoji_index(\u5373Gemoji/EmojiOne/Twemoji)\u88ab\u6620\u5c04\u4e3a\u76f8\u5e94\u7684unicode\u7801 \u6e32\u67d3\u6210html\u65f6\u5019unicode\u7801\u88ab\u76f4\u63a5\u5199\u5165 \u6807\u7b7e to_alt\u6548\u679c\u7b49\u540c\u4e8e\u76f4\u63a5\u5c06emoji\u56fe\u6807\u590d\u5236\u5230markdown\u6587\u6863\u4e2d","title":"generator\u67093\u7c7b"},{"location":"syntax/emoji_usage/","text":"\u901a\u8fc7\u5728markdown\u91cc\u4f7f\u7528 :\u77ed\u540d: \uff0c\u53ef\u4ee5\u5728\u6e32\u67d3\u51fa\u7684html\u91cc\u5c55\u73b0emoji\u56fe\u7247 \u4f9d\u8d56\u6a21\u5757: pymdownx.emoji \u4f7f\u7528\u6b65\u9aa4: mkdocs.yml\u91cc\u914d\u7f6e: - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_png \u5efa\u8bae\u4f7f\u7528to_png\uff0c\u5982\u679c\u4f7f\u7528to_svg\u4f1a\u6709\u90e8\u5206\u56fe\u7247\u56e0\u4e3a\u672a\u4ed8\u8d39\u5bfc\u81f4\u65e0\u6cd5\u663e\u793a \u6d4f\u89c8\u5668\u6253\u5f00 https://www.emojicopy.com/ (emojione\u5b98\u65b9\u63a8\u51fa\u7684emoji\u67e5\u8be2\u7f51\u7ad9\uff0c\u867d\u7136\u5e76\u975e\u5168\u90e8emoji\uff0c\u4f46\u4e5f\u662f\u76ee\u524d\u627e\u5230\u7684\u76f8\u5bf9\u6700\u5168\uff0c\u5e76\u4e14\u5206\u7c7b\u6e05\u695a\uff0c\u4f7f\u7528\u65b9\u4fbf\u7684emoji\u67e5\u8be2\u7f51\u7ad9)\uff0c\u5c06\u9f20\u6807\u60ac\u505c\u5728\u56fe\u6807\u4e0a\u65b9\u4e00\u4f1a\uff0c\u4f1a\u51fa\u73b0\u5bf9\u5e94\u7684\u5168\u540d\uff0c\u6bd4\u5982 \u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u5168\u540d\uff0c\u6bd4\u5982\u8fd9\u91cc\u53eb\u505agrinning face \u70b9\u51fb\u8fdb\u5165\u9644\u5f55\u91cc\u7684 emojione\u5168\u540d\u77ed\u540d\u6620\u5c04\u8868 \uff0c\u5728\u91cc\u9762\u67e5\u627e\u5bf9\u5e94\u7684\u77ed\u540d \u5728markdown\u91cc\u4f7f\u7528\u8be5\u77ed\u540d \u6700\u7701\u4e8b\u505a\u6cd5: \u76f4\u63a5\u590d\u5236emoji\u56fe\u6807 \u65e0\u9700mkdocs.yml\u505a\u4efb\u4f55\u914d\u7f6e\uff0c\u53ea\u8981\u662femoji\u56fe\u6807(\u662f\u56fe\u6807\u4e0d\u662f\u56fe\u7247)\uff0c\u65e0\u8bba\u662f\u8f93\u5165\u6cd5\u81ea\u5e26\u7684emoji\u56fe\u6807\uff0c\u8fd8\u662f https://www.emojicopy.com/ \u4e0a\u7684emoji\u56fe\u6807\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u5230markdown\u6587\u6863\u91cc\u5373\u53ef\u3002\u6bd4\u5982\u8fd9\u4e2a\u7b11\u8138\ud83d\ude04\u5c31\u6765\u81ea\u6211\u7684\u8f93\u5165\u6cd5\uff0c\u53ef\u4ee5\u81ea\u884c\u590d\u5236\u5230markdown\u6587\u6863\u91cc\u6d4b\u8bd5\u3002 \u800c\u4e14\u8fd9\u79cd\u65b9\u5f0f\u9002\u7528\u4e8e\u6240\u6709markdown\u7f16\u8f91\u5668\u3002","title":"18.3. \u6700\u4f73\u5b9e\u8df5"},{"location":"syntax/escape/","text":"\u63a8\u8350\u4f9d\u7167\u5982\u4e0b\u987a\u5e8f\u8fdb\u884c\u8f6c\u4e49\u5c1d\u8bd5 1\u20e3\ufe0f \u4f7f\u7528\u8f6c\u4e49\u7b26\u53f7 \\ 2\u20e3\ufe0f \u4f7f\u7528 \u884c\u5185\u4ee3\u7801 \u6216 \u533a\u5757\u4ee3\u7801 \u65b9\u5f0f 3\u20e3\ufe0f \u5728\u884c\u5185\u4ee3\u7801\u6216\u533a\u5757\u4ee3\u7801\u91cc\u518d\u4f7f\u7528\u8f6c\u4e49\u7b26\u53f7 \\ 4\u20e3\ufe0f html\u6807\u7b7e: code \u9700\u8981\u8f6c\u4e49\u7684\u5185\u5bb9 /code \u5982\u679c\u4e0a\u9762\u90fd\u884c\u4e0d\u901a\uff0c\u53ea\u6709\u6700\u540e\u4e00\u62db\uff0c\u622a\u56fe\u5e76 \u63d2\u5165\u56fe\u7247 \u63a8\u8350\u7684\u622a\u56fe\u65b9\u5f0f \u628a\u8981\u8f6c\u4e49\u7684\u6587\u672c\u590d\u5236\u5230\u5fae\u4fe1\u804a\u5929\u5bf9\u8bdd\u8f93\u5165\u6846\u91cc\uff0c\u7136\u540e\u7528\u4efb\u610f\u622a\u56fe\u5de5\u5177\u5bf9\u7740\u8f93\u5165\u6846\u622a\u56fe\uff0c\u8fd9\u6837\u622a\u56fe\u51fa\u6765\u7684\u5e26\u6709\u7070\u8272\u80cc\u666f\uff0c\u5373\u4ee3\u7801\u5757\u90a3\u79cd\u7070\u8272\u80cc\u666f\uff08\u4f1a\u8ba9\u4eba\u89c9\u5f97\u662f\u4f7f\u7528\u4ee3\u7801\u5757\u65b9\u5f0f\u5728\u8868\u8ff0\uff09\u3002 \u6ce8\u610f\u4e0a\u4e0b\u6587 \u76f8\u540c\u7684\u7b26\u53f7\uff0c\u4f1a\u56e0\u4e3a\u4e0a\u4e0b\u6587\u73af\u5883\u88abmkdocs\u8ba4\u4e3a\u662f\u4e0d\u540c\u7684\u610f\u601d\uff0c\u56e0\u6b64\u6709\u65f6\u4f1a\u9047\u5230\u4e00\u4e9b\u7b26\u53f7\u5728\u6709\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u91cc\u53ef\u4ee5\u4f7f\u7528\u6216\u8f6c\u4e49\uff0c\u6709\u7684\u5c31\u4e0d\u884c\uff0c\u6bd4\u5982\u8ddf\u5728\u5217\u8868\u4e4b\u540e\u548c\u8ddf\u7740\u6807\u9898\u4e4b\u540e\u662f\u4e0d\u540c\u4e0a\u4e0b\u6587\u73af\u5883\u3002 \u6211\u7684\u6848\u4f8b \u53ef\u4ee5\u4e0agithub\u67e5\u770b\u672c\u6587\u6863\u4e2d\u8f6c\u4e49\u7ae0\u8282\u7684markdown\u6e90\u6587\u4ef6\uff0c\u5176\u4e2d\u5927\u91cf\u4f7f\u7528\u4e86\u8f6c\u4e49","title":"12. \u8f6c\u4e49"},{"location":"syntax/font_line/","text":"\u4e0d\u5e26\u9ad8\u4eae \u4f9d\u8d56\u6a21\u5757: pymdownx.critic This is ~~is~~ a test. \u6548\u679c This is is a test. \u80cc\u666f\u9ad8\u4eae \u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u6a2a\u7ebf\u90e8\u5206","title":"7.4. \u6a2a\u7ebf"},{"location":"syntax/font_line/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.critic This is ~~is~~ a test. \u6548\u679c This is is a test.","title":"\u4e0d\u5e26\u9ad8\u4eae"},{"location":"syntax/font_line/#_2","text":"\u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u6a2a\u7ebf\u90e8\u5206","title":"\u80cc\u666f\u9ad8\u4eae"},{"location":"syntax/font_stress/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.betterem(smart_enable=all) *text* \u6216 _text_ \u659c\u4f53 **text** \u6216 __text__ \u7c97\u4f53 ***text*** \u6216 ___text___ \u7c97\u659c\u4f53 \u6548\u679c text \u659c\u4f53 text \u7c97\u4f53 text \u7c97\u659c\u4f53 \u907f\u514d\u51b2\u7a81 \u8fd9\u4e2a\u6269\u5c55\u548cmarkdown.extensions.smartstrong\u6269\u5c55\u51b2\u7a81\uff0c\u4e0d\u80fd\u540c\u65f6\u8f7d\u5165\uff0c\u524d\u8005\u66ff\u4ee3\u4e86\u540e\u8005\uff0c\u5b9e\u73b0\u66f4\u597d\u7684\u6548\u679c\u3002","title":"7.1. \u659c\u4f53,\u7c97\u4f53,\u7c97\u659c\u4f53"},{"location":"syntax/font_underline/","text":"\u4e0d\u5e26\u9ad8\u4eae \u4f9d\u8d56\u6a21\u5757: pymdownx.caret ^^underline me^^ \u6548\u679c underline me \u80cc\u666f\u9ad8\u4eae \u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u4e0b\u5212\u7ebf\u90e8\u5206","title":"7.3. \u4e0b\u5212\u7ebf"},{"location":"syntax/font_underline/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.caret ^^underline me^^ \u6548\u679c underline me","title":"\u4e0d\u5e26\u9ad8\u4eae"},{"location":"syntax/font_underline/#_2","text":"\u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u4e0b\u5212\u7ebf\u90e8\u5206","title":"\u80cc\u666f\u9ad8\u4eae"},{"location":"syntax/font_underline_line/","text":"\u53ea\u6709\u9ad8\u4eae\u5f62\u5f0f,\u8be6\u89c1 \u9ad8\u4eae\u7ae0\u8282\u4e0b\u5212\u7ebf+\u6a2a\u7ebf\u90e8\u5206","title":"7.5. \u4e0b\u5212\u7ebf+\u6a2a\u7ebf"},{"location":"syntax/font_updown/","text":"\u4e0a\u6807 \u4f9d\u8d56\u6a21\u5757: pymdownx.caret 10^2^ \u6548\u679c 10 2 \u9488\u5bf9\u82f1\u6587\u63cf\u8ff0\u7b2c\u51e0\u7684\u4e0a\u6807\uff0c\u53ef\u4ee5 1st \u8fd9\u79cd\u65b9\u5f0f(\u4f9d\u8d56\u6a21\u5757: pymdownx.smartsymbols) \u7528\u6cd5 \u6548\u679c 1st 2nd 3rd 1 st 2 nd 3 rd 1^st^ 2^nd^ 3^rd^ 1 st 2 nd 3 rd \u4e0b\u6807 \u4f9d\u8d56\u6a21\u5757: pymdownx.tilde H~2~O \u6548\u679c H 2 O","title":"7.2. \u4e0a\u6807,\u4e0b\u6807"},{"location":"syntax/font_updown/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.caret 10^2^ \u6548\u679c 10 2 \u9488\u5bf9\u82f1\u6587\u63cf\u8ff0\u7b2c\u51e0\u7684\u4e0a\u6807\uff0c\u53ef\u4ee5 1st \u8fd9\u79cd\u65b9\u5f0f(\u4f9d\u8d56\u6a21\u5757: pymdownx.smartsymbols) \u7528\u6cd5 \u6548\u679c 1st 2nd 3rd 1 st 2 nd 3 rd 1^st^ 2^nd^ 3^rd^ 1 st 2 nd 3 rd","title":"\u4e0a\u6807"},{"location":"syntax/font_updown/#_2","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.tilde H~2~O \u6548\u679c H 2 O","title":"\u4e0b\u6807"},{"location":"syntax/footnote/","text":"\u4f9d\u8d56\u6a21\u5757: footnotes \u7b2c\u4e00\u6b65. \u63d2\u5165\u5f15\u7528 Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] \u7b2c\u4e8c\u6b65. \u63d2\u5165\u5185\u5bb9 [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u9762\u811a\u6ce81\u5185\u5bb9\u662f\u5355\u884c\u65b9\u5f0f\uff0c\u811a\u6ce82\u5185\u5bb9\u662f\u591a\u884c\u65b9\u5f0f \u6548\u679c Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 \u6ce8\u610f \u4e0d\u4e00\u5b9a\u8981\u7528[^1]\uff0c\u4e5f\u53ef\u4ee5\u7528\u81ea\u5b9a\u4e49\u5173\u952e\u5b57\uff0c\u6bd4\u5982[^mykey]\uff0c\u4f46\u8fd9\u6837\u4e0b\u9762\u4e5f\u8981\u6539\u4e3a[^mykey]\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u7a7a\u683c\uff0c\u6bd4\u5982[^my key]\uff08\u5f53\u7136\u540e\u9762\u4e5f\u8981[^my key]: \u65e0\u8bba\u811a\u6ce8\u6807\u7b7e\u5199\u7684\u662f\u4ec0\u4e48\uff08\u5373[^1]\u6216\u8005[^mykey]\uff0c\u5728\u5c55\u793a\u811a\u6ce8\u6807\u7b7e\u548c\u5c55\u793a\u811a\u6ce8\u5185\u5bb9\u65f6\u5019\u90fd\u662f\u81ea\u52a8\u7528\u6570\u5b57\u4ece1\u5f00\u59cb\u7d2f\u52a0\u6807\u8bb0\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u5199\u7684\u5185\u5bb9\uff09 [^1]: \u811a\u6ce8\u5185\u5bb9\u65e0\u8bba\u5199\u5728.md\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u5728\u5c55\u793a\u65f6\u5019\u90fd\u662f\u81ea\u52a8\u4f4d\u4e8e\u6587\u6863\u7684\u6700\u4e0b\u65b9\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u6dfb\u52a0---\u8fd9\u6837\u4e00\u4e2a\u6a2a\u7ebf Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"15. \u811a\u6ce8"},{"location":"syntax/headline/","text":"\u4f7f\u7528 # \uff0c\u8868\u793a1-6\u7ea7\u6807\u9898\u3002 # \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 \u6ce8\u610f: \u4e00\u4e2a.md\u91cc\u53ea\u80fd\u6709\u4e00\u4e2a # \uff0c\u8ddf\u7740\u591a\u4e2a ## \u3002\u5982\u679c\u6709\u591a\u4e2a # \uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u751f\u4ea7\u672c\u9875\u76ee\u5f55\u3002 \u5982\u679c\u6709 # \uff0c\u5219\u4f7f\u7528\u8be5\u6807\u9898\u4f5c\u4e3a\u672c\u9875\u6b63\u6587\u90e8\u5206\u7b2c\u4e00\u884c\uff0c\u5982\u679c\u6ca1\u6709#\uff0c\u5219\u4e3amkdocs.yml\u91cc\u6307\u5b9a\u7684pages\u540d\u3002 \u4e2a\u4eba\u5efa\u8bae.md\u4ece ## \u5f00\u59cb\uff0c\u4e0d\u8981\u7528 # \u3002","title":"2. \u6807\u9898"},{"location":"syntax/highlight_background/","text":"\u9ec4\u8272 2\u4e2a\u6a21\u5757\u5747\u63d0\u4f9b\u4e86\u76f8\u4f3c\u7684\u6548\u679c \u6a21\u57571: pymdownx.mark ==hello world== \u6548\u679c hello world \u6a21\u57572: pymdownx.critic \u6548\u679c hello world \u4f46\u8fd92\u4e2a\u6a21\u5757\u4e5f\u6709\u533a\u522b : \u533a\u522b1: pymdownx.mark\u6e32\u67d3\u51fa\u7684html\u662f p mark hello world /mark /p pymdownx.critic\u6e32\u67d3\u51fa\u7684html\u662f p mark class=\"critic\" hello world /mark /p \u533a\u522b2: pymdownx.mark\u4e0d\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae pymdownx.critic\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae \u7528\u6cd5: \u6548\u679c: AAA BBB CCC \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u9ec4\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7eff\u8272(\u4e0b\u5212\u7ebf) \u8868\u793a\u63d2\u5165\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c Hello, my world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7ea2\u8272(\u6a2a\u7ebf) \u8868\u793a\u5220\u9664\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.tidle \u6548\u679c delete me \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7eff\u8272+\u7ea2\u8272(\u4e0b\u5212\u7ebf+\u6a2a\u7ebf) \u8868\u793a\u66ff\u6362\u6587\u5b57 2\u79cd\u5b9e\u73b0\u65b9\u5f0f: \u5148\u4f7f\u7528\u7ea2\u8272(\u6a2a\u7ebf)\uff0c\u518d\u4f7f\u7528\u7eff\u8272(\u4e0b\u5212\u7ebf) \u4f7f\u7528\u4e13\u95e8\u7684\u8bed\u6cd5\uff0c\u4f9d\u8d56\u6a21\u5757pymdownx.tidle \u8fd92\u79cd\u65b9\u5f0f\u6548\u679c\u5b8c\u5168\u4e00\u81f4\uff0c\u5305\u62ec\u5b9e\u9645\u770b\u5230\u7684\u6837\u5f0f\u548chtml\u90fd\u662f\u76f8\u540c\u7684 Hello, my our world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272+\u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b \u7070\u8272 \u8868\u793a\u6ce8\u89e3 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c This is a test What is it a test of? . \u6ce8\u610f: \u53ea\u652f\u6301\u5355\u884c\u7528\u6cd5\uff0c\u4e0d\u652f\u6301\u533a\u5757\u7528\u6cd5 \u65e0\u6cd5\u4e0e\u4ee3\u7801\u9ad8\u4eae\u7ed3\u5408\uff0c\u5305\u62ec\u884c\u5185\u4ee3\u7801\u9ad8\u4eae\u548c\u533a\u5757\u4ee3\u7801\u9ad8\u4eae","title":"13.2. \u80cc\u666f\u9ad8\u4eae"},{"location":"syntax/highlight_background/#_1","text":"2\u4e2a\u6a21\u5757\u5747\u63d0\u4f9b\u4e86\u76f8\u4f3c\u7684\u6548\u679c \u6a21\u57571: pymdownx.mark ==hello world== \u6548\u679c hello world \u6a21\u57572: pymdownx.critic \u6548\u679c hello world \u4f46\u8fd92\u4e2a\u6a21\u5757\u4e5f\u6709\u533a\u522b : \u533a\u522b1: pymdownx.mark\u6e32\u67d3\u51fa\u7684html\u662f p mark hello world /mark /p pymdownx.critic\u6e32\u67d3\u51fa\u7684html\u662f p mark class=\"critic\" hello world /mark /p \u533a\u522b2: pymdownx.mark\u4e0d\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae pymdownx.critic\u652f\u6301\u5757\u80cc\u666f\u9ad8\u4eae \u7528\u6cd5: \u6548\u679c: AAA BBB CCC \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u9ec4\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u9ec4\u8272"},{"location":"syntax/highlight_background/#_2","text":"\u8868\u793a\u63d2\u5165\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c Hello, my world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u7eff\u8272(\u4e0b\u5212\u7ebf)"},{"location":"syntax/highlight_background/#_3","text":"\u8868\u793a\u5220\u9664\u6587\u5b57 \u4f9d\u8d56\u6a21\u5757: pymdownx.tidle \u6548\u679c delete me \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u7ea2\u8272(\u6a2a\u7ebf)"},{"location":"syntax/highlight_background/#_4","text":"\u8868\u793a\u66ff\u6362\u6587\u5b57 2\u79cd\u5b9e\u73b0\u65b9\u5f0f: \u5148\u4f7f\u7528\u7ea2\u8272(\u6a2a\u7ebf)\uff0c\u518d\u4f7f\u7528\u7eff\u8272(\u4e0b\u5212\u7ebf) \u4f7f\u7528\u4e13\u95e8\u7684\u8bed\u6cd5\uff0c\u4f9d\u8d56\u6a21\u5757pymdownx.tidle \u8fd92\u79cd\u65b9\u5f0f\u6548\u679c\u5b8c\u5168\u4e00\u81f4\uff0c\u5305\u62ec\u5b9e\u9645\u770b\u5230\u7684\u6837\u5f0f\u548chtml\u90fd\u662f\u76f8\u540c\u7684 Hello, my our world! \u652f\u6301\u5d4c\u5957\uff0c\u8be6\u89c1 \u7eff\u8272+\u7ea2\u8272\u533a\u5757\u5d4c\u5957\u9ad8\u4eae\u4ee3\u7801\u793a\u4f8b","title":"\u7eff\u8272+\u7ea2\u8272(\u4e0b\u5212\u7ebf+\u6a2a\u7ebf)"},{"location":"syntax/highlight_background/#_5","text":"\u8868\u793a\u6ce8\u89e3 \u4f9d\u8d56\u6a21\u5757: pymdownx.critic \u6548\u679c This is a test What is it a test of? . \u6ce8\u610f: \u53ea\u652f\u6301\u5355\u884c\u7528\u6cd5\uff0c\u4e0d\u652f\u6301\u533a\u5757\u7528\u6cd5 \u65e0\u6cd5\u4e0e\u4ee3\u7801\u9ad8\u4eae\u7ed3\u5408\uff0c\u5305\u62ec\u884c\u5185\u4ee3\u7801\u9ad8\u4eae\u548c\u533a\u5757\u4ee3\u7801\u9ad8\u4eae","title":"\u7070\u8272"},{"location":"syntax/highlight_code/","text":"\u884c\u5185\u4ee3\u7801\u9ad8\u4eae \u4f9d\u8d56\u6a21\u5757: pymdownx.inlinehilite \u4f7f\u7528shebang\u53ef\u4ee5\u5728\u4e00\u884c\u6587\u672c\u91cc\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae `#!python print Hello, world! `\u6216`:::python print Hello, world! ` \u6548\u679c print Hello, world! \u6216 print Hello, world! \u5f00\u5934\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u5982\u679c\u6709\u7a7a\u683c\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6b63\u6587 ` #!python print Hello, world! ` \u6548\u679c #!python print \"Hello, world!\" ` :::python print Hello, world! ` \u6548\u679c :::python print \"Hello, world!\" \u533a\u5757\u4ee3\u7801\u9ad8\u4eae \u7528\u6cd5 \u4f9d\u8d56\u6a21\u5757: codehilite \u5199\u6cd51: 3\u4e2a` ```python text = Hello, world! print text ``` \u6548\u679c text = Hello, world! print text \u5199\u6cd52: 4\u4e2a\u7a7a\u683c+shebang #!/usr/bin/python text = Hello, world! print text \u6548\u679c #!/usr/bin/python text = Hello, world! print text \u652f\u6301434\u79cd\u683c\u5f0f codehilite\u662f\u57fa\u4e8epygments\u5b9e\u73b0\u9ad8\u4eae\u7684\uff0c\u652f\u6301434\u79cd\u683c\u5f0f\uff0c\u8be6\u89c1 \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u7684\u8bed\u8a00 \u82e5\u6307\u5b9a\u4e86\u4e0d\u5b58\u5728\u7684\u683c\u5f0f\uff0c\u5219\u7b49\u540c\u4e8etext\uff0c\u4e0d\u505a\u4efb\u4f55\u9ad8\u4eae\u6e32\u67d3 \u82e5\u4e0d\u60f3\u4f7f\u7528\u9ad8\u4eae\uff0c\u7528text\uff0c\u5982\uff1a ```text text = Hello, world! print text ``` \u6548\u679c text = Hello, world! print text \u53c2\u65701. \u81ea\u52a8\u731c\u6d4b\u8bed\u8a00 \u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e\u5982\u4e0b - codehilite(guess_lang=false) \u5173\u95ed\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u5173\u95ed\u9ad8\u4eae - codehilite(guess_lang=true) \u5f00\u542f\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u81ea\u52a8\u731c\u6d4b \u53c2\u65702. \u663e\u793a\u884c\u53f7 \u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e - codehilite(linenums=true) \u663e\u793a\u884c\u53f7 - codehilite(linenums=false) \u4e0d\u663e\u793a\u884c\u53f7 \u82e5codehilite(linenums=true)\uff0c4\u4e2a\u7a7a\u683c\u7684\u4ee3\u7801\u5757\u65b9\u5f0f\u4e5f\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u884c\u53f7 \u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\" \u53c2\u65703. \u6307\u5b9a\u7b2c\u51e0\u884c\u80cc\u666f\u9ad8\u4eae \u5728mkdocs.yml\u91cc\u4e0d\u7528\u989d\u5916\u8bbe\u7f6e ```python hl_lines= 2 4 text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c text1 = Hello, text2 = world! print text1 + text2 \u53c2\u65704. \u6307\u5b9a\u884c\u53f7\u4ece\u591a\u5c11\u5f00\u59cb\u7f16\u53f7 ```python linenums= 2 text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = Hello, text2 = world! print text1 + text2 \u5f3a\u5236\u663e\u5f0f\u884c\u53f7 \u5f53\u4ee3\u7801\u5757\u6307\u5b9a\u4e86linenums\u540e\uff0c\u5373\u4f7fmkdocs.yml\u91cclinenums=false\uff0c\u4e5f\u4f1a\u81ea\u52a8\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\" \u6ce8\u610f\uff1a\u4ee3\u7801\u5757linenums\u53c2\u6570\u4e0d\u4f1a\u5f71\u54cdhl_lines\uff0c\u5373\u65e0\u8bbalinenums\u6307\u5b9a\u4ece\u591a\u5c11\u884c\u5f00\u59cb\u7f16\u53f7\uff0chl_lines\u5b9e\u9645\u90fd\u4ee5\u884c\u53f7\u4ece1\u5f00\u59cb\u7f16\u53f7\u6765\u627e\u5230\u5bf9\u5e94\u884c\u8fdb\u884c\u80cc\u666f\u9ad8\u4eae\u6e32\u67d3\uff0c\u5982\uff1a ```python linenums= 2 hl_lines= 3 text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = Hello, text2 = world! print text1 + text2","title":"13.1. \u4ee3\u7801\u9ad8\u4eae"},{"location":"syntax/highlight_code/#_1","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.inlinehilite \u4f7f\u7528shebang\u53ef\u4ee5\u5728\u4e00\u884c\u6587\u672c\u91cc\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae `#!python print Hello, world! `\u6216`:::python print Hello, world! ` \u6548\u679c print Hello, world! \u6216 print Hello, world! \u5f00\u5934\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u5982\u679c\u6709\u7a7a\u683c\u7684\u8bdd\uff0c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6b63\u6587 ` #!python print Hello, world! ` \u6548\u679c #!python print \"Hello, world!\" ` :::python print Hello, world! ` \u6548\u679c :::python print \"Hello, world!\"","title":"\u884c\u5185\u4ee3\u7801\u9ad8\u4eae"},{"location":"syntax/highlight_code/#_2","text":"","title":"\u533a\u5757\u4ee3\u7801\u9ad8\u4eae"},{"location":"syntax/highlight_code/#_3","text":"\u4f9d\u8d56\u6a21\u5757: codehilite \u5199\u6cd51: 3\u4e2a` ```python text = Hello, world! print text ``` \u6548\u679c text = Hello, world! print text \u5199\u6cd52: 4\u4e2a\u7a7a\u683c+shebang #!/usr/bin/python text = Hello, world! print text \u6548\u679c #!/usr/bin/python text = Hello, world! print text \u652f\u6301434\u79cd\u683c\u5f0f codehilite\u662f\u57fa\u4e8epygments\u5b9e\u73b0\u9ad8\u4eae\u7684\uff0c\u652f\u6301434\u79cd\u683c\u5f0f\uff0c\u8be6\u89c1 \u652f\u6301\u4ee3\u7801\u9ad8\u4eae\u7684\u8bed\u8a00 \u82e5\u6307\u5b9a\u4e86\u4e0d\u5b58\u5728\u7684\u683c\u5f0f\uff0c\u5219\u7b49\u540c\u4e8etext\uff0c\u4e0d\u505a\u4efb\u4f55\u9ad8\u4eae\u6e32\u67d3 \u82e5\u4e0d\u60f3\u4f7f\u7528\u9ad8\u4eae\uff0c\u7528text\uff0c\u5982\uff1a ```text text = Hello, world! print text ``` \u6548\u679c text = Hello, world! print text","title":"\u7528\u6cd5"},{"location":"syntax/highlight_code/#1","text":"\u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e\u5982\u4e0b - codehilite(guess_lang=false) \u5173\u95ed\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u5173\u95ed\u9ad8\u4eae - codehilite(guess_lang=true) \u5f00\u542f\u731c\u6d4b\uff0c\u82e5\u4e0d\u6307\u5b9a\u8bed\u8a00\uff0c\u5219\u81ea\u52a8\u731c\u6d4b","title":"\u53c2\u65701. \u81ea\u52a8\u731c\u6d4b\u8bed\u8a00"},{"location":"syntax/highlight_code/#2","text":"\u5728mkdocs.yml\u91ccmarkdown_extensions\u90e8\u5206\u8bbe\u7f6e - codehilite(linenums=true) \u663e\u793a\u884c\u53f7 - codehilite(linenums=false) \u4e0d\u663e\u793a\u884c\u53f7 \u82e5codehilite(linenums=true)\uff0c4\u4e2a\u7a7a\u683c\u7684\u4ee3\u7801\u5757\u65b9\u5f0f\u4e5f\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u884c\u53f7 \u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\"","title":"\u53c2\u65702. \u663e\u793a\u884c\u53f7"},{"location":"syntax/highlight_code/#3","text":"\u5728mkdocs.yml\u91cc\u4e0d\u7528\u989d\u5916\u8bbe\u7f6e ```python hl_lines= 2 4 text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c text1 = Hello, text2 = world! print text1 + text2","title":"\u53c2\u65703. \u6307\u5b9a\u7b2c\u51e0\u884c\u80cc\u666f\u9ad8\u4eae"},{"location":"syntax/highlight_code/#4","text":"```python linenums= 2 text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = Hello, text2 = world! print text1 + text2 \u5f3a\u5236\u663e\u5f0f\u884c\u53f7 \u5f53\u4ee3\u7801\u5757\u6307\u5b9a\u4e86linenums\u540e\uff0c\u5373\u4f7fmkdocs.yml\u91cclinenums=false\uff0c\u4e5f\u4f1a\u81ea\u52a8\u663e\u793a\u884c\u53f7 \u56e0\u6b64\uff0c\u5982\u679c\u60f3\u5168\u5c40\u9ed8\u8ba4\u4e0d\u663e\u793a\u884c\u53f7\uff0c\u800c\u6307\u5b9a\u4ee3\u7801\u5757\u663e\u793a\u884c\u53f7\uff0c\u53ef\u4ee5\u5728mkdocs.yml\u91cc\u6307\u5b9alinenums=false\uff0c\u7136\u540e\u60f3\u663e\u793a\u884c\u53f7\u7684\u4ee3\u7801\u5757\u7528linenums=\"1\" \u6ce8\u610f\uff1a\u4ee3\u7801\u5757linenums\u53c2\u6570\u4e0d\u4f1a\u5f71\u54cdhl_lines\uff0c\u5373\u65e0\u8bbalinenums\u6307\u5b9a\u4ece\u591a\u5c11\u884c\u5f00\u59cb\u7f16\u53f7\uff0chl_lines\u5b9e\u9645\u90fd\u4ee5\u884c\u53f7\u4ece1\u5f00\u59cb\u7f16\u53f7\u6765\u627e\u5230\u5bf9\u5e94\u884c\u8fdb\u884c\u80cc\u666f\u9ad8\u4eae\u6e32\u67d3\uff0c\u5982\uff1a ```python linenums= 2 hl_lines= 3 text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c 2 3 4 text1 = Hello, text2 = world! print text1 + text2","title":"\u53c2\u65704. \u6307\u5b9a\u884c\u53f7\u4ece\u591a\u5c11\u5f00\u59cb\u7f16\u53f7"},{"location":"syntax/image_index/","text":"\u5f53\u4e00\u4e2a\u9875\u9762\u91cc\u591a\u6b21\u8c03\u7528\u76f8\u540c\u56fe\u7247\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u9002\u7528: ![alt][\u7d22\u5f15] [\u7d22\u5f15]: \u56fe\u7247\u5730\u5740 title \u6ce8\u610f: [\u7d22\u5f15]: \u56fe\u7247\u5730\u5740 \"title\" \u53ef\u4ee5\u5199\u5728\u4efb\u610f\u5730\u65b9\uff0c\u901a\u5e38\u4e60\u60ef\u4e8e\u653e\u5728markdown\u672c\u9875\u6587\u6863\u6700\u4e0b\u65b9 \u5982 ![alt][test icon] ... [test icon]: /img/test_icon.png title \u6548\u679c \u9f20\u6807\u60ac\u505c\u5728\u56fe\u6807\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"11.2. \u53c2\u8003\u5f0f"},{"location":"syntax/image_inline/","text":"\u6dfb\u52a0\u56fe\u7247\u7684\u5f62\u5f0f\u548c\u94fe\u63a5\u76f8\u4f3c\uff0c\u53ea\u9700\u5728\u94fe\u63a5\u7684\u57fa\u7840\u4e0a\u524d\u65b9\u52a0\u4e00\u4e2a ! ![alt](\u56fe\u7247\u5730\u5740 title ) \u5982 ![hello](./../img/test_icon.png title ) \u6548\u679c \u9f20\u6807\u60ac\u505c\u5728\u56fe\u6807\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"11.1. \u884c\u5185\u5f0f"},{"location":"syntax/link_anchor/","text":"\u82f1\u6587\u53ebPermalinks\uff0c\u662ftoc\u6269\u5c55\u6a21\u5757\u7684\u4e00\u4e2a\u529f\u80fd \u4f9d\u8d56\u6a21\u5757: toc \u9ed8\u8ba4\u503c: toc(permalink=false) \u7b14\u8005\u63a8\u8350\u503c: toc(permalink=true) \u53c2\u6570\u8bbe\u7f6e: toc(permalink=true) \u70b9\u51fb\u951a\u70b9\u6216\u8005\u8df3\u8f6c\u81f3\u951a\u70b9\u540e\u4f1a\u81ea\u52a8\u5728\u951a\u70b9\u5904\u663e\u793a\u56fe\u6807\u6216\u6587\u672c\uff0c\u5e76\u81ea\u52a8\u56fa\u5b9a\u5728\u8be5\u4f4d\u7f6e\uff0c\u5237\u65b0\u9875\u9762\u540e\u4e5f\u4f1a\u81ea\u52a8\u56de\u5230\u8be5\u4f4d\u7f6e\uff0c\u6548\u679c\u5982\u4e0b\uff1a toc(permalink=false) \u770b\u4e0d\u5230\u951a\u70b9\u5904\u7684\u56fe\u6807\u6216\u6587\u672c\uff0c\u4f46\u8df3\u8f6c\u81f3\u951a\u70b9\u5904\u540e\u81ea\u52a8\u56fa\u5b9a\u5728\u8be5\u4f4d\u7f6e\uff0c\u5237\u65b0\u9875\u9762\u540e\u4e5f\u4f1a\u81ea\u52a8\u56de\u5230\u8be5\u4f4d\u7f6e toc(permalink=false)\u7b49\u540c\u4e8e\u6ce8\u91ca\u6389\u8fd9\u4e2a\u6269\u5c55\uff0c\u6548\u679c\u5747\u5982\u4e0b\uff1a toc(permalink=\u81ea\u5b9a\u4e49\u540d) \u53ef\u4ee5\u652f\u6301\u81ea\u5b9a\u4e49\u540d\uff0c\u6bd4\u5982toc(permalinks=hello)\uff0c\u6548\u679c\u5982\u4e0b\uff1a","title":"10.3. \u951a\u70b9\u63d0\u793a"},{"location":"syntax/link_auto/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.magiclink \u5f53\u8bc6\u522b\u5230HTML\u3001FTP\u3001Email\u5730\u5740\u65f6\u5019\u4f1a\u81ea\u52a8\u8f6c\u4e3a\u8d85\u94fe\u63a5\uff0c\u5982 http://www.example.cpm/ \u6548\u679c http://www.example.com/ \u7ecf\u6d4b\u8bd5\uff0c\u81f3\u5c11\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u81ea\u52a8\u94fe\u63a5 http://www.example.com/ https://www.example.com/ ftp://www.example.com/ www.example.com user@example.com","title":"10.2. \u81ea\u52a8\u94fe\u63a5"},{"location":"syntax/link_normal/","text":"\u884c\u5185\u5f0f [example](http://www.example.com/ title ) \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837 \u53c2\u8003\u5f0f \u5f53\u4e00\u4e2a\u9875\u9762\u91cc\u591a\u6b21\u8c03\u7528\u76f8\u540c\u94fe\u63a5\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u9002\u7528: [example][\u7d22\u5f15] ... [\u7d22\u5f15]: http://www.example.com/ title \u6ce8\u610f: [\u7d22\u5f15]: http://www.example.com/ \"title\" \u53ef\u4ee5\u5199\u5728\u4efb\u610f\u5730\u65b9\uff0c\u901a\u5e38\u4e60\u60ef\u4e8e\u653e\u5728markdown\u672c\u9875\u6587\u6863\u6700\u4e0b\u65b9 \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"10.1. \u666e\u901a\u94fe\u63a5"},{"location":"syntax/link_normal/#_1","text":"[example](http://www.example.com/ title ) \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"\u884c\u5185\u5f0f"},{"location":"syntax/link_normal/#_2","text":"\u5f53\u4e00\u4e2a\u9875\u9762\u91cc\u591a\u6b21\u8c03\u7528\u76f8\u540c\u94fe\u63a5\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u66f4\u9002\u7528: [example][\u7d22\u5f15] ... [\u7d22\u5f15]: http://www.example.com/ title \u6ce8\u610f: [\u7d22\u5f15]: http://www.example.com/ \"title\" \u53ef\u4ee5\u5199\u5728\u4efb\u610f\u5730\u65b9\uff0c\u901a\u5e38\u4e60\u60ef\u4e8e\u653e\u5728markdown\u672c\u9875\u6587\u6863\u6700\u4e0b\u65b9 \u6548\u679c example \u9f20\u6807\u60ac\u505c\u5728\u94fe\u63a5\u4e0a\u53ef\u4ee5\u770b\u5230\"title\"\u5b57\u6837","title":"\u53c2\u8003\u5f0f"},{"location":"syntax/list_noseq/","text":"\u4f7f\u7528 * \u3001 + \u3001\u6216 - \u6807\u8bb0\u65e0\u5e8f\u5217\u8868\uff0c\u4e0b\u9762\u4ec5\u4ee5 - \u4f5c\u4e3a\u793a\u4f8b\uff0c - \u7b2c\u4e00\u9879 - \u7b2c\u4e8c\u9879 - \u7b2c\u4e09\u9879 \u6ce8: \u6807\u8bb0\u540e\u9762\u6700\u5c11\u6709\u4e00\u4e2a \u7a7a\u683c \u6216 \u5236\u8868\u7b26 \u3002\u82e5\u4e0d\u5728\u5f15\u7528\u533a\u5757\u4e2d\uff0c\u5fc5\u987b\u548c\u524d\u65b9\u6bb5\u843d\u4e4b\u95f4\u5b58\u5728\u7a7a\u884c\u3002 \u6548\u679c \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879","title":"8.1. \u65e0\u5e8f\u5217\u8868"},{"location":"syntax/list_seq/","text":"\u6709\u5e8f\u5217\u8868\u7684\u6807\u8bb0\u65b9\u5f0f\u662f\u5c06\u4e0a\u8ff0\u7684\u7b26\u53f7\u6362\u6210\u6570\u5b57,\u5e76\u8f85\u4ee5 . 1. \u7b2c\u4e00\u9879 2. \u7b2c\u4e8c\u9879 3. \u7b2c\u4e09\u9879 \u6548\u679c \u7b2c\u4e00\u9879 \u7b2c\u4e8c\u9879 \u7b2c\u4e09\u9879","title":"8.2. \u6709\u5e8f\u5217\u8868"},{"location":"syntax/list_task/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.tasklist \u7528\u6cd5: - [ ] \u6216 - [x] \uff0c\u5176\u4e2d [ ] \u8868\u793a\u4e0d\u6253\u52fe\uff0c [x] \u8868\u793a\u6253\u52fe\uff0c - \u53ef\u4ee5\u7528 + \u6216 * \u66ff\u4ee3 - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [x] Nulla lobortis egestas semper - [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est - [ ] Vestibulum convallis sit amet nisi a tincidunt - [x] In hac habitasse platea dictumst - [x] In scelerisque nibh non dolor mollis congue sed et metus - [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis - [ ] Praesent sed risus massa - [x] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque - [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi \u6548\u679c Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"8.3. \u4efb\u52a1\u5217\u8868"},{"location":"syntax/main/","text":"\u7531\u4e8e\u8bed\u6cd5\u4f17\u591a\uff0c\u56e0\u6b64\u5c06 \u5927\u90e8\u5206\u8bed\u6cd5 \u6c47\u603b\u5728\u4e0b\u9762\u8868\u683c\u91cc\uff0c\u4fbf\u4e8e\u4e00\u89c8\u3002 \u4f46\u8be5\u8868\u5e76\u672a\u6db5\u76d6\u5168\u90e8\u8bed\u6cd5(\u5982\u67d0\u4e9b\u7279\u6b8a\u7b26\u53f7) \uff0c\u56e0\u6b64\u8be6\u60c5\u8bf7\u7ffb\u770b\u8bed\u6cd5\u7684\u5177\u4f53\u7ae0\u8282\u3002 \u7b26\u53f7 \u7528\u9014 # \u6807\u9898 \u7a7a\u884c \u6bb5\u843d \u5f15\u7528 [^sth] \u811a\u6ce8 !!! \u6ce8\u89e3 ??? \u6298\u53e0\u6ce8\u89e3 \\ \u8f6c\u4e49 * \u5217\u8868 + \u5217\u8868 - \u5217\u8868 *[x] \u4efb\u52a1\u5217\u8868 +[x] \u4efb\u52a1\u5217\u8868 -[x] \u4efb\u52a1\u5217\u8868 --- \u5206\u5272\u7ebf :shortname: emoji ` \u884c\u5185\u4ee3\u7801 ```\u8bed\u8a00 \u4ee3\u7801\u5757,\u5e26\u9ad8\u4eae TAB \u4ee3\u7801\u5757 #! \u4ee3\u7801\u9ad8\u4eae ::: \u4ee3\u7801\u9ad8\u4eae *sth* \u659c\u4f53 _sth_ \u659c\u4f53 **sth** \u7c97\u4f53 __sth__ \u7c97\u4f53 ***sth*** \u7c97\u659c\u4f53 ___sth___ \u7c97\u659c\u4f53 ^sth^ \u4e0a\u6807 ~sth~ \u4e0b\u6807 ^^sth^^ \u6587\u5b57\u4e0b\u5212\u7ebf ~~sth~~ \u6587\u5b57\u4e2d\u6a2a\u7ebf {++sth++} \u6587\u5b57\u4e0b\u5212\u7ebf,\u7eff\u8272\u80cc\u666f\u9ad8\u4eae {--sth--} \u6587\u5b57\u4e2d\u6a2a\u7ebf,\u7ea2\u8272\u80cc\u666f\u9ad8\u4eae {~~false~>true~~} \u6587\u5b57\u4e0b\u5212\u7ebf\u63a5\u6587\u5b57\u6a2a\u7ebf,\u7eff\u63a5\u7ea2\u80cc\u666f\u9ad8\u4eae { sth } \u8868\u793a\u6ce8\u89e3,\u7070\u8272\u80cc\u666f\u9ad8\u4eae ==sth== \u9ec4\u8272\u80cc\u666f\u9ad8\u4eae {==sth==} \u9ec4\u8272\u80cc\u666f\u9ad8\u4eae $sth$ \u884c\u5185\u5f0f\u6570\u5b66\u516c\u5f0f \\(sth)\\ \u884c\u5185\u5f0f\u6570\u5b66\u516c\u5f0f $$...$$ \u533a\u5757\u5f0f\u6570\u5b66\u516c\u5f0f \\begin{}...\\end{} \u533a\u5757\u5f0f\u6570\u5b66\u516c\u5f0f [text](url \"title\") \u884c\u5185\u5f0f\u94fe\u63a5 [text][index],\u6587\u6863\u6700\u540e[index]: url \"title\" \u53c2\u8003\u5f0f\u94fe\u63a5 \u7b26\u5408\u8981\u6c42\u7684URL \u81ea\u52a8\u94fe\u63a5 ![alt](url \"title\") \u884c\u5185\u5f0f\u56fe\u7247 ![alt][index],\u6587\u6863\u6700\u540e[index]: url \"title\" \u53c2\u8003\u5f0f\u56fe\u7247","title":"1. \u8bed\u6cd5\u603b\u89c8"},{"location":"syntax/math_js/","text":"\u5148\u5728docs\u91cc\u521b\u5efajs\u76ee\u5f55\uff0c\u5e76\u5728js\u76ee\u5f55\u4e2d\u653e\u7f6eextra.js\uff1a window . MathJax = { tex2jax : { inlineMath : [ [ \\\\( , \\\\) ] ], displayMath : [ [ \\\\[ , \\\\] ] ] }, TeX : { TagSide : right , TagIndent : .8em , MultLineWidth : 85% , equationNumbers : { autoNumber : AMS , }, unicode : { fonts : STIXGeneral, Arial Unicode MS } }, displayAlign : left , showProcessingMessages : false , messageStyle : none }; \u7136\u540e\u5728mkdocs.yml\u91cc\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff0c\u7528\u4e8e\u5bfc\u5165js extra_javascript : - js/extra.js - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML","title":"17.2. \u5bfc\u5165js"},{"location":"syntax/math_main/","text":"\u7528\u4e8eTeX\u6570\u5b66\u516c\u5f0f\u7684\u5c55\u793a\uff0c\u4f7f\u7528\u4e4b\u524d\u8981\u5148\u5728docs/\u91cc\u521b\u5efajavascripts\u76ee\u5f55\uff0c\u5e76\u5728\u76ee\u5f55\u4e2d\u653e\u7f6eextra.js \u4f9d\u8d56\u6a21\u5757: pymdownx.arithmatex","title":"17.1. \u4ecb\u7ecd"},{"location":"syntax/math_usage/","text":"\u884c\u5185\u5199\u6cd5\u67092\u79cd: $...$ \u548c \\(...\\) \u533a\u5757\u5199\u6cd5\u67093\u79cd: $$...$$ , \\[...\\] , \u548c \\begin{}...\\end{} \u5177\u4f53\u7528\u6cd5\u8be6\u89c1: https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference http://www.andy-roberts.net/writing/latex/mathematics_1 http://www.andy-roberts.net/writing/latex/mathematics_2 \u6b64\u5904\u4ec5\u4e3e\u4e2a\u4f8b\u5b50(\u56e0\u4e3abegin end\u65b9\u5f0f\u6211\u8fd8\u4e0d\u591f\u4e86\u89e3)\uff1a $$ p(x|y) = \\frac{p(y|x)p(x)}{p(y)} $$ \u6548\u679c p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ \u6548\u679c p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"17.3. \u7528\u6cd5"},{"location":"syntax/meta/","text":"\u4f9d\u8d56\u6a21\u5757\uff1ameta mkdocs\u652f\u6301(\u5b9e\u9645\u662fpython markdown\u652f\u6301)\u7684\u5143\u4fe1\u606f\u5185\u5bb9\uff0c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e3a\u5bf9\u5e94\u7684html\uff0c\u76ee\u524d\u652f\u6301\u4ee5\u4e0b4\u79cdmeta title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js \u6ce8\u610f: \u8981\u5199\u5728markdown\u6587\u6863\u7684\u6700\u4e0a\u65b9 \u5199\u5b8c\u540e\u8981\u52a0\u4e00\u4e2a\u7a7a\u884c \u4f1a\u88ab\u81ea\u52a8\u7ffb\u8bd1\u6210 head meta name= description content= Nullam urna elit, malesuada eget finibus ut, ac tortor. title Lorem ipsum dolor sit amet /title /head \u4ee5\u53ca body \u4e2d\u67d0\u4e2a\u4f4d\u7f6e\u4f1a\u770b\u5230 a href= /path/to/file/file.js title= file.js class= md-source-file \u5176\u4e2dpath\u548csource\u7684\u6548\u679c:","title":"16. \u5143\u4fe1\u606f"},{"location":"syntax/nest_green_code/","text":"\u6548\u679c print Hello, world! print Hello, world! print Hello, world!","title":"20.9. \u7eff\u8272\u533a\u5757-\u4ee3\u7801"},{"location":"syntax/nest_greenred_code/","text":"\u6548\u679c print Hello, world! print Hello, our world! print Hello, my world! print Hello, our world!","title":"20.11. \u7eff\u63a5\u7ea2\u533a\u5757-\u4ee3\u7801"},{"location":"syntax/nest_list_code/","text":"\u4ee5\u4e0b3\u79cd\u6548\u679c\u76f8\u540c: \u4e00. \u4e0d\u7f29\u8fdb\uff0c\u65e0\u7a7a\u884c - list1 ```python text1 = Hello, text2 = world! print text1 + text2 ``` \u4e8c. \u7f29\u8fdb\uff0c\u65e0\u7a7a\u884c - list1 ```python text1 = Hello, text2 = world! print text1 + text2 ``` \u4e09. \u7f29\u8fdb\uff0c\u6709\u7a7a\u884c - list1 ```python text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c\u5747\u5982\u4e0b list1 text1 = Hello, text2 = world! print text1 + text2 \u6ce8\u610f: \u4e0d\u80fd\u65e0\u7f29\u8fdb\u5374\u6709\u7a7a\u884c\uff0c\u5982\u4e0b\u9762\u8fd9\u6837\u662f\u6709\u95ee\u9898\u7684\uff0c\u53ef\u4ee5\u81ea\u884c\u6d4b\u8bd5: - list1 ```python text1 = Hello, text2 = world! print text1 + text2 ```","title":"20.6. \u5217\u8868-\u4ee3\u7801\u5757"},{"location":"syntax/nest_list_list/","text":"- aaa - bbb \u6548\u679c aaa bbb","title":"20.3. \u5217\u8868-\u5217\u8868"},{"location":"syntax/nest_list_list_quote/","text":"- aaa - bbb ccc \u6548\u679c aaa bbb ccc","title":"20.13. \u5217\u8868-\u5217\u8868-\u5f15\u7528"},{"location":"syntax/nest_main/","text":"\u51e0\u4e4e\u6bcf\u79cd\u5177\u6709\u884c\u5185\u3001\u533a\u5757\u7684\u529f\u80fd\u6a21\u5757\u90fd\u80fd\u81ea\u8eab\u53ca\u76f8\u4e92\u4e4b\u95f4\u591a\u5c42\u5d4c\u5957\uff0c\u672c\u6587\u65e0\u6cd5\u4e00\u4e00\u9610\u8ff0\uff0c\u56e0\u6b64\u4ec5\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u8bf4\u660e","title":"20.1. \u4ecb\u7ecd"},{"location":"syntax/nest_note_code/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.superfences !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ```python text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. text1 = Hello, text2 = world! print text1 + text2","title":"20.5. \u6ce8\u89e3-\u4ee3\u7801\u5757"},{"location":"syntax/nest_note_list_quote/","text":"!!! note test - aaa bbb \u6548\u679c test aaa bbb","title":"20.12. \u6ce8\u89e3-\u5217\u8868-\u5f15\u7528"},{"location":"syntax/nest_note_note/","text":"!!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u6548\u679c Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"20.2. \u6ce8\u89e3-\u6ce8\u89e3"},{"location":"syntax/nest_quote_code/","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ```go import fmt func main() { fmt.Println( Hello, world ) } ``` \u6548\u679c Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. import fmt func main () { fmt . Println ( Hello, world ) } \u53ef\u4ee5\u770b\u51fa\uff0c\u7528 \u65f6\u5019\uff0c\u8981\u6bcf\u884c\u7684 \u5185\u5bb9\u7f29\u8fdb\u5bf9\u9f50\uff0c\u4e0d\u8fc7\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u7b2c\u4e00\u4e2a \u5373\u53ef \u4f46\u8981\u6ce8\u610f, \u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u80fd\u6709\u7a7a\u884c\uff0c\u5982\u679c\u6709\u7a7a\u884c\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u7ec8\u6b62\uff0c\u6bd4\u5982\uff1a ```go import fmt func main() { fmt.Println( Hello, world ) fmt.Println( last ) } ``` \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u8981\u5728\u7a7a\u884c\u4e4b\u540e\u7684\u65b0\u884c\u518d\u7528 \u8868\u793a\u672a\u4e2d\u65ad\uff0c\u6bd4\u5982\uff1a ```go import fmt func main() { fmt.Println( Hello, world ) fmt.Println( last ) } ``` import fmt func main () { fmt . Println ( Hello, world ) fmt . Println ( last ) }","title":"20.7. \u5f15\u7528-\u4ee3\u7801\u5757"},{"location":"syntax/nest_quote_quote/","text":"\u533a\u5757\u5f15\u7528 \u5d4c\u5957\u5f15\u7528 \u6548\u679c \u533a\u5757\u5f15\u7528 \u5d4c\u5957\u5f15\u7528","title":"20.4. \u5f15\u7528-\u5f15\u7528"},{"location":"syntax/nest_quote_quote_code/","text":"aaa bbb ```python text1 = Hello, text2 = world! print text1 + text2 ``` \u6548\u679c aaa bbb text1 = Hello, text2 = world! print text1 + text2","title":"20.14. \u5f15\u7528-\u5f15\u7528-\u4ee3\u7801"},{"location":"syntax/nest_red_code/","text":"\u6548\u679c print Hello, world! print Hello, world! print Hello, world!","title":"20.10. \u7ea2\u8272\u533a\u5757-\u4ee3\u7801"},{"location":"syntax/nest_yellow_code/","text":"\u6548\u679c print Hello, world! print Hello, world! print Hello, world!","title":"20.8. \u9ec4\u8272\u533a\u5757-\u4ee3\u7801"},{"location":"syntax/note_details/","text":"\u628a!!!\u6539\u6210???\uff0c\u6ce8\u610f\u6b64\u65f6\u6807\u9898\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u5426\u5219\u6837\u5f0f\u6709\u95ee\u9898 \u9002\u7528\u573a\u666f: \u6298\u53e0\u7279\u522b\u9002\u7528\u4e8eFAQ\uff0c\u5373\u6807\u9898\u91cc\u5199\u95ee\u9898\uff0c\u5185\u5bb9\u91cc\u5199\u7b54\u6848 \u4f9d\u8d56\u6a21\u5757: pymdownx.details ??? note \u6807\u9898 \u5185\u5bb9 \u6548\u679c \u6807\u9898 \u5185\u5bb9 \u6ce8\u610f: \u6298\u53e0\u4e2d\u7684\u5185\u5bb9\u5728\u6298\u53e0\u672a\u6253\u5f00\u65f6\u5019\u901a\u8fc7ctrl-f\u662f\u641c\u7d22\u4e0d\u51fa\u6765\u7684\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u9875\u9762\u4e0a\u65b9\u7684Search\u680f\u91cc\u641c\u5230","title":"14.6. \u6298\u53e0"},{"location":"syntax/note_empty-title/","text":"!!! note \u5185\u5bb9 \u6548\u679c \u5185\u5bb9","title":"14.3. \u7a7a\u6807\u9898"},{"location":"syntax/note_full/","text":"!!! note \u6807\u9898 \u5185\u5bb9 \u6548\u679c \u6807\u9898 \u5185\u5bb9","title":"14.2. \u5b8c\u6574\u683c\u5f0f"},{"location":"syntax/note_main/","text":"\u5199\u6ce8\u89e3\u4f7f\u7528\uff0c\u4f9d\u8d56\u6a21\u5757: admonition \u652f\u6301\u591a\u79cd\u6837\u5f0f\uff0c\u5982\u5e26\u6709\u6807\u9898\u3001\u65e0\u6807\u9898\u3001\u7a7a\u6807\u9898\uff0c\u8fd8\u652f\u6301\u6298\u53e0\u5f0f(\u5e38\u7528\u4e8eFAQ) \u652f\u6301\u591a\u79cd\u989c\u8272\u98ce\u683c\uff0c\u5305\u62ec\u8b66\u544a\u63d0\u793a\u3001\u9519\u8bef\u63d0\u793a\u3001\u6210\u529f\u63d0\u793a\u7b4911\u79cd\u98ce\u683c","title":"14.1. \u4ecb\u7ecd"},{"location":"syntax/note_nest/","text":"\u6ce8\u89e3\u6807\u9898\u548c\u5185\u5bb9\u652f\u6301\u591a\u79cd\u6837\u5f0f \u4f8b1. \u6807\u9898\u91cc\u4f7f\u7528\u659c\u4f53 !!! note *\u6807\u9898e* \u5185\u5bb9 \u6807\u9898 \u5185\u5bb9 \u4f8b2. \u5185\u5bb9\u91cc\u4f7f\u7528h1-h6 !!! note \u6807\u9898 # h1 ## h2 ### h3 \u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757 \u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757 \u7ae0\u8282 \u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3 \u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3 \u7ae0\u8282","title":"14.8. \u5d4c\u5957"},{"location":"syntax/note_nest/#_1","text":"\u4f8b1. \u6807\u9898\u91cc\u4f7f\u7528\u659c\u4f53 !!! note *\u6807\u9898e* \u5185\u5bb9 \u6807\u9898 \u5185\u5bb9 \u4f8b2. \u5185\u5bb9\u91cc\u4f7f\u7528h1-h6 !!! note \u6807\u9898 # h1 ## h2 ### h3","title":"\u6ce8\u89e3\u6807\u9898\u548c\u5185\u5bb9\u652f\u6301\u591a\u79cd\u6837\u5f0f"},{"location":"syntax/note_nest/#_2","text":"\u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757 \u7ae0\u8282","title":"\u6ce8\u89e3\u5d4c\u5957\u4ee3\u7801\u5757"},{"location":"syntax/note_nest/#_3","text":"\u8be6\u89c1 \u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3 \u7ae0\u8282","title":"\u6ce8\u89e3\u5d4c\u5957\u6ce8\u89e3"},{"location":"syntax/note_none-title/","text":"!!! note \u5185\u5bb9 \u6548\u679c Note \u5185\u5bb9 \u6ce8\u610f: \u65e0\u6807\u9898\u65f6\u7c7b\u578b\u9996\u5b57\u6bcd\u4f1a\u88ab\u5927\u5199\uff0c\u5982\u4e0a\u9762note\u88ab\u5927\u5199\u6210Note","title":"14.4. \u65e0\u6807\u9898"},{"location":"syntax/note_none-type/","text":"\u65e0\u7c7b\u578b\uff0c\u5219\u9ed8\u8ba4\u4e3anote \u6ce8\u610f\u8fd9\u4e2a\u65f6\u5019\u6807\u9898\u5fc5\u987b\u5199\u82f1\u6587\uff0c\u5e76\u4e14\u9996\u5b57\u6bcd\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6210\u5927\u5199: !!! title \u5185\u5bb9 \u76f8\u5f53\u4e8e !!! note Title \u5185\u5bb9 \u6548\u679c Title \u5185\u5bb9","title":"14.5. \u65e0\u7c7b\u578b"},{"location":"syntax/note_style/","text":"\u670911\u79cd\u6837\u5f0f\uff0c\u6bcf\u4e00\u79cd\u6837\u5f0f\u90fd\u652f\u6301\u591a\u79cd\u5173\u952e\u5b57\uff0c\u6bd4\u5982note\u53ef\u4ee5\u7528seealso\u66ff\u4ee3\uff0csummary\u53ef\u4ee5\u7528tldr\u66ff\u4ee3 !!! note note, seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! summary summary, tldr Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! info info, todo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! tip tip, hint, important Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! success success, check, done Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! question question, help, faq Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! warning warning, caution, attention Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! failure failure, fail, missing Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! danger danger, error Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! bug bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! quote quote, cite Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u6548\u679c note, seealso Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. summary, tldr Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. info, todo Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. tip, hint, important Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. success, check, done Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor question, help, faq Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. warning, caution, attention Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. failure, fail, missing Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. danger, error Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. quote, cite Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"14.7. 11\u79cd\u989c\u8272\u6837\u5f0f"},{"location":"syntax/paragraph/","text":"\u4e00\u4e2a\u6bb5\u843d\u8868\u793a\u4e00\u4e2a\u8bed\u6cd5\u5757\uff0c\u6bcf\u4e2a\u8bed\u6cd5\u5757\u4e4b\u95f4\u8981\u6709\u7a7a\u884c\uff0c\u82e5\u60f3\u5728\u6bb5\u5185\u5f3a\u5236\u6362\u884c\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 \u4e24\u4e2a\u4ee5\u4e0a \u7a7a\u683c\u52a0\u4e0a\u56de\u8f66\u3002 \u5efa\u8bae: \u5982\u679c\u5199\u4e00\u4e2a\u8bed\u6cd5\uff0c\u6548\u679c\u548c\u60f3\u8c61\u7684\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u6324\u5728\u4e00\u884c\u5185\uff0c\u6216\u8005\u6ca1\u6709\u7f29\u8fdb\uff0c\u5219\u591a1\u30012\u4e2a\u6362\u884c\u8bd5\u8bd5","title":"3. \u6bb5\u843d"},{"location":"syntax/quote/","text":"\u5728\u6bb5\u843d\u7684\u6bcf\u884c\u6216\u8005\u53ea\u5728\u7b2c\u4e00\u884c\u4f7f\u7528\u7b26\u53f7 \u8fd8\u53ef\u4f7f\u7528\u591a\u4e2a \u5d4c\u5957\u5f15\u7528 \uff0c\u5982\uff1a \u533a\u5757\u5f15\u7528 \u6548\u679c\uff1a \u533a\u5757\u5f15\u7528","title":"4. \u5f15\u7528"},{"location":"syntax/symbol/","text":"\u4f9d\u8d56\u6a21\u5757: pymdownx.smartsymbols \u7528\u6cd5 \u6548\u679c (tm) (c) (r) c/o +/- -- -- -- =/= 1/4 3/5 1st 2nd 3rd 1 st 2 nd 3 rd","title":"19. \u7279\u6b8a\u7b26\u53f7"},{"location":"syntax/table/","text":"\u793a\u4f8b | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | | :-- | :--: | --: | | A1 | B1 | C1 | | A2 | B2 | C2 | \u6548\u679c \u5b57\u6bb51 \u5b57\u6bb52 \u5b57\u6bb53 A1 B1 C1 A2 B2 C2 \u8be6\u89e3 \u81f3\u5c11\u75313\u884c\u7ec4\u6210 \u7b2c1\u884c\uff1a\u5b57\u6bb5\u540d | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u7b2c2\u884c\uff1a\b\u8bbe\u7f6e\u5bf9\u9f50 | :-- | :--: | --: | \u5206\u522b\u8868\u793a\u4e3a\u5de6\u5bf9\u9f50\uff0c\u5c45\u4e2d\u5bf9\u9f50\uff0c\u53c8\u5bf9\u9f50\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u5bf9\u9f50\uff0c\u5373\u4e0d\u5199\u5192\u53f7\uff0c\u4f46\u8fd9\u6837\u4e0d\u597d\u7ef4\u62a4\uff0c\u56e0\u6b64\u5efa\u8bae\u90fd\u8bbe\u7f6e\u5bf9\u9f50 \u7b2c3\u884c\u5f00\u59cb\uff1a\u6b63\u6587 | \u5185\u5bb91 | \u5185\u5bb92 | \u5185\u5bb93 | \u7a7a\u683c\u4e0d\u53ef\u5ffd\u7565 |\u5b57\u6bb51|\u5b57\u6bb52|\u5b57\u6bb53| \u8fd9\u6837\u662f\u6709\u95ee\u9898\u7684\uff0c\u7a7a\u683c1\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u591a\u4e2a\uff0c\u4f46\u4e0d\u80fd\u4e0d\u5199 \u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684|\u53ef\u7701\u7565 | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837 \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 \u4e0d\u4ec5\u662f\u7b2c1\u884c\uff0c\u6bcf\u4e00\u884c\u90fd\u53ef\u4ee5\u8fd9\u4e48\u7701\u7565","title":"5. \u8868\u683c"},{"location":"syntax/table/#_1","text":"| \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | | :-- | :--: | --: | | A1 | B1 | C1 | | A2 | B2 | C2 | \u6548\u679c \u5b57\u6bb51 \u5b57\u6bb52 \u5b57\u6bb53 A1 B1 C1 A2 B2 C2","title":"\u793a\u4f8b"},{"location":"syntax/table/#_2","text":"\u81f3\u5c11\u75313\u884c\u7ec4\u6210 \u7b2c1\u884c\uff1a\u5b57\u6bb5\u540d | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u7b2c2\u884c\uff1a\b\u8bbe\u7f6e\u5bf9\u9f50 | :-- | :--: | --: | \u5206\u522b\u8868\u793a\u4e3a\u5de6\u5bf9\u9f50\uff0c\u5c45\u4e2d\u5bf9\u9f50\uff0c\u53c8\u5bf9\u9f50\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\u5bf9\u9f50\uff0c\u5373\u4e0d\u5199\u5192\u53f7\uff0c\u4f46\u8fd9\u6837\u4e0d\u597d\u7ef4\u62a4\uff0c\u56e0\u6b64\u5efa\u8bae\u90fd\u8bbe\u7f6e\u5bf9\u9f50 \u7b2c3\u884c\u5f00\u59cb\uff1a\u6b63\u6587 | \u5185\u5bb91 | \u5185\u5bb92 | \u5185\u5bb93 | \u7a7a\u683c\u4e0d\u53ef\u5ffd\u7565 |\u5b57\u6bb51|\u5b57\u6bb52|\u5b57\u6bb53| \u8fd9\u6837\u662f\u6709\u95ee\u9898\u7684\uff0c\u7a7a\u683c1\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u591a\u4e2a\uff0c\u4f46\u4e0d\u80fd\u4e0d\u5199 \u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684|\u53ef\u7701\u7565 | \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 | \u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837 \u5b57\u6bb51 | \u5b57\u6bb52 | \u5b57\u6bb53 \u4e0d\u4ec5\u662f\u7b2c1\u884c\uff0c\u6bcf\u4e00\u884c\u90fd\u53ef\u4ee5\u8fd9\u4e48\u7701\u7565","title":"\u8be6\u89e3"}]}